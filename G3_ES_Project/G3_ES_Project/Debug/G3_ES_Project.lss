
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  0000098c  00000a20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800128  00800128  00000a48  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001317  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a51  00000000  00000000  00001eb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007c5  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  000030cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000544  00000000  00000000  000032b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007bd  00000000  00000000  000037f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00003fb5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x18e>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	ec e8       	ldi	r30, 0x8C	; 140
 37c:	f9 e0       	ldi	r31, 0x09	; 9
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a8 32       	cpi	r26, 0x28	; 40
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a8 e2       	ldi	r26, 0x28	; 40
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a2 33       	cpi	r26, 0x32	; 50
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 06 03 	call	0x60c	; 0x60c <main>
 39e:	0c 94 c4 04 	jmp	0x988	; 0x988 <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <OLED_clear>:
void OLED_write_command(char c){
	oled_command_reg[0] = c;
}

void OLED_write_data(char c){
	oled_data_reg[0] = c;
 3a6:	20 eb       	ldi	r18, 0xB0	; 176
 3a8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 3ac:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 3b0:	20 83       	st	Z, r18
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_data_reg>
 3ba:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_data_reg+0x1>
 3be:	10 82       	st	Z, r1
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	c9 f7       	brne	.-14     	; 0x3b6 <OLED_clear+0x10>
 3c4:	2f 5f       	subi	r18, 0xFF	; 255
 3c6:	28 3b       	cpi	r18, 0xB8	; 184
 3c8:	79 f7       	brne	.-34     	; 0x3a8 <OLED_clear+0x2>
 3ca:	08 95       	ret

000003cc <OLED_init>:
 3cc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 3d0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 3d4:	8e ea       	ldi	r24, 0xAE	; 174
 3d6:	80 83       	st	Z, r24
 3d8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 3dc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 3e0:	81 ea       	ldi	r24, 0xA1	; 161
 3e2:	80 83       	st	Z, r24
 3e4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 3e8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 3ec:	8a ed       	ldi	r24, 0xDA	; 218
 3ee:	80 83       	st	Z, r24
 3f0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 3f4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 3f8:	82 e1       	ldi	r24, 0x12	; 18
 3fa:	80 83       	st	Z, r24
 3fc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 400:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 404:	88 ec       	ldi	r24, 0xC8	; 200
 406:	80 83       	st	Z, r24
 408:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 40c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 410:	88 ea       	ldi	r24, 0xA8	; 168
 412:	80 83       	st	Z, r24
 414:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 418:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 41c:	8f e3       	ldi	r24, 0x3F	; 63
 41e:	80 83       	st	Z, r24
 420:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 424:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 428:	85 ed       	ldi	r24, 0xD5	; 213
 42a:	80 83       	st	Z, r24
 42c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 430:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 434:	80 e8       	ldi	r24, 0x80	; 128
 436:	80 83       	st	Z, r24
 438:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 43c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 440:	81 e8       	ldi	r24, 0x81	; 129
 442:	80 83       	st	Z, r24
 444:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 448:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 44c:	80 e5       	ldi	r24, 0x50	; 80
 44e:	80 83       	st	Z, r24
 450:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 454:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 458:	89 ed       	ldi	r24, 0xD9	; 217
 45a:	80 83       	st	Z, r24
 45c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 460:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 464:	81 e2       	ldi	r24, 0x21	; 33
 466:	80 83       	st	Z, r24
 468:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 46c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 470:	80 e2       	ldi	r24, 0x20	; 32
 472:	80 83       	st	Z, r24
 474:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 478:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 47c:	82 e0       	ldi	r24, 0x02	; 2
 47e:	80 83       	st	Z, r24
 480:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 484:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 488:	8b ed       	ldi	r24, 0xDB	; 219
 48a:	80 83       	st	Z, r24
 48c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 490:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 494:	80 e3       	ldi	r24, 0x30	; 48
 496:	80 83       	st	Z, r24
 498:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 49c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4a0:	8d ea       	ldi	r24, 0xAD	; 173
 4a2:	80 83       	st	Z, r24
 4a4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 4a8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4ac:	10 82       	st	Z, r1
 4ae:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 4b2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4b6:	84 ea       	ldi	r24, 0xA4	; 164
 4b8:	80 83       	st	Z, r24
 4ba:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 4be:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4c2:	86 ea       	ldi	r24, 0xA6	; 166
 4c4:	80 83       	st	Z, r24
 4c6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 4ca:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4ce:	8f ea       	ldi	r24, 0xAF	; 175
 4d0:	80 83       	st	Z, r24
 4d2:	30 eb       	ldi	r19, 0xB0	; 176
 4d4:	2f ef       	ldi	r18, 0xFF	; 255
 4d6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 4da:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 4de:	30 83       	st	Z, r19
 4e0:	80 e8       	ldi	r24, 0x80	; 128
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_data_reg>
 4e8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_data_reg+0x1>
 4ec:	20 83       	st	Z, r18
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	c9 f7       	brne	.-14     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4f2:	3f 5f       	subi	r19, 0xFF	; 255
 4f4:	38 3b       	cpi	r19, 0xB8	; 184
 4f6:	79 f7       	brne	.-34     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	8f e7       	ldi	r24, 0x7F	; 127
 4fc:	97 e0       	ldi	r25, 0x07	; 7
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	80 40       	sbci	r24, 0x00	; 0
 502:	90 40       	sbci	r25, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 506:	00 c0       	rjmp	.+0      	; 0x508 <__stack+0x9>
 508:	00 00       	nop
 50a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <OLED_clear>
 50e:	08 95       	ret

00000510 <OLED_print>:
}

void OLED_print(char c){
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	f9 01       	movw	r30, r18
 516:	ee 0f       	add	r30, r30
 518:	ff 1f       	adc	r31, r31
 51a:	ee 0f       	add	r30, r30
 51c:	ff 1f       	adc	r31, r31
 51e:	ee 0f       	add	r30, r30
 520:	ff 1f       	adc	r31, r31
 522:	e0 59       	subi	r30, 0x90	; 144
 524:	f0 40       	sbci	r31, 0x00	; 0
 526:	22 0f       	add	r18, r18
 528:	33 1f       	adc	r19, r19
 52a:	22 0f       	add	r18, r18
 52c:	33 1f       	adc	r19, r19
 52e:	22 0f       	add	r18, r18
 530:	33 1f       	adc	r19, r19
 532:	28 58       	subi	r18, 0x88	; 136
 534:	30 40       	sbci	r19, 0x00	; 0
	int pos = c - 32;
	for (int i = 0; i < 8; i++){
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
 536:	94 91       	lpm	r25, Z
void OLED_write_command(char c){
	oled_command_reg[0] = c;
}

void OLED_write_data(char c){
	oled_data_reg[0] = c;
 538:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_data_reg>
 53c:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_data_reg+0x1>
 540:	9c 93       	st	X, r25
 542:	31 96       	adiw	r30, 0x01	; 1
}

void OLED_print(char c){
	int pos = c - 32;
	for (int i = 0; i < 8; i++){
 544:	e2 17       	cp	r30, r18
 546:	f3 07       	cpc	r31, r19
 548:	b1 f7       	brne	.-20     	; 0x536 <OLED_print+0x26>
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
	}
}
 54a:	08 95       	ret

0000054c <OLED_goto_line>:
	OLED_goto_column(column);
	//for now, when we want to write something, we will be writing from the leftmost positions so as to not deal with the columns at the beginning	
}

void OLED_goto_line(uint8_t line){
	OLED_write_command(0xb0 + (line));		
 54c:	80 55       	subi	r24, 0x50	; 80
	OLED_pos(row, column);
	OLED_print(' ');
}

void OLED_write_command(char c){
	oled_command_reg[0] = c;
 54e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 552:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 556:	80 83       	st	Z, r24
 558:	08 95       	ret

0000055a <OLED_goto_column>:
 55a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 55e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 562:	80 83       	st	Z, r24
 564:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command_reg>
 568:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command_reg+0x1>
 56c:	80 e1       	ldi	r24, 0x10	; 16
 56e:	80 83       	st	Z, r24
 570:	08 95       	ret

00000572 <OLED_pos>:
	for (int i = 0; i < 8; i++){
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
	}
}

void OLED_pos(uint8_t row, uint8_t column){
 572:	cf 93       	push	r28
 574:	c6 2f       	mov	r28, r22
	OLED_goto_line(row);
 576:	0e 94 a6 02 	call	0x54c	; 0x54c <OLED_goto_line>
	OLED_goto_column(column);
 57a:	8c 2f       	mov	r24, r28
 57c:	0e 94 ad 02 	call	0x55a	; 0x55a <OLED_goto_column>
	//for now, when we want to write something, we will be writing from the leftmost positions so as to not deal with the columns at the beginning	
}
 580:	cf 91       	pop	r28
 582:	08 95       	ret

00000584 <OLED_clear_position>:
		}
	}
}

void OLED_clear_position(uint8_t row, uint8_t column){
	OLED_pos(row, column);
 584:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	OLED_print(' ');
 588:	80 e2       	ldi	r24, 0x20	; 32
 58a:	0e 94 88 02 	call	0x510	; 0x510 <OLED_print>
 58e:	08 95       	ret

00000590 <OLED_print_string>:
	//OLED_write_command(0x10);
	OLED_write_command(column);
	OLED_write_command(0x10);
}

void OLED_print_string(char* str){
 590:	cf 93       	push	r28
 592:	df 93       	push	r29
 594:	ec 01       	movw	r28, r24
	int i = 0;
	while(str[i] != '\0'){
 596:	88 81       	ld	r24, Y
 598:	88 23       	and	r24, r24
 59a:	31 f0       	breq	.+12     	; 0x5a8 <OLED_print_string+0x18>
 59c:	21 96       	adiw	r28, 0x01	; 1
		OLED_print(str[i]);
 59e:	0e 94 88 02 	call	0x510	; 0x510 <OLED_print>
	OLED_write_command(0x10);
}

void OLED_print_string(char* str){
	int i = 0;
	while(str[i] != '\0'){
 5a2:	89 91       	ld	r24, Y+
 5a4:	81 11       	cpse	r24, r1
 5a6:	fb cf       	rjmp	.-10     	; 0x59e <OLED_print_string+0xe>
		OLED_print(str[i]);
		i++;
	}
}
 5a8:	df 91       	pop	r29
 5aa:	cf 91       	pop	r28
 5ac:	08 95       	ret

000005ae <display_menu>:

void display_menu(){
	OLED_pos(0,0);
 5ae:	60 e0       	ldi	r22, 0x00	; 0
 5b0:	80 e0       	ldi	r24, 0x00	; 0
 5b2:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	OLED_print('>');
 5b6:	8e e3       	ldi	r24, 0x3E	; 62
 5b8:	0e 94 88 02 	call	0x510	; 0x510 <OLED_print>
	OLED_pos(0, 15);
 5bc:	6f e0       	ldi	r22, 0x0F	; 15
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	//OLED_print('X');
	OLED_print_string("Hello world!");
 5c4:	8a e0       	ldi	r24, 0x0A	; 10
 5c6:	91 e0       	ldi	r25, 0x01	; 1
 5c8:	0e 94 c8 02 	call	0x590	; 0x590 <OLED_print_string>
	OLED_pos(2, 15);
 5cc:	6f e0       	ldi	r22, 0x0F	; 15
 5ce:	82 e0       	ldi	r24, 0x02	; 2
 5d0:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	OLED_print_string("Banana");
 5d4:	87 e1       	ldi	r24, 0x17	; 23
 5d6:	91 e0       	ldi	r25, 0x01	; 1
 5d8:	0e 94 c8 02 	call	0x590	; 0x590 <OLED_print_string>
	OLED_pos(4, 15);
 5dc:	6f e0       	ldi	r22, 0x0F	; 15
 5de:	84 e0       	ldi	r24, 0x04	; 4
 5e0:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	OLED_print_string("NTNU");
 5e4:	8e e1       	ldi	r24, 0x1E	; 30
 5e6:	91 e0       	ldi	r25, 0x01	; 1
 5e8:	0e 94 c8 02 	call	0x590	; 0x590 <OLED_print_string>
	OLED_pos(6, 15);
 5ec:	6f e0       	ldi	r22, 0x0F	; 15
 5ee:	86 e0       	ldi	r24, 0x06	; 6
 5f0:	0e 94 b9 02 	call	0x572	; 0x572 <OLED_pos>
	OLED_print_string("Amna");
 5f4:	83 e2       	ldi	r24, 0x23	; 35
 5f6:	91 e0       	ldi	r25, 0x01	; 1
 5f8:	0e 94 c8 02 	call	0x590	; 0x590 <OLED_print_string>
 5fc:	08 95       	ret

000005fe <SRAM_init>:
	//DDRC |= (1 << PC3);
	//PORTC = 0x04;
	volatile char *ext_ram = (char *) 0x1800;
	//printf("\r\n\n\nInitiating SRAM...\r\n");
	
	MCUCR |= (1<<SRE);
 5fe:	85 b7       	in	r24, 0x35	; 53
 600:	80 68       	ori	r24, 0x80	; 128
 602:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<5);
 604:	80 b7       	in	r24, 0x30	; 48
 606:	80 62       	ori	r24, 0x20	; 32
 608:	80 bf       	out	0x30, r24	; 48
 60a:	08 95       	ret

0000060c <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
	USART_Init(MYUBRR);
 60c:	8f e1       	ldi	r24, 0x1F	; 31
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 26 03 	call	0x64c	; 0x64c <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
 614:	61 e3       	ldi	r22, 0x31	; 49
 616:	73 e0       	ldi	r23, 0x03	; 3
 618:	8d e2       	ldi	r24, 0x2D	; 45
 61a:	93 e0       	ldi	r25, 0x03	; 3
 61c:	0e 94 35 03 	call	0x66a	; 0x66a <fdevopen>
	
	SRAM_init();
 620:	0e 94 ff 02 	call	0x5fe	; 0x5fe <SRAM_init>
	OLED_init();
 624:	0e 94 e6 01 	call	0x3cc	; 0x3cc <OLED_init>
	
	display_menu();
 628:	0e 94 d7 02 	call	0x5ae	; 0x5ae <display_menu>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 62c:	2f ef       	ldi	r18, 0xFF	; 255
 62e:	8f e7       	ldi	r24, 0x7F	; 127
 630:	97 e0       	ldi	r25, 0x07	; 7
 632:	21 50       	subi	r18, 0x01	; 1
 634:	80 40       	sbci	r24, 0x00	; 0
 636:	90 40       	sbci	r25, 0x00	; 0
 638:	e1 f7       	brne	.-8      	; 0x632 <main+0x26>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <main+0x30>
 63c:	00 00       	nop
	
	_delay_ms(500);
	OLED_clear_position(0,0);
 63e:	60 e0       	ldi	r22, 0x00	; 0
 640:	80 e0       	ldi	r24, 0x00	; 0
 642:	0e 94 c2 02 	call	0x584	; 0x584 <OLED_clear_position>
	while (1) {
		char c = USART_Receive();
		
		printf("Character received: %c\r\n", c);
	}*/
}
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	08 95       	ret

0000064c <USART_Init>:
#include "uart.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR1H = (unsigned char)(ubrr>>8);
 64c:	9c bf       	out	0x3c, r25	; 60
	UBRR1L = (unsigned char)ubrr;
 64e:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
 650:	88 e1       	ldi	r24, 0x18	; 24
 652:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8data, 2stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(3<<UCSZ10);
 654:	8e e8       	ldi	r24, 0x8E	; 142
 656:	8c bf       	out	0x3c, r24	; 60
 658:	08 95       	ret

0000065a <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR1A & (1<<UDRE1)) );
 65a:	15 9b       	sbis	0x02, 5	; 2
 65c:	fe cf       	rjmp	.-4      	; 0x65a <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR1 = data;
 65e:	83 b9       	out	0x03, r24	; 3
 660:	08 95       	ret

00000662 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR1A & (1<<RXC1)) );
 662:	17 9b       	sbis	0x02, 7	; 2
 664:	fe cf       	rjmp	.-4      	; 0x662 <USART_Receive>
	/* Get and return received data from buffer */
	return UDR1;
 666:	83 b1       	in	r24, 0x03	; 3
 668:	08 95       	ret

0000066a <fdevopen>:
 66a:	0f 93       	push	r16
 66c:	1f 93       	push	r17
 66e:	cf 93       	push	r28
 670:	df 93       	push	r29
 672:	00 97       	sbiw	r24, 0x00	; 0
 674:	31 f4       	brne	.+12     	; 0x682 <fdevopen+0x18>
 676:	61 15       	cp	r22, r1
 678:	71 05       	cpc	r23, r1
 67a:	19 f4       	brne	.+6      	; 0x682 <fdevopen+0x18>
 67c:	80 e0       	ldi	r24, 0x00	; 0
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	3a c0       	rjmp	.+116    	; 0x6f6 <fdevopen+0x8c>
 682:	8b 01       	movw	r16, r22
 684:	ec 01       	movw	r28, r24
 686:	6e e0       	ldi	r22, 0x0E	; 14
 688:	70 e0       	ldi	r23, 0x00	; 0
 68a:	81 e0       	ldi	r24, 0x01	; 1
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 80 03 	call	0x700	; 0x700 <calloc>
 692:	fc 01       	movw	r30, r24
 694:	89 2b       	or	r24, r25
 696:	91 f3       	breq	.-28     	; 0x67c <fdevopen+0x12>
 698:	80 e8       	ldi	r24, 0x80	; 128
 69a:	83 83       	std	Z+3, r24	; 0x03
 69c:	01 15       	cp	r16, r1
 69e:	11 05       	cpc	r17, r1
 6a0:	71 f0       	breq	.+28     	; 0x6be <fdevopen+0x54>
 6a2:	13 87       	std	Z+11, r17	; 0x0b
 6a4:	02 87       	std	Z+10, r16	; 0x0a
 6a6:	81 e8       	ldi	r24, 0x81	; 129
 6a8:	83 83       	std	Z+3, r24	; 0x03
 6aa:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 6ae:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__data_end+0x1>
 6b2:	89 2b       	or	r24, r25
 6b4:	21 f4       	brne	.+8      	; 0x6be <fdevopen+0x54>
 6b6:	f0 93 29 01 	sts	0x0129, r31	; 0x800129 <__data_end+0x1>
 6ba:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <__data_end>
 6be:	20 97       	sbiw	r28, 0x00	; 0
 6c0:	c9 f0       	breq	.+50     	; 0x6f4 <fdevopen+0x8a>
 6c2:	d1 87       	std	Z+9, r29	; 0x09
 6c4:	c0 87       	std	Z+8, r28	; 0x08
 6c6:	83 81       	ldd	r24, Z+3	; 0x03
 6c8:	82 60       	ori	r24, 0x02	; 2
 6ca:	83 83       	std	Z+3, r24	; 0x03
 6cc:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end+0x2>
 6d0:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x3>
 6d4:	89 2b       	or	r24, r25
 6d6:	71 f4       	brne	.+28     	; 0x6f4 <fdevopen+0x8a>
 6d8:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <__data_end+0x3>
 6dc:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <__data_end+0x2>
 6e0:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__data_end+0x4>
 6e4:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__data_end+0x5>
 6e8:	89 2b       	or	r24, r25
 6ea:	21 f4       	brne	.+8      	; 0x6f4 <fdevopen+0x8a>
 6ec:	f0 93 2d 01 	sts	0x012D, r31	; 0x80012d <__data_end+0x5>
 6f0:	e0 93 2c 01 	sts	0x012C, r30	; 0x80012c <__data_end+0x4>
 6f4:	cf 01       	movw	r24, r30
 6f6:	df 91       	pop	r29
 6f8:	cf 91       	pop	r28
 6fa:	1f 91       	pop	r17
 6fc:	0f 91       	pop	r16
 6fe:	08 95       	ret

00000700 <calloc>:
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	86 9f       	mul	r24, r22
 70a:	80 01       	movw	r16, r0
 70c:	87 9f       	mul	r24, r23
 70e:	10 0d       	add	r17, r0
 710:	96 9f       	mul	r25, r22
 712:	10 0d       	add	r17, r0
 714:	11 24       	eor	r1, r1
 716:	c8 01       	movw	r24, r16
 718:	0e 94 9c 03 	call	0x738	; 0x738 <malloc>
 71c:	ec 01       	movw	r28, r24
 71e:	00 97       	sbiw	r24, 0x00	; 0
 720:	29 f0       	breq	.+10     	; 0x72c <calloc+0x2c>
 722:	a8 01       	movw	r20, r16
 724:	60 e0       	ldi	r22, 0x00	; 0
 726:	70 e0       	ldi	r23, 0x00	; 0
 728:	0e 94 bd 04 	call	0x97a	; 0x97a <memset>
 72c:	ce 01       	movw	r24, r28
 72e:	df 91       	pop	r29
 730:	cf 91       	pop	r28
 732:	1f 91       	pop	r17
 734:	0f 91       	pop	r16
 736:	08 95       	ret

00000738 <malloc>:
 738:	0f 93       	push	r16
 73a:	1f 93       	push	r17
 73c:	cf 93       	push	r28
 73e:	df 93       	push	r29
 740:	82 30       	cpi	r24, 0x02	; 2
 742:	91 05       	cpc	r25, r1
 744:	10 f4       	brcc	.+4      	; 0x74a <malloc+0x12>
 746:	82 e0       	ldi	r24, 0x02	; 2
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	e0 91 30 01 	lds	r30, 0x0130	; 0x800130 <__flp>
 74e:	f0 91 31 01 	lds	r31, 0x0131	; 0x800131 <__flp+0x1>
 752:	20 e0       	ldi	r18, 0x00	; 0
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	a0 e0       	ldi	r26, 0x00	; 0
 758:	b0 e0       	ldi	r27, 0x00	; 0
 75a:	30 97       	sbiw	r30, 0x00	; 0
 75c:	19 f1       	breq	.+70     	; 0x7a4 <malloc+0x6c>
 75e:	40 81       	ld	r20, Z
 760:	51 81       	ldd	r21, Z+1	; 0x01
 762:	02 81       	ldd	r16, Z+2	; 0x02
 764:	13 81       	ldd	r17, Z+3	; 0x03
 766:	48 17       	cp	r20, r24
 768:	59 07       	cpc	r21, r25
 76a:	c8 f0       	brcs	.+50     	; 0x79e <malloc+0x66>
 76c:	84 17       	cp	r24, r20
 76e:	95 07       	cpc	r25, r21
 770:	69 f4       	brne	.+26     	; 0x78c <malloc+0x54>
 772:	10 97       	sbiw	r26, 0x00	; 0
 774:	31 f0       	breq	.+12     	; 0x782 <malloc+0x4a>
 776:	12 96       	adiw	r26, 0x02	; 2
 778:	0c 93       	st	X, r16
 77a:	12 97       	sbiw	r26, 0x02	; 2
 77c:	13 96       	adiw	r26, 0x03	; 3
 77e:	1c 93       	st	X, r17
 780:	27 c0       	rjmp	.+78     	; 0x7d0 <malloc+0x98>
 782:	00 93 30 01 	sts	0x0130, r16	; 0x800130 <__flp>
 786:	10 93 31 01 	sts	0x0131, r17	; 0x800131 <__flp+0x1>
 78a:	22 c0       	rjmp	.+68     	; 0x7d0 <malloc+0x98>
 78c:	21 15       	cp	r18, r1
 78e:	31 05       	cpc	r19, r1
 790:	19 f0       	breq	.+6      	; 0x798 <malloc+0x60>
 792:	42 17       	cp	r20, r18
 794:	53 07       	cpc	r21, r19
 796:	18 f4       	brcc	.+6      	; 0x79e <malloc+0x66>
 798:	9a 01       	movw	r18, r20
 79a:	bd 01       	movw	r22, r26
 79c:	ef 01       	movw	r28, r30
 79e:	df 01       	movw	r26, r30
 7a0:	f8 01       	movw	r30, r16
 7a2:	db cf       	rjmp	.-74     	; 0x75a <malloc+0x22>
 7a4:	21 15       	cp	r18, r1
 7a6:	31 05       	cpc	r19, r1
 7a8:	f9 f0       	breq	.+62     	; 0x7e8 <malloc+0xb0>
 7aa:	28 1b       	sub	r18, r24
 7ac:	39 0b       	sbc	r19, r25
 7ae:	24 30       	cpi	r18, 0x04	; 4
 7b0:	31 05       	cpc	r19, r1
 7b2:	80 f4       	brcc	.+32     	; 0x7d4 <malloc+0x9c>
 7b4:	8a 81       	ldd	r24, Y+2	; 0x02
 7b6:	9b 81       	ldd	r25, Y+3	; 0x03
 7b8:	61 15       	cp	r22, r1
 7ba:	71 05       	cpc	r23, r1
 7bc:	21 f0       	breq	.+8      	; 0x7c6 <malloc+0x8e>
 7be:	fb 01       	movw	r30, r22
 7c0:	93 83       	std	Z+3, r25	; 0x03
 7c2:	82 83       	std	Z+2, r24	; 0x02
 7c4:	04 c0       	rjmp	.+8      	; 0x7ce <malloc+0x96>
 7c6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__flp+0x1>
 7ca:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__flp>
 7ce:	fe 01       	movw	r30, r28
 7d0:	32 96       	adiw	r30, 0x02	; 2
 7d2:	44 c0       	rjmp	.+136    	; 0x85c <malloc+0x124>
 7d4:	fe 01       	movw	r30, r28
 7d6:	e2 0f       	add	r30, r18
 7d8:	f3 1f       	adc	r31, r19
 7da:	81 93       	st	Z+, r24
 7dc:	91 93       	st	Z+, r25
 7de:	22 50       	subi	r18, 0x02	; 2
 7e0:	31 09       	sbc	r19, r1
 7e2:	39 83       	std	Y+1, r19	; 0x01
 7e4:	28 83       	st	Y, r18
 7e6:	3a c0       	rjmp	.+116    	; 0x85c <malloc+0x124>
 7e8:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__brkval>
 7ec:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__brkval+0x1>
 7f0:	23 2b       	or	r18, r19
 7f2:	41 f4       	brne	.+16     	; 0x804 <malloc+0xcc>
 7f4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 7f8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 7fc:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <__brkval+0x1>
 800:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <__brkval>
 804:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 808:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 80c:	21 15       	cp	r18, r1
 80e:	31 05       	cpc	r19, r1
 810:	41 f4       	brne	.+16     	; 0x822 <malloc+0xea>
 812:	2d b7       	in	r18, 0x3d	; 61
 814:	3e b7       	in	r19, 0x3e	; 62
 816:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 81a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 81e:	24 1b       	sub	r18, r20
 820:	35 0b       	sbc	r19, r21
 822:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <__brkval>
 826:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <__brkval+0x1>
 82a:	e2 17       	cp	r30, r18
 82c:	f3 07       	cpc	r31, r19
 82e:	a0 f4       	brcc	.+40     	; 0x858 <malloc+0x120>
 830:	2e 1b       	sub	r18, r30
 832:	3f 0b       	sbc	r19, r31
 834:	28 17       	cp	r18, r24
 836:	39 07       	cpc	r19, r25
 838:	78 f0       	brcs	.+30     	; 0x858 <malloc+0x120>
 83a:	ac 01       	movw	r20, r24
 83c:	4e 5f       	subi	r20, 0xFE	; 254
 83e:	5f 4f       	sbci	r21, 0xFF	; 255
 840:	24 17       	cp	r18, r20
 842:	35 07       	cpc	r19, r21
 844:	48 f0       	brcs	.+18     	; 0x858 <malloc+0x120>
 846:	4e 0f       	add	r20, r30
 848:	5f 1f       	adc	r21, r31
 84a:	50 93 2f 01 	sts	0x012F, r21	; 0x80012f <__brkval+0x1>
 84e:	40 93 2e 01 	sts	0x012E, r20	; 0x80012e <__brkval>
 852:	81 93       	st	Z+, r24
 854:	91 93       	st	Z+, r25
 856:	02 c0       	rjmp	.+4      	; 0x85c <malloc+0x124>
 858:	e0 e0       	ldi	r30, 0x00	; 0
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	cf 01       	movw	r24, r30
 85e:	df 91       	pop	r29
 860:	cf 91       	pop	r28
 862:	1f 91       	pop	r17
 864:	0f 91       	pop	r16
 866:	08 95       	ret

00000868 <free>:
 868:	cf 93       	push	r28
 86a:	df 93       	push	r29
 86c:	00 97       	sbiw	r24, 0x00	; 0
 86e:	09 f4       	brne	.+2      	; 0x872 <free+0xa>
 870:	81 c0       	rjmp	.+258    	; 0x974 <free+0x10c>
 872:	fc 01       	movw	r30, r24
 874:	32 97       	sbiw	r30, 0x02	; 2
 876:	13 82       	std	Z+3, r1	; 0x03
 878:	12 82       	std	Z+2, r1	; 0x02
 87a:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <__flp>
 87e:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <__flp+0x1>
 882:	10 97       	sbiw	r26, 0x00	; 0
 884:	81 f4       	brne	.+32     	; 0x8a6 <free+0x3e>
 886:	20 81       	ld	r18, Z
 888:	31 81       	ldd	r19, Z+1	; 0x01
 88a:	82 0f       	add	r24, r18
 88c:	93 1f       	adc	r25, r19
 88e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__brkval>
 892:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__brkval+0x1>
 896:	28 17       	cp	r18, r24
 898:	39 07       	cpc	r19, r25
 89a:	51 f5       	brne	.+84     	; 0x8f0 <free+0x88>
 89c:	f0 93 2f 01 	sts	0x012F, r31	; 0x80012f <__brkval+0x1>
 8a0:	e0 93 2e 01 	sts	0x012E, r30	; 0x80012e <__brkval>
 8a4:	67 c0       	rjmp	.+206    	; 0x974 <free+0x10c>
 8a6:	ed 01       	movw	r28, r26
 8a8:	20 e0       	ldi	r18, 0x00	; 0
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	ce 17       	cp	r28, r30
 8ae:	df 07       	cpc	r29, r31
 8b0:	40 f4       	brcc	.+16     	; 0x8c2 <free+0x5a>
 8b2:	4a 81       	ldd	r20, Y+2	; 0x02
 8b4:	5b 81       	ldd	r21, Y+3	; 0x03
 8b6:	9e 01       	movw	r18, r28
 8b8:	41 15       	cp	r20, r1
 8ba:	51 05       	cpc	r21, r1
 8bc:	f1 f0       	breq	.+60     	; 0x8fa <free+0x92>
 8be:	ea 01       	movw	r28, r20
 8c0:	f5 cf       	rjmp	.-22     	; 0x8ac <free+0x44>
 8c2:	d3 83       	std	Z+3, r29	; 0x03
 8c4:	c2 83       	std	Z+2, r28	; 0x02
 8c6:	40 81       	ld	r20, Z
 8c8:	51 81       	ldd	r21, Z+1	; 0x01
 8ca:	84 0f       	add	r24, r20
 8cc:	95 1f       	adc	r25, r21
 8ce:	c8 17       	cp	r28, r24
 8d0:	d9 07       	cpc	r29, r25
 8d2:	59 f4       	brne	.+22     	; 0x8ea <free+0x82>
 8d4:	88 81       	ld	r24, Y
 8d6:	99 81       	ldd	r25, Y+1	; 0x01
 8d8:	84 0f       	add	r24, r20
 8da:	95 1f       	adc	r25, r21
 8dc:	02 96       	adiw	r24, 0x02	; 2
 8de:	91 83       	std	Z+1, r25	; 0x01
 8e0:	80 83       	st	Z, r24
 8e2:	8a 81       	ldd	r24, Y+2	; 0x02
 8e4:	9b 81       	ldd	r25, Y+3	; 0x03
 8e6:	93 83       	std	Z+3, r25	; 0x03
 8e8:	82 83       	std	Z+2, r24	; 0x02
 8ea:	21 15       	cp	r18, r1
 8ec:	31 05       	cpc	r19, r1
 8ee:	29 f4       	brne	.+10     	; 0x8fa <free+0x92>
 8f0:	f0 93 31 01 	sts	0x0131, r31	; 0x800131 <__flp+0x1>
 8f4:	e0 93 30 01 	sts	0x0130, r30	; 0x800130 <__flp>
 8f8:	3d c0       	rjmp	.+122    	; 0x974 <free+0x10c>
 8fa:	e9 01       	movw	r28, r18
 8fc:	fb 83       	std	Y+3, r31	; 0x03
 8fe:	ea 83       	std	Y+2, r30	; 0x02
 900:	49 91       	ld	r20, Y+
 902:	59 91       	ld	r21, Y+
 904:	c4 0f       	add	r28, r20
 906:	d5 1f       	adc	r29, r21
 908:	ec 17       	cp	r30, r28
 90a:	fd 07       	cpc	r31, r29
 90c:	61 f4       	brne	.+24     	; 0x926 <free+0xbe>
 90e:	80 81       	ld	r24, Z
 910:	91 81       	ldd	r25, Z+1	; 0x01
 912:	84 0f       	add	r24, r20
 914:	95 1f       	adc	r25, r21
 916:	02 96       	adiw	r24, 0x02	; 2
 918:	e9 01       	movw	r28, r18
 91a:	99 83       	std	Y+1, r25	; 0x01
 91c:	88 83       	st	Y, r24
 91e:	82 81       	ldd	r24, Z+2	; 0x02
 920:	93 81       	ldd	r25, Z+3	; 0x03
 922:	9b 83       	std	Y+3, r25	; 0x03
 924:	8a 83       	std	Y+2, r24	; 0x02
 926:	e0 e0       	ldi	r30, 0x00	; 0
 928:	f0 e0       	ldi	r31, 0x00	; 0
 92a:	12 96       	adiw	r26, 0x02	; 2
 92c:	8d 91       	ld	r24, X+
 92e:	9c 91       	ld	r25, X
 930:	13 97       	sbiw	r26, 0x03	; 3
 932:	00 97       	sbiw	r24, 0x00	; 0
 934:	19 f0       	breq	.+6      	; 0x93c <free+0xd4>
 936:	fd 01       	movw	r30, r26
 938:	dc 01       	movw	r26, r24
 93a:	f7 cf       	rjmp	.-18     	; 0x92a <free+0xc2>
 93c:	8d 91       	ld	r24, X+
 93e:	9c 91       	ld	r25, X
 940:	11 97       	sbiw	r26, 0x01	; 1
 942:	9d 01       	movw	r18, r26
 944:	2e 5f       	subi	r18, 0xFE	; 254
 946:	3f 4f       	sbci	r19, 0xFF	; 255
 948:	82 0f       	add	r24, r18
 94a:	93 1f       	adc	r25, r19
 94c:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__brkval>
 950:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__brkval+0x1>
 954:	28 17       	cp	r18, r24
 956:	39 07       	cpc	r19, r25
 958:	69 f4       	brne	.+26     	; 0x974 <free+0x10c>
 95a:	30 97       	sbiw	r30, 0x00	; 0
 95c:	29 f4       	brne	.+10     	; 0x968 <free+0x100>
 95e:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <__flp+0x1>
 962:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__flp>
 966:	02 c0       	rjmp	.+4      	; 0x96c <free+0x104>
 968:	13 82       	std	Z+3, r1	; 0x03
 96a:	12 82       	std	Z+2, r1	; 0x02
 96c:	b0 93 2f 01 	sts	0x012F, r27	; 0x80012f <__brkval+0x1>
 970:	a0 93 2e 01 	sts	0x012E, r26	; 0x80012e <__brkval>
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	08 95       	ret

0000097a <memset>:
 97a:	dc 01       	movw	r26, r24
 97c:	01 c0       	rjmp	.+2      	; 0x980 <memset+0x6>
 97e:	6d 93       	st	X+, r22
 980:	41 50       	subi	r20, 0x01	; 1
 982:	50 40       	sbci	r21, 0x00	; 0
 984:	e0 f7       	brcc	.-8      	; 0x97e <memset+0x4>
 986:	08 95       	ret

00000988 <_exit>:
 988:	f8 94       	cli

0000098a <__stop_program>:
 98a:	ff cf       	rjmp	.-2      	; 0x98a <__stop_program>
