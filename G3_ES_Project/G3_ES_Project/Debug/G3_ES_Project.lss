
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000c36  00000cca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080012e  0080012e  00000cf8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000102d  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a95  00000000  00000000  00001ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000787  00000000  00000000  00002962  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f0  00000000  00000000  000030ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052a  00000000  00000000  000032dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c6  00000000  00000000  00003806  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003acc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e3       	ldi	r30, 0x36	; 54
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 32       	cpi	r26, 0x2E	; 46
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ae e2       	ldi	r26, 0x2E	; 46
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 33       	cpi	r26, 0x3A	; 58
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 3e 01 	call	0x27c	; 0x27c <main>
  a6:	0c 94 19 06 	jmp	0xc32	; 0xc32 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <can_init>:
	sei () ;
	}

int flag_changed(){
	return flag;
}
  ae:	0e 94 15 01 	call	0x22a	; 0x22a <mcp2515_init>
  b2:	43 e0       	ldi	r20, 0x03	; 3
  b4:	63 e0       	ldi	r22, 0x03	; 3
  b6:	8b e2       	ldi	r24, 0x2B	; 43
  b8:	0e 94 26 01 	call	0x24c	; 0x24c <mcp2515_bit_modify>
  bc:	60 e4       	ldi	r22, 0x40	; 64
  be:	8f e0       	ldi	r24, 0x0F	; 15
  c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
  c4:	f8 94       	cli
  c6:	86 b7       	in	r24, 0x36	; 54
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	86 bf       	out	0x36, r24	; 54
  cc:	8b b7       	in	r24, 0x3b	; 59
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	8b bf       	out	0x3b, r24	; 59
  d2:	78 94       	sei
  d4:	08 95       	ret

000000d6 <can_receive>:

void can_receive(){
	//printf("before flag");
	if(flag_changed()){	
  d6:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
  da:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
  de:	89 2b       	or	r24, r25
  e0:	d1 f1       	breq	.+116    	; 0x156 <can_receive+0x80>
	//printf("after flag");
		if(mcp2515_read_status() & 0x01){
  e2:	0e 94 20 01 	call	0x240	; 0x240 <mcp2515_read_status>
  e6:	80 ff       	sbrs	r24, 0
  e8:	17 c0       	rjmp	.+46     	; 0x118 <can_receive+0x42>
			//printf("in can receive");
			//mcp2515_read_status();
			//length = mcp2515_read()
			can_msg msg;
			msg.idH = mcp2515_read(MCP_RXB0SIDH);
  ea:	81 e6       	ldi	r24, 0x61	; 97
  ec:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.idL = mcp2515_read(MCP_RXB0SIDL);
  f0:	82 e6       	ldi	r24, 0x62	; 98
  f2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.length = mcp2515_read(MCP_RXB0DLC);
  f6:	85 e6       	ldi	r24, 0x65	; 101
  f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.data = mcp2515_read(MCP_RXB0Dm);
  fc:	86 e6       	ldi	r24, 0x66	; 102
  fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			printf(msg.data);
 102:	1f 92       	push	r1
 104:	8f 93       	push	r24
 106:	0e 94 c7 01 	call	0x38e	; 0x38e <printf>
			mcp2515_bit_modify(MCP_CANINTF,0x01, 0x00);
 10a:	40 e0       	ldi	r20, 0x00	; 0
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	8c e2       	ldi	r24, 0x2C	; 44
 110:	0e 94 26 01 	call	0x24c	; 0x24c <mcp2515_bit_modify>
 114:	0f 90       	pop	r0
 116:	0f 90       	pop	r0
		}
		
		if(mcp2515_read_status() & 0x02){
 118:	0e 94 20 01 	call	0x240	; 0x240 <mcp2515_read_status>
 11c:	81 ff       	sbrs	r24, 1
 11e:	17 c0       	rjmp	.+46     	; 0x14e <can_receive+0x78>
			//printf("in can receive");
			//mcp2515_read_status();
			//length = mcp2515_read()
			can_msg msg;
			msg.idH = mcp2515_read(MCP_RXB1SIDH);
 120:	81 e7       	ldi	r24, 0x71	; 113
 122:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.idL = mcp2515_read(MCP_RXB1SIDH);
 126:	81 e7       	ldi	r24, 0x71	; 113
 128:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.length = mcp2515_read(MCP_RXB1DLC);
 12c:	85 e7       	ldi	r24, 0x75	; 117
 12e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			msg.data = mcp2515_read(MCP_RXB1Dm);
 132:	86 e7       	ldi	r24, 0x76	; 118
 134:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <mcp2515_read>
			printf(msg.data);
 138:	1f 92       	push	r1
 13a:	8f 93       	push	r24
 13c:	0e 94 c7 01 	call	0x38e	; 0x38e <printf>
			mcp2515_bit_modify(MCP_CANINTF,0x02, 0x00);
 140:	40 e0       	ldi	r20, 0x00	; 0
 142:	62 e0       	ldi	r22, 0x02	; 2
 144:	8c e2       	ldi	r24, 0x2C	; 44
 146:	0e 94 26 01 	call	0x24c	; 0x24c <mcp2515_bit_modify>
 14a:	0f 90       	pop	r0
 14c:	0f 90       	pop	r0
			}
		flag = 0;
 14e:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__data_end+0x1>
 152:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__data_end>
 156:	08 95       	ret

00000158 <can_transmit>:
	}
}


void can_transmit(can_msg msg){
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
 160:	27 97       	sbiw	r28, 0x07	; 7
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	29 83       	std	Y+1, r18	; 0x01
 16e:	6d 83       	std	Y+5, r22	; 0x05
 170:	8f 83       	std	Y+7, r24	; 0x07
	mcp2515_write(MCP_TXB0SIDH, msg.idH);
 172:	64 2f       	mov	r22, r20
 174:	81 e3       	ldi	r24, 0x31	; 49
 176:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, msg.idL);
 17a:	6d 81       	ldd	r22, Y+5	; 0x05
 17c:	82 e3       	ldi	r24, 0x32	; 50
 17e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, msg.length);
 182:	69 81       	ldd	r22, Y+1	; 0x01
 184:	85 e3       	ldi	r24, 0x35	; 53
 186:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
	mcp2515_write(MCP_TXB0Dm, msg.data);
 18a:	6f 81       	ldd	r22, Y+7	; 0x07
 18c:	86 e3       	ldi	r24, 0x36	; 54
 18e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
	mcp2515_request_to_send();
 192:	0e 94 1b 01 	call	0x236	; 0x236 <mcp2515_request_to_send>
	printf("transmitting");
 196:	86 e0       	ldi	r24, 0x06	; 6
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	9f 93       	push	r25
 19c:	8f 93       	push	r24
 19e:	0e 94 c7 01 	call	0x38e	; 0x38e <printf>
}
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	27 96       	adiw	r28, 0x07	; 7
 1a8:	0f b6       	in	r0, 0x3f	; 63
 1aa:	f8 94       	cli
 1ac:	de bf       	out	0x3e, r29	; 62
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	cd bf       	out	0x3d, r28	; 61
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <__vector_1>:


ISR(INT0_vect){
 1b8:	1f 92       	push	r1
 1ba:	0f 92       	push	r0
 1bc:	0f b6       	in	r0, 0x3f	; 63
 1be:	0f 92       	push	r0
 1c0:	11 24       	eor	r1, r1
 1c2:	8f 93       	push	r24
 1c4:	9f 93       	push	r25
	flag = 1;	
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
 1ce:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
}
 1d2:	9f 91       	pop	r25
 1d4:	8f 91       	pop	r24
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	0f 90       	pop	r0
 1dc:	1f 90       	pop	r1
 1de:	18 95       	reti

000001e0 <mcp2515_read>:
	//More initialization
	*/
	return 0;
}

uint8_t mcp2515_read(uint8_t address){
 1e0:	cf 93       	push	r28
 1e2:	c8 2f       	mov	r28, r24
	uint8_t result;
	
	PORTB &= ~(1<<PB4);
 1e4:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_MasterTransmit(MCP_READ);
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 1ec:	8c 2f       	mov	r24, r28
 1ee:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	result = SPI_MasterReceive();
 1f2:	0e 94 39 01 	call	0x272	; 0x272 <SPI_MasterReceive>
	
	PORTB |= (1<<PB4);
 1f6:	c4 9a       	sbi	0x18, 4	; 24
	
	return result;
}
 1f8:	cf 91       	pop	r28
 1fa:	08 95       	ret

000001fc <mcp2515_write>:

void mcp2515_write(uint8_t address, uint8_t data){
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	d8 2f       	mov	r29, r24
 202:	c6 2f       	mov	r28, r22
	
	uint8_t result;
	
	PORTB &= ~(1<<PB4);
 204:	c4 98       	cbi	0x18, 4	; 24
	
	SPI_MasterTransmit(MCP_WRITE);
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
 20c:	8d 2f       	mov	r24, r29
 20e:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
 212:	8c 2f       	mov	r24, r28
 214:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	
	PORTB |= (1<<PB4);
 218:	c4 9a       	sbi	0x18, 4	; 24
}
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	08 95       	ret

00000220 <mcp2515_reset>:

void mcp2515_reset(){
	//Needs to put MCP2515 in configuration mode
	mcp2515_write(MCP_CANCTRL, MODE_CONFIG);
 220:	60 e8       	ldi	r22, 0x80	; 128
 222:	8f e0       	ldi	r24, 0x0F	; 15
 224:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
 228:	08 95       	ret

0000022a <mcp2515_init>:
#include <avr/io.h>

int status;

uint8_t mcp2515_init(){
	SPI_MasterInit();
 22a:	0e 94 2a 01 	call	0x254	; 0x254 <SPI_MasterInit>
	uint8_t value;
	
	mcp2515_reset();
 22e:	0e 94 10 01 	call	0x220	; 0x220 <mcp2515_reset>
		return 1;
	}
	//More initialization
	*/
	return 0;
}
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	08 95       	ret

00000236 <mcp2515_request_to_send>:
}


//REALLY NOT SURE
void mcp2515_request_to_send(){
	mcp2515_write(MCP_TXB0CTRL, 0x07);
 236:	67 e0       	ldi	r22, 0x07	; 7
 238:	80 e3       	ldi	r24, 0x30	; 48
 23a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
 23e:	08 95       	ret

00000240 <mcp2515_read_status>:
}

//WHAT ADDRESS DO WE NEED TO USE FOR THE MCP_WRITE FUNCTION??
uint8_t mcp2515_read_status(){
	SPI_MasterTransmit(MCP_READ_STATUS);
 240:	80 ea       	ldi	r24, 0xA0	; 160
 242:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	return SPI_MasterReceive();
 246:	0e 94 39 01 	call	0x272	; 0x272 <SPI_MasterReceive>
	//mcp2515_write(MCP_CANINTF, MCP_READ_STATUS);
	//mcp2515_read(MCP_CANINTF);
}
 24a:	08 95       	ret

0000024c <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t data_mask, uint8_t data){
	mcp2515_write(address, (data_mask & data));
 24c:	64 23       	and	r22, r20
 24e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <mcp2515_write>
 252:	08 95       	ret

00000254 <SPI_MasterInit>:


//Needed for initializing the SPI as a master
void SPI_MasterInit(void){
	// Set MOSI and SCK output, all others input, set CS as output
	DDRB |= (1<<PB5)|(1<<PB7)|(1<<PB4);
 254:	87 b3       	in	r24, 0x17	; 23
 256:	80 6b       	ori	r24, 0xB0	; 176
 258:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<PB6);
 25a:	be 98       	cbi	0x17, 6	; 23
	
	PORTB &= ~(1<<PB4);
 25c:	c4 98       	cbi	0x18, 4	; 24
	
	// Enable SPI, Master, set clock rate fck/16 & select mode 00
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 25e:	8d b1       	in	r24, 0x0d	; 13
 260:	81 65       	ori	r24, 0x51	; 81
 262:	8d b9       	out	0x0d, r24	; 13

	SPCR &= ~(1<<CPOL);
 264:	6b 98       	cbi	0x0d, 3	; 13
	SPCR &= ~(1<<CPHA);
 266:	6a 98       	cbi	0x0d, 2	; 13
 268:	08 95       	ret

0000026a <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(char cData){
	// Start transmission 
	SPDR = cData;
 26a:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete 
	while(!(SPSR & (1<<SPIF)));
 26c:	77 9b       	sbis	0x0e, 7	; 14
 26e:	fe cf       	rjmp	.-4      	; 0x26c <SPI_MasterTransmit+0x2>
}
 270:	08 95       	ret

00000272 <SPI_MasterReceive>:


char SPI_MasterReceive(){
	SPI_MasterTransmit(' ');
 272:	80 e2       	ldi	r24, 0x20	; 32
 274:	0e 94 35 01 	call	0x26a	; 0x26a <SPI_MasterTransmit>
	return SPDR;
 278:	8f b1       	in	r24, 0x0f	; 15
}  
 27a:	08 95       	ret

0000027c <main>:
#define BAUD 9600
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MYUBRR);
 290:	8f e1       	ldi	r24, 0x1F	; 31
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 6d 01 	call	0x2da	; 0x2da <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
 298:	68 e7       	ldi	r22, 0x78	; 120
 29a:	71 e0       	ldi	r23, 0x01	; 1
 29c:	84 e7       	ldi	r24, 0x74	; 116
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <fdevopen>
	
	printf("\n\nbefore init\r\n");
 2a4:	83 e1       	ldi	r24, 0x13	; 19
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	0e 94 dd 01 	call	0x3ba	; 0x3ba <puts>
	can_init();
 2ac:	0e 94 57 00 	call	0xae	; 0xae <can_init>
	
	printf("after init\r\n");
 2b0:	82 e2       	ldi	r24, 0x22	; 34
 2b2:	91 e0       	ldi	r25, 0x01	; 1
 2b4:	0e 94 dd 01 	call	0x3ba	; 0x3ba <puts>
	can_msg a;
	a.idH = 0x00;
 2b8:	1c 82       	std	Y+4, r1	; 0x04
 2ba:	1b 82       	std	Y+3, r1	; 0x03
	a.idL = 0x00;
 2bc:	1e 82       	std	Y+6, r1	; 0x06
 2be:	1d 82       	std	Y+5, r1	; 0x05
	a.length = 0x08;
 2c0:	88 e0       	ldi	r24, 0x08	; 8
 2c2:	28 2f       	mov	r18, r24
	a.data = 1;
	can_transmit(a);
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	40 e0       	ldi	r20, 0x00	; 0
 2c8:	5c 81       	ldd	r21, Y+4	; 0x04
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	7e 81       	ldd	r23, Y+6	; 0x06
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 ac 00 	call	0x158	; 0x158 <can_transmit>
	while(1) {
		can_receive();	
 2d4:	0e 94 6b 00 	call	0xd6	; 0xd6 <can_receive>
 2d8:	fd cf       	rjmp	.-6      	; 0x2d4 <main+0x58>

000002da <USART_Init>:
 2da:	9c bf       	out	0x3c, r25	; 60
 2dc:	80 b9       	out	0x00, r24	; 0
 2de:	88 e1       	ldi	r24, 0x18	; 24
 2e0:	81 b9       	out	0x01, r24	; 1
 2e2:	8e e8       	ldi	r24, 0x8E	; 142
 2e4:	8c bf       	out	0x3c, r24	; 60
 2e6:	08 95       	ret

000002e8 <USART_Transmit>:
 2e8:	15 9b       	sbis	0x02, 5	; 2
 2ea:	fe cf       	rjmp	.-4      	; 0x2e8 <USART_Transmit>
 2ec:	83 b9       	out	0x03, r24	; 3
 2ee:	08 95       	ret

000002f0 <USART_Receive>:
 2f0:	17 9b       	sbis	0x02, 7	; 2
 2f2:	fe cf       	rjmp	.-4      	; 0x2f0 <USART_Receive>
 2f4:	83 b1       	in	r24, 0x03	; 3
 2f6:	08 95       	ret

000002f8 <fdevopen>:
 2f8:	0f 93       	push	r16
 2fa:	1f 93       	push	r17
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	00 97       	sbiw	r24, 0x00	; 0
 302:	31 f4       	brne	.+12     	; 0x310 <fdevopen+0x18>
 304:	61 15       	cp	r22, r1
 306:	71 05       	cpc	r23, r1
 308:	19 f4       	brne	.+6      	; 0x310 <fdevopen+0x18>
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	3a c0       	rjmp	.+116    	; 0x384 <fdevopen+0x8c>
 310:	8b 01       	movw	r16, r22
 312:	ec 01       	movw	r28, r24
 314:	6e e0       	ldi	r22, 0x0E	; 14
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 ee 03 	call	0x7dc	; 0x7dc <calloc>
 320:	fc 01       	movw	r30, r24
 322:	89 2b       	or	r24, r25
 324:	91 f3       	breq	.-28     	; 0x30a <fdevopen+0x12>
 326:	80 e8       	ldi	r24, 0x80	; 128
 328:	83 83       	std	Z+3, r24	; 0x03
 32a:	01 15       	cp	r16, r1
 32c:	11 05       	cpc	r17, r1
 32e:	71 f0       	breq	.+28     	; 0x34c <fdevopen+0x54>
 330:	13 87       	std	Z+11, r17	; 0x0b
 332:	02 87       	std	Z+10, r16	; 0x0a
 334:	81 e8       	ldi	r24, 0x81	; 129
 336:	83 83       	std	Z+3, r24	; 0x03
 338:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__iob>
 33c:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__iob+0x1>
 340:	89 2b       	or	r24, r25
 342:	21 f4       	brne	.+8      	; 0x34c <fdevopen+0x54>
 344:	f0 93 31 01 	sts	0x0131, r31	; 0x800131 <__iob+0x1>
 348:	e0 93 30 01 	sts	0x0130, r30	; 0x800130 <__iob>
 34c:	20 97       	sbiw	r28, 0x00	; 0
 34e:	c9 f0       	breq	.+50     	; 0x382 <fdevopen+0x8a>
 350:	d1 87       	std	Z+9, r29	; 0x09
 352:	c0 87       	std	Z+8, r28	; 0x08
 354:	83 81       	ldd	r24, Z+3	; 0x03
 356:	82 60       	ori	r24, 0x02	; 2
 358:	83 83       	std	Z+3, r24	; 0x03
 35a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__iob+0x2>
 35e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__iob+0x3>
 362:	89 2b       	or	r24, r25
 364:	71 f4       	brne	.+28     	; 0x382 <fdevopen+0x8a>
 366:	f0 93 33 01 	sts	0x0133, r31	; 0x800133 <__iob+0x3>
 36a:	e0 93 32 01 	sts	0x0132, r30	; 0x800132 <__iob+0x2>
 36e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__iob+0x4>
 372:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__iob+0x5>
 376:	89 2b       	or	r24, r25
 378:	21 f4       	brne	.+8      	; 0x382 <fdevopen+0x8a>
 37a:	f0 93 35 01 	sts	0x0135, r31	; 0x800135 <__iob+0x5>
 37e:	e0 93 34 01 	sts	0x0134, r30	; 0x800134 <__iob+0x4>
 382:	cf 01       	movw	r24, r30
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	1f 91       	pop	r17
 38a:	0f 91       	pop	r16
 38c:	08 95       	ret

0000038e <printf>:
 38e:	a0 e0       	ldi	r26, 0x00	; 0
 390:	b0 e0       	ldi	r27, 0x00	; 0
 392:	ed ec       	ldi	r30, 0xCD	; 205
 394:	f1 e0       	ldi	r31, 0x01	; 1
 396:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__prologue_saves__+0x20>
 39a:	ae 01       	movw	r20, r28
 39c:	4b 5f       	subi	r20, 0xFB	; 251
 39e:	5f 4f       	sbci	r21, 0xFF	; 255
 3a0:	fa 01       	movw	r30, r20
 3a2:	61 91       	ld	r22, Z+
 3a4:	71 91       	ld	r23, Z+
 3a6:	af 01       	movw	r20, r30
 3a8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__iob+0x2>
 3ac:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__iob+0x3>
 3b0:	0e 94 0d 02 	call	0x41a	; 0x41a <vfprintf>
 3b4:	e2 e0       	ldi	r30, 0x02	; 2
 3b6:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__epilogue_restores__+0x20>

000003ba <puts>:
 3ba:	0f 93       	push	r16
 3bc:	1f 93       	push	r17
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <__iob+0x2>
 3c6:	f0 91 33 01 	lds	r31, 0x0133	; 0x800133 <__iob+0x3>
 3ca:	23 81       	ldd	r18, Z+3	; 0x03
 3cc:	21 ff       	sbrs	r18, 1
 3ce:	1b c0       	rjmp	.+54     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3d0:	8c 01       	movw	r16, r24
 3d2:	d0 e0       	ldi	r29, 0x00	; 0
 3d4:	c0 e0       	ldi	r28, 0x00	; 0
 3d6:	f8 01       	movw	r30, r16
 3d8:	81 91       	ld	r24, Z+
 3da:	8f 01       	movw	r16, r30
 3dc:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <__iob+0x2>
 3e0:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <__iob+0x3>
 3e4:	db 01       	movw	r26, r22
 3e6:	18 96       	adiw	r26, 0x08	; 8
 3e8:	ed 91       	ld	r30, X+
 3ea:	fc 91       	ld	r31, X
 3ec:	19 97       	sbiw	r26, 0x09	; 9
 3ee:	88 23       	and	r24, r24
 3f0:	31 f0       	breq	.+12     	; 0x3fe <puts+0x44>
 3f2:	09 95       	icall
 3f4:	89 2b       	or	r24, r25
 3f6:	79 f3       	breq	.-34     	; 0x3d6 <puts+0x1c>
 3f8:	df ef       	ldi	r29, 0xFF	; 255
 3fa:	cf ef       	ldi	r28, 0xFF	; 255
 3fc:	ec cf       	rjmp	.-40     	; 0x3d6 <puts+0x1c>
 3fe:	8a e0       	ldi	r24, 0x0A	; 10
 400:	09 95       	icall
 402:	89 2b       	or	r24, r25
 404:	19 f0       	breq	.+6      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 406:	8f ef       	ldi	r24, 0xFF	; 255
 408:	9f ef       	ldi	r25, 0xFF	; 255
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40c:	8d 2f       	mov	r24, r29
 40e:	9c 2f       	mov	r25, r28
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	1f 91       	pop	r17
 416:	0f 91       	pop	r16
 418:	08 95       	ret

0000041a <vfprintf>:
 41a:	ab e0       	ldi	r26, 0x0B	; 11
 41c:	b0 e0       	ldi	r27, 0x00	; 0
 41e:	e3 e1       	ldi	r30, 0x13	; 19
 420:	f2 e0       	ldi	r31, 0x02	; 2
 422:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__prologue_saves__>
 426:	6c 01       	movw	r12, r24
 428:	7b 01       	movw	r14, r22
 42a:	8a 01       	movw	r16, r20
 42c:	fc 01       	movw	r30, r24
 42e:	17 82       	std	Z+7, r1	; 0x07
 430:	16 82       	std	Z+6, r1	; 0x06
 432:	83 81       	ldd	r24, Z+3	; 0x03
 434:	81 ff       	sbrs	r24, 1
 436:	cc c1       	rjmp	.+920    	; 0x7d0 <__stack+0x2d1>
 438:	ce 01       	movw	r24, r28
 43a:	01 96       	adiw	r24, 0x01	; 1
 43c:	3c 01       	movw	r6, r24
 43e:	f6 01       	movw	r30, r12
 440:	93 81       	ldd	r25, Z+3	; 0x03
 442:	f7 01       	movw	r30, r14
 444:	93 fd       	sbrc	r25, 3
 446:	85 91       	lpm	r24, Z+
 448:	93 ff       	sbrs	r25, 3
 44a:	81 91       	ld	r24, Z+
 44c:	7f 01       	movw	r14, r30
 44e:	88 23       	and	r24, r24
 450:	09 f4       	brne	.+2      	; 0x454 <vfprintf+0x3a>
 452:	ba c1       	rjmp	.+884    	; 0x7c8 <__stack+0x2c9>
 454:	85 32       	cpi	r24, 0x25	; 37
 456:	39 f4       	brne	.+14     	; 0x466 <vfprintf+0x4c>
 458:	93 fd       	sbrc	r25, 3
 45a:	85 91       	lpm	r24, Z+
 45c:	93 ff       	sbrs	r25, 3
 45e:	81 91       	ld	r24, Z+
 460:	7f 01       	movw	r14, r30
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	29 f4       	brne	.+10     	; 0x470 <vfprintf+0x56>
 466:	b6 01       	movw	r22, r12
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 46e:	e7 cf       	rjmp	.-50     	; 0x43e <vfprintf+0x24>
 470:	91 2c       	mov	r9, r1
 472:	21 2c       	mov	r2, r1
 474:	31 2c       	mov	r3, r1
 476:	ff e1       	ldi	r31, 0x1F	; 31
 478:	f3 15       	cp	r31, r3
 47a:	d8 f0       	brcs	.+54     	; 0x4b2 <vfprintf+0x98>
 47c:	8b 32       	cpi	r24, 0x2B	; 43
 47e:	79 f0       	breq	.+30     	; 0x49e <vfprintf+0x84>
 480:	38 f4       	brcc	.+14     	; 0x490 <vfprintf+0x76>
 482:	80 32       	cpi	r24, 0x20	; 32
 484:	79 f0       	breq	.+30     	; 0x4a4 <vfprintf+0x8a>
 486:	83 32       	cpi	r24, 0x23	; 35
 488:	a1 f4       	brne	.+40     	; 0x4b2 <vfprintf+0x98>
 48a:	23 2d       	mov	r18, r3
 48c:	20 61       	ori	r18, 0x10	; 16
 48e:	1d c0       	rjmp	.+58     	; 0x4ca <vfprintf+0xb0>
 490:	8d 32       	cpi	r24, 0x2D	; 45
 492:	61 f0       	breq	.+24     	; 0x4ac <vfprintf+0x92>
 494:	80 33       	cpi	r24, 0x30	; 48
 496:	69 f4       	brne	.+26     	; 0x4b2 <vfprintf+0x98>
 498:	23 2d       	mov	r18, r3
 49a:	21 60       	ori	r18, 0x01	; 1
 49c:	16 c0       	rjmp	.+44     	; 0x4ca <vfprintf+0xb0>
 49e:	83 2d       	mov	r24, r3
 4a0:	82 60       	ori	r24, 0x02	; 2
 4a2:	38 2e       	mov	r3, r24
 4a4:	e3 2d       	mov	r30, r3
 4a6:	e4 60       	ori	r30, 0x04	; 4
 4a8:	3e 2e       	mov	r3, r30
 4aa:	2a c0       	rjmp	.+84     	; 0x500 <__stack+0x1>
 4ac:	f3 2d       	mov	r31, r3
 4ae:	f8 60       	ori	r31, 0x08	; 8
 4b0:	1d c0       	rjmp	.+58     	; 0x4ec <vfprintf+0xd2>
 4b2:	37 fc       	sbrc	r3, 7
 4b4:	2d c0       	rjmp	.+90     	; 0x510 <__stack+0x11>
 4b6:	20 ed       	ldi	r18, 0xD0	; 208
 4b8:	28 0f       	add	r18, r24
 4ba:	2a 30       	cpi	r18, 0x0A	; 10
 4bc:	40 f0       	brcs	.+16     	; 0x4ce <vfprintf+0xb4>
 4be:	8e 32       	cpi	r24, 0x2E	; 46
 4c0:	b9 f4       	brne	.+46     	; 0x4f0 <vfprintf+0xd6>
 4c2:	36 fc       	sbrc	r3, 6
 4c4:	81 c1       	rjmp	.+770    	; 0x7c8 <__stack+0x2c9>
 4c6:	23 2d       	mov	r18, r3
 4c8:	20 64       	ori	r18, 0x40	; 64
 4ca:	32 2e       	mov	r3, r18
 4cc:	19 c0       	rjmp	.+50     	; 0x500 <__stack+0x1>
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <vfprintf+0xc4>
 4d2:	8a e0       	ldi	r24, 0x0A	; 10
 4d4:	98 9e       	mul	r9, r24
 4d6:	20 0d       	add	r18, r0
 4d8:	11 24       	eor	r1, r1
 4da:	92 2e       	mov	r9, r18
 4dc:	11 c0       	rjmp	.+34     	; 0x500 <__stack+0x1>
 4de:	ea e0       	ldi	r30, 0x0A	; 10
 4e0:	2e 9e       	mul	r2, r30
 4e2:	20 0d       	add	r18, r0
 4e4:	11 24       	eor	r1, r1
 4e6:	22 2e       	mov	r2, r18
 4e8:	f3 2d       	mov	r31, r3
 4ea:	f0 62       	ori	r31, 0x20	; 32
 4ec:	3f 2e       	mov	r3, r31
 4ee:	08 c0       	rjmp	.+16     	; 0x500 <__stack+0x1>
 4f0:	8c 36       	cpi	r24, 0x6C	; 108
 4f2:	21 f4       	brne	.+8      	; 0x4fc <vfprintf+0xe2>
 4f4:	83 2d       	mov	r24, r3
 4f6:	80 68       	ori	r24, 0x80	; 128
 4f8:	38 2e       	mov	r3, r24
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__stack+0x1>
 4fc:	88 36       	cpi	r24, 0x68	; 104
 4fe:	41 f4       	brne	.+16     	; 0x510 <__stack+0x11>
 500:	f7 01       	movw	r30, r14
 502:	93 fd       	sbrc	r25, 3
 504:	85 91       	lpm	r24, Z+
 506:	93 ff       	sbrs	r25, 3
 508:	81 91       	ld	r24, Z+
 50a:	7f 01       	movw	r14, r30
 50c:	81 11       	cpse	r24, r1
 50e:	b3 cf       	rjmp	.-154    	; 0x476 <vfprintf+0x5c>
 510:	98 2f       	mov	r25, r24
 512:	9f 7d       	andi	r25, 0xDF	; 223
 514:	95 54       	subi	r25, 0x45	; 69
 516:	93 30       	cpi	r25, 0x03	; 3
 518:	28 f4       	brcc	.+10     	; 0x524 <__stack+0x25>
 51a:	0c 5f       	subi	r16, 0xFC	; 252
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	9f e3       	ldi	r25, 0x3F	; 63
 520:	99 83       	std	Y+1, r25	; 0x01
 522:	0d c0       	rjmp	.+26     	; 0x53e <__stack+0x3f>
 524:	83 36       	cpi	r24, 0x63	; 99
 526:	31 f0       	breq	.+12     	; 0x534 <__stack+0x35>
 528:	83 37       	cpi	r24, 0x73	; 115
 52a:	71 f0       	breq	.+28     	; 0x548 <__stack+0x49>
 52c:	83 35       	cpi	r24, 0x53	; 83
 52e:	09 f0       	breq	.+2      	; 0x532 <__stack+0x33>
 530:	59 c0       	rjmp	.+178    	; 0x5e4 <__stack+0xe5>
 532:	21 c0       	rjmp	.+66     	; 0x576 <__stack+0x77>
 534:	f8 01       	movw	r30, r16
 536:	80 81       	ld	r24, Z
 538:	89 83       	std	Y+1, r24	; 0x01
 53a:	0e 5f       	subi	r16, 0xFE	; 254
 53c:	1f 4f       	sbci	r17, 0xFF	; 255
 53e:	88 24       	eor	r8, r8
 540:	83 94       	inc	r8
 542:	91 2c       	mov	r9, r1
 544:	53 01       	movw	r10, r6
 546:	13 c0       	rjmp	.+38     	; 0x56e <__stack+0x6f>
 548:	28 01       	movw	r4, r16
 54a:	f2 e0       	ldi	r31, 0x02	; 2
 54c:	4f 0e       	add	r4, r31
 54e:	51 1c       	adc	r5, r1
 550:	f8 01       	movw	r30, r16
 552:	a0 80       	ld	r10, Z
 554:	b1 80       	ldd	r11, Z+1	; 0x01
 556:	36 fe       	sbrs	r3, 6
 558:	03 c0       	rjmp	.+6      	; 0x560 <__stack+0x61>
 55a:	69 2d       	mov	r22, r9
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	02 c0       	rjmp	.+4      	; 0x564 <__stack+0x65>
 560:	6f ef       	ldi	r22, 0xFF	; 255
 562:	7f ef       	ldi	r23, 0xFF	; 255
 564:	c5 01       	movw	r24, r10
 566:	0e 94 3d 05 	call	0xa7a	; 0xa7a <strnlen>
 56a:	4c 01       	movw	r8, r24
 56c:	82 01       	movw	r16, r4
 56e:	f3 2d       	mov	r31, r3
 570:	ff 77       	andi	r31, 0x7F	; 127
 572:	3f 2e       	mov	r3, r31
 574:	16 c0       	rjmp	.+44     	; 0x5a2 <__stack+0xa3>
 576:	28 01       	movw	r4, r16
 578:	22 e0       	ldi	r18, 0x02	; 2
 57a:	42 0e       	add	r4, r18
 57c:	51 1c       	adc	r5, r1
 57e:	f8 01       	movw	r30, r16
 580:	a0 80       	ld	r10, Z
 582:	b1 80       	ldd	r11, Z+1	; 0x01
 584:	36 fe       	sbrs	r3, 6
 586:	03 c0       	rjmp	.+6      	; 0x58e <__stack+0x8f>
 588:	69 2d       	mov	r22, r9
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <__stack+0x93>
 58e:	6f ef       	ldi	r22, 0xFF	; 255
 590:	7f ef       	ldi	r23, 0xFF	; 255
 592:	c5 01       	movw	r24, r10
 594:	0e 94 2b 05 	call	0xa56	; 0xa56 <strnlen_P>
 598:	4c 01       	movw	r8, r24
 59a:	f3 2d       	mov	r31, r3
 59c:	f0 68       	ori	r31, 0x80	; 128
 59e:	3f 2e       	mov	r3, r31
 5a0:	82 01       	movw	r16, r4
 5a2:	33 fc       	sbrc	r3, 3
 5a4:	1b c0       	rjmp	.+54     	; 0x5dc <__stack+0xdd>
 5a6:	82 2d       	mov	r24, r2
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	88 16       	cp	r8, r24
 5ac:	99 06       	cpc	r9, r25
 5ae:	b0 f4       	brcc	.+44     	; 0x5dc <__stack+0xdd>
 5b0:	b6 01       	movw	r22, r12
 5b2:	80 e2       	ldi	r24, 0x20	; 32
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 5ba:	2a 94       	dec	r2
 5bc:	f4 cf       	rjmp	.-24     	; 0x5a6 <__stack+0xa7>
 5be:	f5 01       	movw	r30, r10
 5c0:	37 fc       	sbrc	r3, 7
 5c2:	85 91       	lpm	r24, Z+
 5c4:	37 fe       	sbrs	r3, 7
 5c6:	81 91       	ld	r24, Z+
 5c8:	5f 01       	movw	r10, r30
 5ca:	b6 01       	movw	r22, r12
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 5d2:	21 10       	cpse	r2, r1
 5d4:	2a 94       	dec	r2
 5d6:	21 e0       	ldi	r18, 0x01	; 1
 5d8:	82 1a       	sub	r8, r18
 5da:	91 08       	sbc	r9, r1
 5dc:	81 14       	cp	r8, r1
 5de:	91 04       	cpc	r9, r1
 5e0:	71 f7       	brne	.-36     	; 0x5be <__stack+0xbf>
 5e2:	e8 c0       	rjmp	.+464    	; 0x7b4 <__stack+0x2b5>
 5e4:	84 36       	cpi	r24, 0x64	; 100
 5e6:	11 f0       	breq	.+4      	; 0x5ec <__stack+0xed>
 5e8:	89 36       	cpi	r24, 0x69	; 105
 5ea:	41 f5       	brne	.+80     	; 0x63c <__stack+0x13d>
 5ec:	f8 01       	movw	r30, r16
 5ee:	37 fe       	sbrs	r3, 7
 5f0:	07 c0       	rjmp	.+14     	; 0x600 <__stack+0x101>
 5f2:	60 81       	ld	r22, Z
 5f4:	71 81       	ldd	r23, Z+1	; 0x01
 5f6:	82 81       	ldd	r24, Z+2	; 0x02
 5f8:	93 81       	ldd	r25, Z+3	; 0x03
 5fa:	0c 5f       	subi	r16, 0xFC	; 252
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <__stack+0x111>
 600:	60 81       	ld	r22, Z
 602:	71 81       	ldd	r23, Z+1	; 0x01
 604:	07 2e       	mov	r0, r23
 606:	00 0c       	add	r0, r0
 608:	88 0b       	sbc	r24, r24
 60a:	99 0b       	sbc	r25, r25
 60c:	0e 5f       	subi	r16, 0xFE	; 254
 60e:	1f 4f       	sbci	r17, 0xFF	; 255
 610:	f3 2d       	mov	r31, r3
 612:	ff 76       	andi	r31, 0x6F	; 111
 614:	3f 2e       	mov	r3, r31
 616:	97 ff       	sbrs	r25, 7
 618:	09 c0       	rjmp	.+18     	; 0x62c <__stack+0x12d>
 61a:	90 95       	com	r25
 61c:	80 95       	com	r24
 61e:	70 95       	com	r23
 620:	61 95       	neg	r22
 622:	7f 4f       	sbci	r23, 0xFF	; 255
 624:	8f 4f       	sbci	r24, 0xFF	; 255
 626:	9f 4f       	sbci	r25, 0xFF	; 255
 628:	f0 68       	ori	r31, 0x80	; 128
 62a:	3f 2e       	mov	r3, r31
 62c:	2a e0       	ldi	r18, 0x0A	; 10
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	a3 01       	movw	r20, r6
 632:	0e 94 84 05 	call	0xb08	; 0xb08 <__ultoa_invert>
 636:	88 2e       	mov	r8, r24
 638:	86 18       	sub	r8, r6
 63a:	45 c0       	rjmp	.+138    	; 0x6c6 <__stack+0x1c7>
 63c:	85 37       	cpi	r24, 0x75	; 117
 63e:	31 f4       	brne	.+12     	; 0x64c <__stack+0x14d>
 640:	23 2d       	mov	r18, r3
 642:	2f 7e       	andi	r18, 0xEF	; 239
 644:	b2 2e       	mov	r11, r18
 646:	2a e0       	ldi	r18, 0x0A	; 10
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	25 c0       	rjmp	.+74     	; 0x696 <__stack+0x197>
 64c:	93 2d       	mov	r25, r3
 64e:	99 7f       	andi	r25, 0xF9	; 249
 650:	b9 2e       	mov	r11, r25
 652:	8f 36       	cpi	r24, 0x6F	; 111
 654:	c1 f0       	breq	.+48     	; 0x686 <__stack+0x187>
 656:	18 f4       	brcc	.+6      	; 0x65e <__stack+0x15f>
 658:	88 35       	cpi	r24, 0x58	; 88
 65a:	79 f0       	breq	.+30     	; 0x67a <__stack+0x17b>
 65c:	b5 c0       	rjmp	.+362    	; 0x7c8 <__stack+0x2c9>
 65e:	80 37       	cpi	r24, 0x70	; 112
 660:	19 f0       	breq	.+6      	; 0x668 <__stack+0x169>
 662:	88 37       	cpi	r24, 0x78	; 120
 664:	21 f0       	breq	.+8      	; 0x66e <__stack+0x16f>
 666:	b0 c0       	rjmp	.+352    	; 0x7c8 <__stack+0x2c9>
 668:	e9 2f       	mov	r30, r25
 66a:	e0 61       	ori	r30, 0x10	; 16
 66c:	be 2e       	mov	r11, r30
 66e:	b4 fe       	sbrs	r11, 4
 670:	0d c0       	rjmp	.+26     	; 0x68c <__stack+0x18d>
 672:	fb 2d       	mov	r31, r11
 674:	f4 60       	ori	r31, 0x04	; 4
 676:	bf 2e       	mov	r11, r31
 678:	09 c0       	rjmp	.+18     	; 0x68c <__stack+0x18d>
 67a:	34 fe       	sbrs	r3, 4
 67c:	0a c0       	rjmp	.+20     	; 0x692 <__stack+0x193>
 67e:	29 2f       	mov	r18, r25
 680:	26 60       	ori	r18, 0x06	; 6
 682:	b2 2e       	mov	r11, r18
 684:	06 c0       	rjmp	.+12     	; 0x692 <__stack+0x193>
 686:	28 e0       	ldi	r18, 0x08	; 8
 688:	30 e0       	ldi	r19, 0x00	; 0
 68a:	05 c0       	rjmp	.+10     	; 0x696 <__stack+0x197>
 68c:	20 e1       	ldi	r18, 0x10	; 16
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	02 c0       	rjmp	.+4      	; 0x696 <__stack+0x197>
 692:	20 e1       	ldi	r18, 0x10	; 16
 694:	32 e0       	ldi	r19, 0x02	; 2
 696:	f8 01       	movw	r30, r16
 698:	b7 fe       	sbrs	r11, 7
 69a:	07 c0       	rjmp	.+14     	; 0x6aa <__stack+0x1ab>
 69c:	60 81       	ld	r22, Z
 69e:	71 81       	ldd	r23, Z+1	; 0x01
 6a0:	82 81       	ldd	r24, Z+2	; 0x02
 6a2:	93 81       	ldd	r25, Z+3	; 0x03
 6a4:	0c 5f       	subi	r16, 0xFC	; 252
 6a6:	1f 4f       	sbci	r17, 0xFF	; 255
 6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <__stack+0x1b7>
 6aa:	60 81       	ld	r22, Z
 6ac:	71 81       	ldd	r23, Z+1	; 0x01
 6ae:	80 e0       	ldi	r24, 0x00	; 0
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 5f       	subi	r16, 0xFE	; 254
 6b4:	1f 4f       	sbci	r17, 0xFF	; 255
 6b6:	a3 01       	movw	r20, r6
 6b8:	0e 94 84 05 	call	0xb08	; 0xb08 <__ultoa_invert>
 6bc:	88 2e       	mov	r8, r24
 6be:	86 18       	sub	r8, r6
 6c0:	fb 2d       	mov	r31, r11
 6c2:	ff 77       	andi	r31, 0x7F	; 127
 6c4:	3f 2e       	mov	r3, r31
 6c6:	36 fe       	sbrs	r3, 6
 6c8:	0d c0       	rjmp	.+26     	; 0x6e4 <__stack+0x1e5>
 6ca:	23 2d       	mov	r18, r3
 6cc:	2e 7f       	andi	r18, 0xFE	; 254
 6ce:	a2 2e       	mov	r10, r18
 6d0:	89 14       	cp	r8, r9
 6d2:	58 f4       	brcc	.+22     	; 0x6ea <__stack+0x1eb>
 6d4:	34 fe       	sbrs	r3, 4
 6d6:	0b c0       	rjmp	.+22     	; 0x6ee <__stack+0x1ef>
 6d8:	32 fc       	sbrc	r3, 2
 6da:	09 c0       	rjmp	.+18     	; 0x6ee <__stack+0x1ef>
 6dc:	83 2d       	mov	r24, r3
 6de:	8e 7e       	andi	r24, 0xEE	; 238
 6e0:	a8 2e       	mov	r10, r24
 6e2:	05 c0       	rjmp	.+10     	; 0x6ee <__stack+0x1ef>
 6e4:	b8 2c       	mov	r11, r8
 6e6:	a3 2c       	mov	r10, r3
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <__stack+0x1f1>
 6ea:	b8 2c       	mov	r11, r8
 6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <__stack+0x1f1>
 6ee:	b9 2c       	mov	r11, r9
 6f0:	a4 fe       	sbrs	r10, 4
 6f2:	0f c0       	rjmp	.+30     	; 0x712 <__stack+0x213>
 6f4:	fe 01       	movw	r30, r28
 6f6:	e8 0d       	add	r30, r8
 6f8:	f1 1d       	adc	r31, r1
 6fa:	80 81       	ld	r24, Z
 6fc:	80 33       	cpi	r24, 0x30	; 48
 6fe:	21 f4       	brne	.+8      	; 0x708 <__stack+0x209>
 700:	9a 2d       	mov	r25, r10
 702:	99 7e       	andi	r25, 0xE9	; 233
 704:	a9 2e       	mov	r10, r25
 706:	09 c0       	rjmp	.+18     	; 0x71a <__stack+0x21b>
 708:	a2 fe       	sbrs	r10, 2
 70a:	06 c0       	rjmp	.+12     	; 0x718 <__stack+0x219>
 70c:	b3 94       	inc	r11
 70e:	b3 94       	inc	r11
 710:	04 c0       	rjmp	.+8      	; 0x71a <__stack+0x21b>
 712:	8a 2d       	mov	r24, r10
 714:	86 78       	andi	r24, 0x86	; 134
 716:	09 f0       	breq	.+2      	; 0x71a <__stack+0x21b>
 718:	b3 94       	inc	r11
 71a:	a3 fc       	sbrc	r10, 3
 71c:	11 c0       	rjmp	.+34     	; 0x740 <__stack+0x241>
 71e:	a0 fe       	sbrs	r10, 0
 720:	06 c0       	rjmp	.+12     	; 0x72e <__stack+0x22f>
 722:	b2 14       	cp	r11, r2
 724:	88 f4       	brcc	.+34     	; 0x748 <__stack+0x249>
 726:	28 0c       	add	r2, r8
 728:	92 2c       	mov	r9, r2
 72a:	9b 18       	sub	r9, r11
 72c:	0e c0       	rjmp	.+28     	; 0x74a <__stack+0x24b>
 72e:	b2 14       	cp	r11, r2
 730:	60 f4       	brcc	.+24     	; 0x74a <__stack+0x24b>
 732:	b6 01       	movw	r22, r12
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 73c:	b3 94       	inc	r11
 73e:	f7 cf       	rjmp	.-18     	; 0x72e <__stack+0x22f>
 740:	b2 14       	cp	r11, r2
 742:	18 f4       	brcc	.+6      	; 0x74a <__stack+0x24b>
 744:	2b 18       	sub	r2, r11
 746:	02 c0       	rjmp	.+4      	; 0x74c <__stack+0x24d>
 748:	98 2c       	mov	r9, r8
 74a:	21 2c       	mov	r2, r1
 74c:	a4 fe       	sbrs	r10, 4
 74e:	10 c0       	rjmp	.+32     	; 0x770 <__stack+0x271>
 750:	b6 01       	movw	r22, r12
 752:	80 e3       	ldi	r24, 0x30	; 48
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 75a:	a2 fe       	sbrs	r10, 2
 75c:	17 c0       	rjmp	.+46     	; 0x78c <__stack+0x28d>
 75e:	a1 fc       	sbrc	r10, 1
 760:	03 c0       	rjmp	.+6      	; 0x768 <__stack+0x269>
 762:	88 e7       	ldi	r24, 0x78	; 120
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	02 c0       	rjmp	.+4      	; 0x76c <__stack+0x26d>
 768:	88 e5       	ldi	r24, 0x58	; 88
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	b6 01       	movw	r22, r12
 76e:	0c c0       	rjmp	.+24     	; 0x788 <__stack+0x289>
 770:	8a 2d       	mov	r24, r10
 772:	86 78       	andi	r24, 0x86	; 134
 774:	59 f0       	breq	.+22     	; 0x78c <__stack+0x28d>
 776:	a1 fe       	sbrs	r10, 1
 778:	02 c0       	rjmp	.+4      	; 0x77e <__stack+0x27f>
 77a:	8b e2       	ldi	r24, 0x2B	; 43
 77c:	01 c0       	rjmp	.+2      	; 0x780 <__stack+0x281>
 77e:	80 e2       	ldi	r24, 0x20	; 32
 780:	a7 fc       	sbrc	r10, 7
 782:	8d e2       	ldi	r24, 0x2D	; 45
 784:	b6 01       	movw	r22, r12
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 78c:	89 14       	cp	r8, r9
 78e:	38 f4       	brcc	.+14     	; 0x79e <__stack+0x29f>
 790:	b6 01       	movw	r22, r12
 792:	80 e3       	ldi	r24, 0x30	; 48
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 79a:	9a 94       	dec	r9
 79c:	f7 cf       	rjmp	.-18     	; 0x78c <__stack+0x28d>
 79e:	8a 94       	dec	r8
 7a0:	f3 01       	movw	r30, r6
 7a2:	e8 0d       	add	r30, r8
 7a4:	f1 1d       	adc	r31, r1
 7a6:	80 81       	ld	r24, Z
 7a8:	b6 01       	movw	r22, r12
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 7b0:	81 10       	cpse	r8, r1
 7b2:	f5 cf       	rjmp	.-22     	; 0x79e <__stack+0x29f>
 7b4:	22 20       	and	r2, r2
 7b6:	09 f4       	brne	.+2      	; 0x7ba <__stack+0x2bb>
 7b8:	42 ce       	rjmp	.-892    	; 0x43e <vfprintf+0x24>
 7ba:	b6 01       	movw	r22, r12
 7bc:	80 e2       	ldi	r24, 0x20	; 32
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	0e 94 48 05 	call	0xa90	; 0xa90 <fputc>
 7c4:	2a 94       	dec	r2
 7c6:	f6 cf       	rjmp	.-20     	; 0x7b4 <__stack+0x2b5>
 7c8:	f6 01       	movw	r30, r12
 7ca:	86 81       	ldd	r24, Z+6	; 0x06
 7cc:	97 81       	ldd	r25, Z+7	; 0x07
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <__stack+0x2d5>
 7d0:	8f ef       	ldi	r24, 0xFF	; 255
 7d2:	9f ef       	ldi	r25, 0xFF	; 255
 7d4:	2b 96       	adiw	r28, 0x0b	; 11
 7d6:	e2 e1       	ldi	r30, 0x12	; 18
 7d8:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__epilogue_restores__>

000007dc <calloc>:
 7dc:	0f 93       	push	r16
 7de:	1f 93       	push	r17
 7e0:	cf 93       	push	r28
 7e2:	df 93       	push	r29
 7e4:	86 9f       	mul	r24, r22
 7e6:	80 01       	movw	r16, r0
 7e8:	87 9f       	mul	r24, r23
 7ea:	10 0d       	add	r17, r0
 7ec:	96 9f       	mul	r25, r22
 7ee:	10 0d       	add	r17, r0
 7f0:	11 24       	eor	r1, r1
 7f2:	c8 01       	movw	r24, r16
 7f4:	0e 94 0a 04 	call	0x814	; 0x814 <malloc>
 7f8:	ec 01       	movw	r28, r24
 7fa:	00 97       	sbiw	r24, 0x00	; 0
 7fc:	29 f0       	breq	.+10     	; 0x808 <calloc+0x2c>
 7fe:	a8 01       	movw	r20, r16
 800:	60 e0       	ldi	r22, 0x00	; 0
 802:	70 e0       	ldi	r23, 0x00	; 0
 804:	0e 94 36 05 	call	0xa6c	; 0xa6c <memset>
 808:	ce 01       	movw	r24, r28
 80a:	df 91       	pop	r29
 80c:	cf 91       	pop	r28
 80e:	1f 91       	pop	r17
 810:	0f 91       	pop	r16
 812:	08 95       	ret

00000814 <malloc>:
 814:	0f 93       	push	r16
 816:	1f 93       	push	r17
 818:	cf 93       	push	r28
 81a:	df 93       	push	r29
 81c:	82 30       	cpi	r24, 0x02	; 2
 81e:	91 05       	cpc	r25, r1
 820:	10 f4       	brcc	.+4      	; 0x826 <malloc+0x12>
 822:	82 e0       	ldi	r24, 0x02	; 2
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <__flp>
 82a:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <__flp+0x1>
 82e:	20 e0       	ldi	r18, 0x00	; 0
 830:	30 e0       	ldi	r19, 0x00	; 0
 832:	a0 e0       	ldi	r26, 0x00	; 0
 834:	b0 e0       	ldi	r27, 0x00	; 0
 836:	30 97       	sbiw	r30, 0x00	; 0
 838:	19 f1       	breq	.+70     	; 0x880 <malloc+0x6c>
 83a:	40 81       	ld	r20, Z
 83c:	51 81       	ldd	r21, Z+1	; 0x01
 83e:	02 81       	ldd	r16, Z+2	; 0x02
 840:	13 81       	ldd	r17, Z+3	; 0x03
 842:	48 17       	cp	r20, r24
 844:	59 07       	cpc	r21, r25
 846:	c8 f0       	brcs	.+50     	; 0x87a <malloc+0x66>
 848:	84 17       	cp	r24, r20
 84a:	95 07       	cpc	r25, r21
 84c:	69 f4       	brne	.+26     	; 0x868 <malloc+0x54>
 84e:	10 97       	sbiw	r26, 0x00	; 0
 850:	31 f0       	breq	.+12     	; 0x85e <malloc+0x4a>
 852:	12 96       	adiw	r26, 0x02	; 2
 854:	0c 93       	st	X, r16
 856:	12 97       	sbiw	r26, 0x02	; 2
 858:	13 96       	adiw	r26, 0x03	; 3
 85a:	1c 93       	st	X, r17
 85c:	27 c0       	rjmp	.+78     	; 0x8ac <malloc+0x98>
 85e:	00 93 38 01 	sts	0x0138, r16	; 0x800138 <__flp>
 862:	10 93 39 01 	sts	0x0139, r17	; 0x800139 <__flp+0x1>
 866:	22 c0       	rjmp	.+68     	; 0x8ac <malloc+0x98>
 868:	21 15       	cp	r18, r1
 86a:	31 05       	cpc	r19, r1
 86c:	19 f0       	breq	.+6      	; 0x874 <malloc+0x60>
 86e:	42 17       	cp	r20, r18
 870:	53 07       	cpc	r21, r19
 872:	18 f4       	brcc	.+6      	; 0x87a <malloc+0x66>
 874:	9a 01       	movw	r18, r20
 876:	bd 01       	movw	r22, r26
 878:	ef 01       	movw	r28, r30
 87a:	df 01       	movw	r26, r30
 87c:	f8 01       	movw	r30, r16
 87e:	db cf       	rjmp	.-74     	; 0x836 <malloc+0x22>
 880:	21 15       	cp	r18, r1
 882:	31 05       	cpc	r19, r1
 884:	f9 f0       	breq	.+62     	; 0x8c4 <malloc+0xb0>
 886:	28 1b       	sub	r18, r24
 888:	39 0b       	sbc	r19, r25
 88a:	24 30       	cpi	r18, 0x04	; 4
 88c:	31 05       	cpc	r19, r1
 88e:	80 f4       	brcc	.+32     	; 0x8b0 <malloc+0x9c>
 890:	8a 81       	ldd	r24, Y+2	; 0x02
 892:	9b 81       	ldd	r25, Y+3	; 0x03
 894:	61 15       	cp	r22, r1
 896:	71 05       	cpc	r23, r1
 898:	21 f0       	breq	.+8      	; 0x8a2 <malloc+0x8e>
 89a:	fb 01       	movw	r30, r22
 89c:	93 83       	std	Z+3, r25	; 0x03
 89e:	82 83       	std	Z+2, r24	; 0x02
 8a0:	04 c0       	rjmp	.+8      	; 0x8aa <malloc+0x96>
 8a2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__flp+0x1>
 8a6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__flp>
 8aa:	fe 01       	movw	r30, r28
 8ac:	32 96       	adiw	r30, 0x02	; 2
 8ae:	44 c0       	rjmp	.+136    	; 0x938 <malloc+0x124>
 8b0:	fe 01       	movw	r30, r28
 8b2:	e2 0f       	add	r30, r18
 8b4:	f3 1f       	adc	r31, r19
 8b6:	81 93       	st	Z+, r24
 8b8:	91 93       	st	Z+, r25
 8ba:	22 50       	subi	r18, 0x02	; 2
 8bc:	31 09       	sbc	r19, r1
 8be:	39 83       	std	Y+1, r19	; 0x01
 8c0:	28 83       	st	Y, r18
 8c2:	3a c0       	rjmp	.+116    	; 0x938 <malloc+0x124>
 8c4:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 8c8:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 8cc:	23 2b       	or	r18, r19
 8ce:	41 f4       	brne	.+16     	; 0x8e0 <malloc+0xcc>
 8d0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8d4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8d8:	30 93 37 01 	sts	0x0137, r19	; 0x800137 <__brkval+0x1>
 8dc:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__brkval>
 8e0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 8e4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 8e8:	21 15       	cp	r18, r1
 8ea:	31 05       	cpc	r19, r1
 8ec:	41 f4       	brne	.+16     	; 0x8fe <malloc+0xea>
 8ee:	2d b7       	in	r18, 0x3d	; 61
 8f0:	3e b7       	in	r19, 0x3e	; 62
 8f2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8f6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8fa:	24 1b       	sub	r18, r20
 8fc:	35 0b       	sbc	r19, r21
 8fe:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <__brkval>
 902:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <__brkval+0x1>
 906:	e2 17       	cp	r30, r18
 908:	f3 07       	cpc	r31, r19
 90a:	a0 f4       	brcc	.+40     	; 0x934 <malloc+0x120>
 90c:	2e 1b       	sub	r18, r30
 90e:	3f 0b       	sbc	r19, r31
 910:	28 17       	cp	r18, r24
 912:	39 07       	cpc	r19, r25
 914:	78 f0       	brcs	.+30     	; 0x934 <malloc+0x120>
 916:	ac 01       	movw	r20, r24
 918:	4e 5f       	subi	r20, 0xFE	; 254
 91a:	5f 4f       	sbci	r21, 0xFF	; 255
 91c:	24 17       	cp	r18, r20
 91e:	35 07       	cpc	r19, r21
 920:	48 f0       	brcs	.+18     	; 0x934 <malloc+0x120>
 922:	4e 0f       	add	r20, r30
 924:	5f 1f       	adc	r21, r31
 926:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <__brkval+0x1>
 92a:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <__brkval>
 92e:	81 93       	st	Z+, r24
 930:	91 93       	st	Z+, r25
 932:	02 c0       	rjmp	.+4      	; 0x938 <malloc+0x124>
 934:	e0 e0       	ldi	r30, 0x00	; 0
 936:	f0 e0       	ldi	r31, 0x00	; 0
 938:	cf 01       	movw	r24, r30
 93a:	df 91       	pop	r29
 93c:	cf 91       	pop	r28
 93e:	1f 91       	pop	r17
 940:	0f 91       	pop	r16
 942:	08 95       	ret

00000944 <free>:
 944:	cf 93       	push	r28
 946:	df 93       	push	r29
 948:	00 97       	sbiw	r24, 0x00	; 0
 94a:	09 f4       	brne	.+2      	; 0x94e <free+0xa>
 94c:	81 c0       	rjmp	.+258    	; 0xa50 <free+0x10c>
 94e:	fc 01       	movw	r30, r24
 950:	32 97       	sbiw	r30, 0x02	; 2
 952:	13 82       	std	Z+3, r1	; 0x03
 954:	12 82       	std	Z+2, r1	; 0x02
 956:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <__flp>
 95a:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <__flp+0x1>
 95e:	10 97       	sbiw	r26, 0x00	; 0
 960:	81 f4       	brne	.+32     	; 0x982 <free+0x3e>
 962:	20 81       	ld	r18, Z
 964:	31 81       	ldd	r19, Z+1	; 0x01
 966:	82 0f       	add	r24, r18
 968:	93 1f       	adc	r25, r19
 96a:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 96e:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 972:	28 17       	cp	r18, r24
 974:	39 07       	cpc	r19, r25
 976:	51 f5       	brne	.+84     	; 0x9cc <free+0x88>
 978:	f0 93 37 01 	sts	0x0137, r31	; 0x800137 <__brkval+0x1>
 97c:	e0 93 36 01 	sts	0x0136, r30	; 0x800136 <__brkval>
 980:	67 c0       	rjmp	.+206    	; 0xa50 <free+0x10c>
 982:	ed 01       	movw	r28, r26
 984:	20 e0       	ldi	r18, 0x00	; 0
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	ce 17       	cp	r28, r30
 98a:	df 07       	cpc	r29, r31
 98c:	40 f4       	brcc	.+16     	; 0x99e <free+0x5a>
 98e:	4a 81       	ldd	r20, Y+2	; 0x02
 990:	5b 81       	ldd	r21, Y+3	; 0x03
 992:	9e 01       	movw	r18, r28
 994:	41 15       	cp	r20, r1
 996:	51 05       	cpc	r21, r1
 998:	f1 f0       	breq	.+60     	; 0x9d6 <free+0x92>
 99a:	ea 01       	movw	r28, r20
 99c:	f5 cf       	rjmp	.-22     	; 0x988 <free+0x44>
 99e:	d3 83       	std	Z+3, r29	; 0x03
 9a0:	c2 83       	std	Z+2, r28	; 0x02
 9a2:	40 81       	ld	r20, Z
 9a4:	51 81       	ldd	r21, Z+1	; 0x01
 9a6:	84 0f       	add	r24, r20
 9a8:	95 1f       	adc	r25, r21
 9aa:	c8 17       	cp	r28, r24
 9ac:	d9 07       	cpc	r29, r25
 9ae:	59 f4       	brne	.+22     	; 0x9c6 <free+0x82>
 9b0:	88 81       	ld	r24, Y
 9b2:	99 81       	ldd	r25, Y+1	; 0x01
 9b4:	84 0f       	add	r24, r20
 9b6:	95 1f       	adc	r25, r21
 9b8:	02 96       	adiw	r24, 0x02	; 2
 9ba:	91 83       	std	Z+1, r25	; 0x01
 9bc:	80 83       	st	Z, r24
 9be:	8a 81       	ldd	r24, Y+2	; 0x02
 9c0:	9b 81       	ldd	r25, Y+3	; 0x03
 9c2:	93 83       	std	Z+3, r25	; 0x03
 9c4:	82 83       	std	Z+2, r24	; 0x02
 9c6:	21 15       	cp	r18, r1
 9c8:	31 05       	cpc	r19, r1
 9ca:	29 f4       	brne	.+10     	; 0x9d6 <free+0x92>
 9cc:	f0 93 39 01 	sts	0x0139, r31	; 0x800139 <__flp+0x1>
 9d0:	e0 93 38 01 	sts	0x0138, r30	; 0x800138 <__flp>
 9d4:	3d c0       	rjmp	.+122    	; 0xa50 <free+0x10c>
 9d6:	e9 01       	movw	r28, r18
 9d8:	fb 83       	std	Y+3, r31	; 0x03
 9da:	ea 83       	std	Y+2, r30	; 0x02
 9dc:	49 91       	ld	r20, Y+
 9de:	59 91       	ld	r21, Y+
 9e0:	c4 0f       	add	r28, r20
 9e2:	d5 1f       	adc	r29, r21
 9e4:	ec 17       	cp	r30, r28
 9e6:	fd 07       	cpc	r31, r29
 9e8:	61 f4       	brne	.+24     	; 0xa02 <free+0xbe>
 9ea:	80 81       	ld	r24, Z
 9ec:	91 81       	ldd	r25, Z+1	; 0x01
 9ee:	84 0f       	add	r24, r20
 9f0:	95 1f       	adc	r25, r21
 9f2:	02 96       	adiw	r24, 0x02	; 2
 9f4:	e9 01       	movw	r28, r18
 9f6:	99 83       	std	Y+1, r25	; 0x01
 9f8:	88 83       	st	Y, r24
 9fa:	82 81       	ldd	r24, Z+2	; 0x02
 9fc:	93 81       	ldd	r25, Z+3	; 0x03
 9fe:	9b 83       	std	Y+3, r25	; 0x03
 a00:	8a 83       	std	Y+2, r24	; 0x02
 a02:	e0 e0       	ldi	r30, 0x00	; 0
 a04:	f0 e0       	ldi	r31, 0x00	; 0
 a06:	12 96       	adiw	r26, 0x02	; 2
 a08:	8d 91       	ld	r24, X+
 a0a:	9c 91       	ld	r25, X
 a0c:	13 97       	sbiw	r26, 0x03	; 3
 a0e:	00 97       	sbiw	r24, 0x00	; 0
 a10:	19 f0       	breq	.+6      	; 0xa18 <free+0xd4>
 a12:	fd 01       	movw	r30, r26
 a14:	dc 01       	movw	r26, r24
 a16:	f7 cf       	rjmp	.-18     	; 0xa06 <free+0xc2>
 a18:	8d 91       	ld	r24, X+
 a1a:	9c 91       	ld	r25, X
 a1c:	11 97       	sbiw	r26, 0x01	; 1
 a1e:	9d 01       	movw	r18, r26
 a20:	2e 5f       	subi	r18, 0xFE	; 254
 a22:	3f 4f       	sbci	r19, 0xFF	; 255
 a24:	82 0f       	add	r24, r18
 a26:	93 1f       	adc	r25, r19
 a28:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 a2c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 a30:	28 17       	cp	r18, r24
 a32:	39 07       	cpc	r19, r25
 a34:	69 f4       	brne	.+26     	; 0xa50 <free+0x10c>
 a36:	30 97       	sbiw	r30, 0x00	; 0
 a38:	29 f4       	brne	.+10     	; 0xa44 <free+0x100>
 a3a:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <__flp+0x1>
 a3e:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__flp>
 a42:	02 c0       	rjmp	.+4      	; 0xa48 <free+0x104>
 a44:	13 82       	std	Z+3, r1	; 0x03
 a46:	12 82       	std	Z+2, r1	; 0x02
 a48:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <__brkval+0x1>
 a4c:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <__brkval>
 a50:	df 91       	pop	r29
 a52:	cf 91       	pop	r28
 a54:	08 95       	ret

00000a56 <strnlen_P>:
 a56:	fc 01       	movw	r30, r24
 a58:	05 90       	lpm	r0, Z+
 a5a:	61 50       	subi	r22, 0x01	; 1
 a5c:	70 40       	sbci	r23, 0x00	; 0
 a5e:	01 10       	cpse	r0, r1
 a60:	d8 f7       	brcc	.-10     	; 0xa58 <strnlen_P+0x2>
 a62:	80 95       	com	r24
 a64:	90 95       	com	r25
 a66:	8e 0f       	add	r24, r30
 a68:	9f 1f       	adc	r25, r31
 a6a:	08 95       	ret

00000a6c <memset>:
 a6c:	dc 01       	movw	r26, r24
 a6e:	01 c0       	rjmp	.+2      	; 0xa72 <memset+0x6>
 a70:	6d 93       	st	X+, r22
 a72:	41 50       	subi	r20, 0x01	; 1
 a74:	50 40       	sbci	r21, 0x00	; 0
 a76:	e0 f7       	brcc	.-8      	; 0xa70 <memset+0x4>
 a78:	08 95       	ret

00000a7a <strnlen>:
 a7a:	fc 01       	movw	r30, r24
 a7c:	61 50       	subi	r22, 0x01	; 1
 a7e:	70 40       	sbci	r23, 0x00	; 0
 a80:	01 90       	ld	r0, Z+
 a82:	01 10       	cpse	r0, r1
 a84:	d8 f7       	brcc	.-10     	; 0xa7c <strnlen+0x2>
 a86:	80 95       	com	r24
 a88:	90 95       	com	r25
 a8a:	8e 0f       	add	r24, r30
 a8c:	9f 1f       	adc	r25, r31
 a8e:	08 95       	ret

00000a90 <fputc>:
 a90:	0f 93       	push	r16
 a92:	1f 93       	push	r17
 a94:	cf 93       	push	r28
 a96:	df 93       	push	r29
 a98:	fb 01       	movw	r30, r22
 a9a:	23 81       	ldd	r18, Z+3	; 0x03
 a9c:	21 fd       	sbrc	r18, 1
 a9e:	03 c0       	rjmp	.+6      	; 0xaa6 <fputc+0x16>
 aa0:	8f ef       	ldi	r24, 0xFF	; 255
 aa2:	9f ef       	ldi	r25, 0xFF	; 255
 aa4:	2c c0       	rjmp	.+88     	; 0xafe <fputc+0x6e>
 aa6:	22 ff       	sbrs	r18, 2
 aa8:	16 c0       	rjmp	.+44     	; 0xad6 <fputc+0x46>
 aaa:	46 81       	ldd	r20, Z+6	; 0x06
 aac:	57 81       	ldd	r21, Z+7	; 0x07
 aae:	24 81       	ldd	r18, Z+4	; 0x04
 ab0:	35 81       	ldd	r19, Z+5	; 0x05
 ab2:	42 17       	cp	r20, r18
 ab4:	53 07       	cpc	r21, r19
 ab6:	44 f4       	brge	.+16     	; 0xac8 <fputc+0x38>
 ab8:	a0 81       	ld	r26, Z
 aba:	b1 81       	ldd	r27, Z+1	; 0x01
 abc:	9d 01       	movw	r18, r26
 abe:	2f 5f       	subi	r18, 0xFF	; 255
 ac0:	3f 4f       	sbci	r19, 0xFF	; 255
 ac2:	31 83       	std	Z+1, r19	; 0x01
 ac4:	20 83       	st	Z, r18
 ac6:	8c 93       	st	X, r24
 ac8:	26 81       	ldd	r18, Z+6	; 0x06
 aca:	37 81       	ldd	r19, Z+7	; 0x07
 acc:	2f 5f       	subi	r18, 0xFF	; 255
 ace:	3f 4f       	sbci	r19, 0xFF	; 255
 ad0:	37 83       	std	Z+7, r19	; 0x07
 ad2:	26 83       	std	Z+6, r18	; 0x06
 ad4:	14 c0       	rjmp	.+40     	; 0xafe <fputc+0x6e>
 ad6:	8b 01       	movw	r16, r22
 ad8:	ec 01       	movw	r28, r24
 ada:	fb 01       	movw	r30, r22
 adc:	00 84       	ldd	r0, Z+8	; 0x08
 ade:	f1 85       	ldd	r31, Z+9	; 0x09
 ae0:	e0 2d       	mov	r30, r0
 ae2:	09 95       	icall
 ae4:	89 2b       	or	r24, r25
 ae6:	e1 f6       	brne	.-72     	; 0xaa0 <fputc+0x10>
 ae8:	d8 01       	movw	r26, r16
 aea:	16 96       	adiw	r26, 0x06	; 6
 aec:	8d 91       	ld	r24, X+
 aee:	9c 91       	ld	r25, X
 af0:	17 97       	sbiw	r26, 0x07	; 7
 af2:	01 96       	adiw	r24, 0x01	; 1
 af4:	17 96       	adiw	r26, 0x07	; 7
 af6:	9c 93       	st	X, r25
 af8:	8e 93       	st	-X, r24
 afa:	16 97       	sbiw	r26, 0x06	; 6
 afc:	ce 01       	movw	r24, r28
 afe:	df 91       	pop	r29
 b00:	cf 91       	pop	r28
 b02:	1f 91       	pop	r17
 b04:	0f 91       	pop	r16
 b06:	08 95       	ret

00000b08 <__ultoa_invert>:
 b08:	fa 01       	movw	r30, r20
 b0a:	aa 27       	eor	r26, r26
 b0c:	28 30       	cpi	r18, 0x08	; 8
 b0e:	51 f1       	breq	.+84     	; 0xb64 <__ultoa_invert+0x5c>
 b10:	20 31       	cpi	r18, 0x10	; 16
 b12:	81 f1       	breq	.+96     	; 0xb74 <__ultoa_invert+0x6c>
 b14:	e8 94       	clt
 b16:	6f 93       	push	r22
 b18:	6e 7f       	andi	r22, 0xFE	; 254
 b1a:	6e 5f       	subi	r22, 0xFE	; 254
 b1c:	7f 4f       	sbci	r23, 0xFF	; 255
 b1e:	8f 4f       	sbci	r24, 0xFF	; 255
 b20:	9f 4f       	sbci	r25, 0xFF	; 255
 b22:	af 4f       	sbci	r26, 0xFF	; 255
 b24:	b1 e0       	ldi	r27, 0x01	; 1
 b26:	3e d0       	rcall	.+124    	; 0xba4 <__ultoa_invert+0x9c>
 b28:	b4 e0       	ldi	r27, 0x04	; 4
 b2a:	3c d0       	rcall	.+120    	; 0xba4 <__ultoa_invert+0x9c>
 b2c:	67 0f       	add	r22, r23
 b2e:	78 1f       	adc	r23, r24
 b30:	89 1f       	adc	r24, r25
 b32:	9a 1f       	adc	r25, r26
 b34:	a1 1d       	adc	r26, r1
 b36:	68 0f       	add	r22, r24
 b38:	79 1f       	adc	r23, r25
 b3a:	8a 1f       	adc	r24, r26
 b3c:	91 1d       	adc	r25, r1
 b3e:	a1 1d       	adc	r26, r1
 b40:	6a 0f       	add	r22, r26
 b42:	71 1d       	adc	r23, r1
 b44:	81 1d       	adc	r24, r1
 b46:	91 1d       	adc	r25, r1
 b48:	a1 1d       	adc	r26, r1
 b4a:	20 d0       	rcall	.+64     	; 0xb8c <__ultoa_invert+0x84>
 b4c:	09 f4       	brne	.+2      	; 0xb50 <__ultoa_invert+0x48>
 b4e:	68 94       	set
 b50:	3f 91       	pop	r19
 b52:	2a e0       	ldi	r18, 0x0A	; 10
 b54:	26 9f       	mul	r18, r22
 b56:	11 24       	eor	r1, r1
 b58:	30 19       	sub	r19, r0
 b5a:	30 5d       	subi	r19, 0xD0	; 208
 b5c:	31 93       	st	Z+, r19
 b5e:	de f6       	brtc	.-74     	; 0xb16 <__ultoa_invert+0xe>
 b60:	cf 01       	movw	r24, r30
 b62:	08 95       	ret
 b64:	46 2f       	mov	r20, r22
 b66:	47 70       	andi	r20, 0x07	; 7
 b68:	40 5d       	subi	r20, 0xD0	; 208
 b6a:	41 93       	st	Z+, r20
 b6c:	b3 e0       	ldi	r27, 0x03	; 3
 b6e:	0f d0       	rcall	.+30     	; 0xb8e <__ultoa_invert+0x86>
 b70:	c9 f7       	brne	.-14     	; 0xb64 <__ultoa_invert+0x5c>
 b72:	f6 cf       	rjmp	.-20     	; 0xb60 <__ultoa_invert+0x58>
 b74:	46 2f       	mov	r20, r22
 b76:	4f 70       	andi	r20, 0x0F	; 15
 b78:	40 5d       	subi	r20, 0xD0	; 208
 b7a:	4a 33       	cpi	r20, 0x3A	; 58
 b7c:	18 f0       	brcs	.+6      	; 0xb84 <__ultoa_invert+0x7c>
 b7e:	49 5d       	subi	r20, 0xD9	; 217
 b80:	31 fd       	sbrc	r19, 1
 b82:	40 52       	subi	r20, 0x20	; 32
 b84:	41 93       	st	Z+, r20
 b86:	02 d0       	rcall	.+4      	; 0xb8c <__ultoa_invert+0x84>
 b88:	a9 f7       	brne	.-22     	; 0xb74 <__ultoa_invert+0x6c>
 b8a:	ea cf       	rjmp	.-44     	; 0xb60 <__ultoa_invert+0x58>
 b8c:	b4 e0       	ldi	r27, 0x04	; 4
 b8e:	a6 95       	lsr	r26
 b90:	97 95       	ror	r25
 b92:	87 95       	ror	r24
 b94:	77 95       	ror	r23
 b96:	67 95       	ror	r22
 b98:	ba 95       	dec	r27
 b9a:	c9 f7       	brne	.-14     	; 0xb8e <__ultoa_invert+0x86>
 b9c:	00 97       	sbiw	r24, 0x00	; 0
 b9e:	61 05       	cpc	r22, r1
 ba0:	71 05       	cpc	r23, r1
 ba2:	08 95       	ret
 ba4:	9b 01       	movw	r18, r22
 ba6:	ac 01       	movw	r20, r24
 ba8:	0a 2e       	mov	r0, r26
 baa:	06 94       	lsr	r0
 bac:	57 95       	ror	r21
 bae:	47 95       	ror	r20
 bb0:	37 95       	ror	r19
 bb2:	27 95       	ror	r18
 bb4:	ba 95       	dec	r27
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__ultoa_invert+0xa2>
 bb8:	62 0f       	add	r22, r18
 bba:	73 1f       	adc	r23, r19
 bbc:	84 1f       	adc	r24, r20
 bbe:	95 1f       	adc	r25, r21
 bc0:	a0 1d       	adc	r26, r0
 bc2:	08 95       	ret

00000bc4 <__prologue_saves__>:
 bc4:	2f 92       	push	r2
 bc6:	3f 92       	push	r3
 bc8:	4f 92       	push	r4
 bca:	5f 92       	push	r5
 bcc:	6f 92       	push	r6
 bce:	7f 92       	push	r7
 bd0:	8f 92       	push	r8
 bd2:	9f 92       	push	r9
 bd4:	af 92       	push	r10
 bd6:	bf 92       	push	r11
 bd8:	cf 92       	push	r12
 bda:	df 92       	push	r13
 bdc:	ef 92       	push	r14
 bde:	ff 92       	push	r15
 be0:	0f 93       	push	r16
 be2:	1f 93       	push	r17
 be4:	cf 93       	push	r28
 be6:	df 93       	push	r29
 be8:	cd b7       	in	r28, 0x3d	; 61
 bea:	de b7       	in	r29, 0x3e	; 62
 bec:	ca 1b       	sub	r28, r26
 bee:	db 0b       	sbc	r29, r27
 bf0:	0f b6       	in	r0, 0x3f	; 63
 bf2:	f8 94       	cli
 bf4:	de bf       	out	0x3e, r29	; 62
 bf6:	0f be       	out	0x3f, r0	; 63
 bf8:	cd bf       	out	0x3d, r28	; 61
 bfa:	09 94       	ijmp

00000bfc <__epilogue_restores__>:
 bfc:	2a 88       	ldd	r2, Y+18	; 0x12
 bfe:	39 88       	ldd	r3, Y+17	; 0x11
 c00:	48 88       	ldd	r4, Y+16	; 0x10
 c02:	5f 84       	ldd	r5, Y+15	; 0x0f
 c04:	6e 84       	ldd	r6, Y+14	; 0x0e
 c06:	7d 84       	ldd	r7, Y+13	; 0x0d
 c08:	8c 84       	ldd	r8, Y+12	; 0x0c
 c0a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c0c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c0e:	b9 84       	ldd	r11, Y+9	; 0x09
 c10:	c8 84       	ldd	r12, Y+8	; 0x08
 c12:	df 80       	ldd	r13, Y+7	; 0x07
 c14:	ee 80       	ldd	r14, Y+6	; 0x06
 c16:	fd 80       	ldd	r15, Y+5	; 0x05
 c18:	0c 81       	ldd	r16, Y+4	; 0x04
 c1a:	1b 81       	ldd	r17, Y+3	; 0x03
 c1c:	aa 81       	ldd	r26, Y+2	; 0x02
 c1e:	b9 81       	ldd	r27, Y+1	; 0x01
 c20:	ce 0f       	add	r28, r30
 c22:	d1 1d       	adc	r29, r1
 c24:	0f b6       	in	r0, 0x3f	; 63
 c26:	f8 94       	cli
 c28:	de bf       	out	0x3e, r29	; 62
 c2a:	0f be       	out	0x3f, r0	; 63
 c2c:	cd bf       	out	0x3d, r28	; 61
 c2e:	ed 01       	movw	r28, r26
 c30:	08 95       	ret

00000c32 <_exit>:
 c32:	f8 94       	cli

00000c34 <__stop_program>:
 c34:	ff cf       	rjmp	.-2      	; 0xc34 <__stop_program>
