
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800100  00001274  00001308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001274  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001e2  008001e2  000013ea  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001448  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000172d  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d99  00000000  00000000  00002d41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d4d  00000000  00000000  00003ada  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000048c  00000000  00000000  00004828  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000660  00000000  00000000  00004cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e83  00000000  00000000  00005314  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00006197  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_1>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e4 e7       	ldi	r30, 0x74	; 116
      84:	f2 e1       	ldi	r31, 0x12	; 18
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a2 3e       	cpi	r26, 0xE2	; 226
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	21 e0       	ldi	r18, 0x01	; 1
      94:	a2 ee       	ldi	r26, 0xE2	; 226
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	ac 3e       	cpi	r26, 0xEC	; 236
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 3d 02 	call	0x47a	; 0x47a <main>
      a6:	0c 94 38 09 	jmp	0x1270	; 0x1270 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <clock_timer>:

//should be deleted?
void adc_init(){
	//setting the ADC CS to low to select it (active low) from the NAND gates
	DDRC |= (1 << PC2);
	PORTC = 0x04;
      ae:	8c 9a       	sbi	0x11, 4	; 17
      b0:	eb e8       	ldi	r30, 0x8B	; 139
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	88 64       	ori	r24, 0x48	; 72
      b8:	80 83       	st	Z, r24
      ba:	ea e8       	ldi	r30, 0x8A	; 138
      bc:	f0 e0       	ldi	r31, 0x00	; 0
      be:	80 81       	ld	r24, Z
      c0:	89 60       	ori	r24, 0x09	; 9
      c2:	80 83       	st	Z, r24
      c4:	81 e0       	ldi	r24, 0x01	; 1
      c6:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
      ca:	08 95       	ret

000000cc <adc_read>:
//volatile
uint8_t adc_read(uint8_t channel){	
	uint8_t adc_channel;
	
	//select which channel to write to
	if (channel==0){
      cc:	88 23       	and	r24, r24
      ce:	41 f0       	breq	.+16     	; 0xe0 <adc_read+0x14>
		 adc_channel = 0b10000000;
	}
	else if (channel==1){
      d0:	81 30       	cpi	r24, 0x01	; 1
      d2:	41 f0       	breq	.+16     	; 0xe4 <adc_read+0x18>
		adc_channel = 0b10000001;
	}
	else if (channel==2){
      d4:	82 30       	cpi	r24, 0x02	; 2
      d6:	41 f0       	breq	.+16     	; 0xe8 <adc_read+0x1c>
		adc_channel = 0b10000010;
	}
	else if (channel==3){
      d8:	83 30       	cpi	r24, 0x03	; 3
      da:	39 f4       	brne	.+14     	; 0xea <adc_read+0x1e>
		adc_channel = 0b10000011;
      dc:	93 e8       	ldi	r25, 0x83	; 131
      de:	05 c0       	rjmp	.+10     	; 0xea <adc_read+0x1e>
uint8_t adc_read(uint8_t channel){	
	uint8_t adc_channel;
	
	//select which channel to write to
	if (channel==0){
		 adc_channel = 0b10000000;
      e0:	90 e8       	ldi	r25, 0x80	; 128
      e2:	03 c0       	rjmp	.+6      	; 0xea <adc_read+0x1e>
	}
	else if (channel==1){
		adc_channel = 0b10000001;
      e4:	91 e8       	ldi	r25, 0x81	; 129
      e6:	01 c0       	rjmp	.+2      	; 0xea <adc_read+0x1e>
	}
	else if (channel==2){
		adc_channel = 0b10000010;
      e8:	92 e8       	ldi	r25, 0x82	; 130
	}
	else if (channel==3){
		adc_channel = 0b10000011;
	}
	adc_reg[0] = adc_channel;
      ea:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <adc_reg>
      ee:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <adc_reg+0x1>
      f2:	90 83       	st	Z, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      f4:	81 e4       	ldi	r24, 0x41	; 65
      f6:	8a 95       	dec	r24
      f8:	f1 f7       	brne	.-4      	; 0xf6 <adc_read+0x2a>
      fa:	00 c0       	rjmp	.+0      	; 0xfc <adc_read+0x30>
	_delay_us(40);
	uint8_t adc_val = adc_reg[0];
      fc:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <adc_reg>
     100:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <adc_reg+0x1>
     104:	80 81       	ld	r24, Z
	
	return adc_val;
}
     106:	08 95       	ret

00000108 <can_receive>:
		printf("data:%d at i = %d\r\n", msg.data[i], i);
	}
	mcp2515_request_to_send(0);
	
	printf("Sending:\r\ndata: %c\r\nlength: %d\r\nid: %d\r\n\n", msg.data[0], msg.length, msg.id);
}
     108:	af 92       	push	r10
     10a:	bf 92       	push	r11
     10c:	cf 92       	push	r12
     10e:	df 92       	push	r13
     110:	ff 92       	push	r15
     112:	0f 93       	push	r16
     114:	1f 93       	push	r17
     116:	cf 93       	push	r28
     118:	df 93       	push	r29
     11a:	cd b7       	in	r28, 0x3d	; 61
     11c:	de b7       	in	r29, 0x3e	; 62
     11e:	2c 97       	sbiw	r28, 0x0c	; 12
     120:	0f b6       	in	r0, 0x3f	; 63
     122:	f8 94       	cli
     124:	de bf       	out	0x3e, r29	; 62
     126:	0f be       	out	0x3f, r0	; 63
     128:	cd bf       	out	0x3d, r28	; 61
     12a:	0e 94 0d 02 	call	0x41a	; 0x41a <mcp2515_read_status>
     12e:	80 ff       	sbrs	r24, 0
     130:	33 c0       	rjmp	.+102    	; 0x198 <can_receive+0x90>
     132:	81 e6       	ldi	r24, 0x61	; 97
     134:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     138:	a8 2e       	mov	r10, r24
     13a:	82 e6       	ldi	r24, 0x62	; 98
     13c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     140:	b1 2c       	mov	r11, r1
     142:	aa 0c       	add	r10, r10
     144:	bb 1c       	adc	r11, r11
     146:	aa 0c       	add	r10, r10
     148:	bb 1c       	adc	r11, r11
     14a:	aa 0c       	add	r10, r10
     14c:	bb 1c       	adc	r11, r11
     14e:	82 95       	swap	r24
     150:	86 95       	lsr	r24
     152:	87 70       	andi	r24, 0x07	; 7
     154:	a8 2a       	or	r10, r24
     156:	85 e6       	ldi	r24, 0x65	; 101
     158:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     15c:	c8 2e       	mov	r12, r24
     15e:	d1 2c       	mov	r13, r1
     160:	1c 14       	cp	r1, r12
     162:	1d 04       	cpc	r1, r13
     164:	a4 f4       	brge	.+40     	; 0x18e <can_receive+0x86>
     166:	00 e0       	ldi	r16, 0x00	; 0
     168:	10 e0       	ldi	r17, 0x00	; 0
     16a:	f1 2c       	mov	r15, r1
     16c:	86 e6       	ldi	r24, 0x66	; 102
     16e:	8f 0d       	add	r24, r15
     170:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     174:	e5 e0       	ldi	r30, 0x05	; 5
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	ec 0f       	add	r30, r28
     17a:	fd 1f       	adc	r31, r29
     17c:	e0 0f       	add	r30, r16
     17e:	f1 1f       	adc	r31, r17
     180:	80 83       	st	Z, r24
     182:	f3 94       	inc	r15
     184:	0f 2d       	mov	r16, r15
     186:	10 e0       	ldi	r17, 0x00	; 0
     188:	0c 15       	cp	r16, r12
     18a:	1d 05       	cpc	r17, r13
     18c:	7c f3       	brlt	.-34     	; 0x16c <can_receive+0x64>
     18e:	40 e0       	ldi	r20, 0x00	; 0
     190:	61 e0       	ldi	r22, 0x01	; 1
     192:	8c e2       	ldi	r24, 0x2C	; 44
     194:	0e 94 15 02 	call	0x42a	; 0x42a <mcp2515_bit_modify>
     198:	0e 94 0d 02 	call	0x41a	; 0x41a <mcp2515_read_status>
     19c:	81 ff       	sbrs	r24, 1
     19e:	33 c0       	rjmp	.+102    	; 0x206 <can_receive+0xfe>
     1a0:	81 e7       	ldi	r24, 0x71	; 113
     1a2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     1a6:	a8 2e       	mov	r10, r24
     1a8:	82 e7       	ldi	r24, 0x72	; 114
     1aa:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     1ae:	b1 2c       	mov	r11, r1
     1b0:	aa 0c       	add	r10, r10
     1b2:	bb 1c       	adc	r11, r11
     1b4:	aa 0c       	add	r10, r10
     1b6:	bb 1c       	adc	r11, r11
     1b8:	aa 0c       	add	r10, r10
     1ba:	bb 1c       	adc	r11, r11
     1bc:	82 95       	swap	r24
     1be:	86 95       	lsr	r24
     1c0:	87 70       	andi	r24, 0x07	; 7
     1c2:	a8 2a       	or	r10, r24
     1c4:	85 e7       	ldi	r24, 0x75	; 117
     1c6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     1ca:	c8 2e       	mov	r12, r24
     1cc:	d1 2c       	mov	r13, r1
     1ce:	1c 14       	cp	r1, r12
     1d0:	1d 04       	cpc	r1, r13
     1d2:	a4 f4       	brge	.+40     	; 0x1fc <can_receive+0xf4>
     1d4:	00 e0       	ldi	r16, 0x00	; 0
     1d6:	10 e0       	ldi	r17, 0x00	; 0
     1d8:	f1 2c       	mov	r15, r1
     1da:	86 e7       	ldi	r24, 0x76	; 118
     1dc:	8f 0d       	add	r24, r15
     1de:	0e 94 ff 01 	call	0x3fe	; 0x3fe <mcp2515_read>
     1e2:	e5 e0       	ldi	r30, 0x05	; 5
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	ec 0f       	add	r30, r28
     1e8:	fd 1f       	adc	r31, r29
     1ea:	e0 0f       	add	r30, r16
     1ec:	f1 1f       	adc	r31, r17
     1ee:	80 83       	st	Z, r24
     1f0:	f3 94       	inc	r15
     1f2:	0f 2d       	mov	r16, r15
     1f4:	10 e0       	ldi	r17, 0x00	; 0
     1f6:	0c 15       	cp	r16, r12
     1f8:	1d 05       	cpc	r17, r13
     1fa:	7c f3       	brlt	.-34     	; 0x1da <can_receive+0xd2>
     1fc:	40 e0       	ldi	r20, 0x00	; 0
     1fe:	62 e0       	ldi	r22, 0x02	; 2
     200:	8c e2       	ldi	r24, 0x2C	; 44
     202:	0e 94 15 02 	call	0x42a	; 0x42a <mcp2515_bit_modify>
     206:	bf 92       	push	r11
     208:	af 92       	push	r10
     20a:	df 92       	push	r13
     20c:	cf 92       	push	r12
     20e:	8d 81       	ldd	r24, Y+5	; 0x05
     210:	1f 92       	push	r1
     212:	8f 93       	push	r24
     214:	80 e7       	ldi	r24, 0x70	; 112
     216:	91 e0       	ldi	r25, 0x01	; 1
     218:	9f 93       	push	r25
     21a:	8f 93       	push	r24
     21c:	0e 94 16 05 	call	0xa2c	; 0xa2c <printf>
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	2c 96       	adiw	r28, 0x0c	; 12
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	f8 94       	cli
     230:	de bf       	out	0x3e, r29	; 62
     232:	0f be       	out	0x3f, r0	; 63
     234:	cd bf       	out	0x3d, r28	; 61
     236:	df 91       	pop	r29
     238:	cf 91       	pop	r28
     23a:	1f 91       	pop	r17
     23c:	0f 91       	pop	r16
     23e:	ff 90       	pop	r15
     240:	df 90       	pop	r13
     242:	cf 90       	pop	r12
     244:	bf 90       	pop	r11
     246:	af 90       	pop	r10
     248:	08 95       	ret

0000024a <__vector_1>:

ISR(INT0_vect){
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	2f 93       	push	r18
     256:	3f 93       	push	r19
     258:	4f 93       	push	r20
     25a:	5f 93       	push	r21
     25c:	6f 93       	push	r22
     25e:	7f 93       	push	r23
     260:	8f 93       	push	r24
     262:	9f 93       	push	r25
     264:	af 93       	push	r26
     266:	bf 93       	push	r27
     268:	ef 93       	push	r30
     26a:	ff 93       	push	r31
	can_receive();
     26c:	0e 94 84 00 	call	0x108	; 0x108 <can_receive>
}
     270:	ff 91       	pop	r31
     272:	ef 91       	pop	r30
     274:	bf 91       	pop	r27
     276:	af 91       	pop	r26
     278:	9f 91       	pop	r25
     27a:	8f 91       	pop	r24
     27c:	7f 91       	pop	r23
     27e:	6f 91       	pop	r22
     280:	5f 91       	pop	r21
     282:	4f 91       	pop	r20
     284:	3f 91       	pop	r19
     286:	2f 91       	pop	r18
     288:	0f 90       	pop	r0
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	0f 90       	pop	r0
     28e:	1f 90       	pop	r1
     290:	18 95       	reti

00000292 <joystick_init>:
#include "joystick.h"
#include "can.h"

//enum position{Left, Right, Up, Down, Neutral};

int joystick_init(uint8_t channel, int samples){
     292:	9f 92       	push	r9
     294:	af 92       	push	r10
     296:	bf 92       	push	r11
     298:	cf 92       	push	r12
     29a:	df 92       	push	r13
     29c:	ef 92       	push	r14
     29e:	ff 92       	push	r15
     2a0:	0f 93       	push	r16
     2a2:	1f 93       	push	r17
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	98 2e       	mov	r9, r24
     2aa:	5b 01       	movw	r10, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ac:	2f ef       	ldi	r18, 0xFF	; 255
     2ae:	8f e7       	ldi	r24, 0x7F	; 127
     2b0:	91 e0       	ldi	r25, 0x01	; 1
     2b2:	21 50       	subi	r18, 0x01	; 1
     2b4:	80 40       	sbci	r24, 0x00	; 0
     2b6:	90 40       	sbci	r25, 0x00	; 0
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <joystick_init+0x20>
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <joystick_init+0x2a>
     2bc:	00 c0       	rjmp	.+0      	; 0x2be <joystick_init+0x2c>
	uint8_t pos = 0;
	int center = 0;
	_delay_ms(100);
	for(int i=0; i<samples; i++){
     2be:	16 16       	cp	r1, r22
     2c0:	17 06       	cpc	r1, r23
     2c2:	04 f5       	brge	.+64     	; 0x304 <joystick_init+0x72>
     2c4:	c0 e0       	ldi	r28, 0x00	; 0
     2c6:	d0 e0       	ldi	r29, 0x00	; 0
     2c8:	00 e0       	ldi	r16, 0x00	; 0
     2ca:	10 e0       	ldi	r17, 0x00	; 0
		pos = adc_read(channel);
		printf("value: %d\r\n", pos);
     2cc:	0f 2e       	mov	r0, r31
     2ce:	f0 e9       	ldi	r31, 0x90	; 144
     2d0:	ef 2e       	mov	r14, r31
     2d2:	f1 e0       	ldi	r31, 0x01	; 1
     2d4:	ff 2e       	mov	r15, r31
     2d6:	f0 2d       	mov	r31, r0
int joystick_init(uint8_t channel, int samples){
	uint8_t pos = 0;
	int center = 0;
	_delay_ms(100);
	for(int i=0; i<samples; i++){
		pos = adc_read(channel);
     2d8:	89 2d       	mov	r24, r9
     2da:	0e 94 66 00 	call	0xcc	; 0xcc <adc_read>
		printf("value: %d\r\n", pos);
     2de:	c8 2e       	mov	r12, r24
     2e0:	d1 2c       	mov	r13, r1
     2e2:	1f 92       	push	r1
     2e4:	8f 93       	push	r24
     2e6:	ff 92       	push	r15
     2e8:	ef 92       	push	r14
     2ea:	0e 94 16 05 	call	0xa2c	; 0xa2c <printf>
		center = center + (int)pos;
     2ee:	0c 0d       	add	r16, r12
     2f0:	1d 1d       	adc	r17, r13

int joystick_init(uint8_t channel, int samples){
	uint8_t pos = 0;
	int center = 0;
	_delay_ms(100);
	for(int i=0; i<samples; i++){
     2f2:	21 96       	adiw	r28, 0x01	; 1
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	ac 16       	cp	r10, r28
     2fe:	bd 06       	cpc	r11, r29
     300:	59 f7       	brne	.-42     	; 0x2d8 <joystick_init+0x46>
     302:	02 c0       	rjmp	.+4      	; 0x308 <joystick_init+0x76>

//enum position{Left, Right, Up, Down, Neutral};

int joystick_init(uint8_t channel, int samples){
	uint8_t pos = 0;
	int center = 0;
     304:	00 e0       	ldi	r16, 0x00	; 0
     306:	10 e0       	ldi	r17, 0x00	; 0
		printf("value: %d\r\n", pos);
		center = center + (int)pos;
	}
	//printf("sum: %d\r\n", center);
	center = center/samples;
	return center;
     308:	c8 01       	movw	r24, r16
     30a:	b5 01       	movw	r22, r10
     30c:	0e 94 a3 04 	call	0x946	; 0x946 <__divmodhi4>
     310:	cb 01       	movw	r24, r22
}
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	ff 90       	pop	r15
     31c:	ef 90       	pop	r14
     31e:	df 90       	pop	r13
     320:	cf 90       	pop	r12
     322:	bf 90       	pop	r11
     324:	af 90       	pop	r10
     326:	9f 90       	pop	r9
     328:	08 95       	ret

0000032a <normalize_output_joystick>:

int normalize_output_joystick(uint8_t value, int center){
     32a:	cf 92       	push	r12
     32c:	df 92       	push	r13
     32e:	ef 92       	push	r14
     330:	ff 92       	push	r15
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	eb 01       	movw	r28, r22
	int position = 0;
	if((int)value <= center){
     338:	28 2f       	mov	r18, r24
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	62 17       	cp	r22, r18
     33e:	73 07       	cpc	r23, r19
     340:	24 f1       	brlt	.+72     	; 0x38a <normalize_output_joystick+0x60>
		position = (((float)value/(float)center)*100)-100;
     342:	68 2f       	mov	r22, r24
     344:	70 e0       	ldi	r23, 0x00	; 0
     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	0e 94 a8 03 	call	0x750	; 0x750 <__floatunsisf>
     34e:	6b 01       	movw	r12, r22
     350:	7c 01       	movw	r14, r24
     352:	be 01       	movw	r22, r28
     354:	dd 0f       	add	r29, r29
     356:	88 0b       	sbc	r24, r24
     358:	99 0b       	sbc	r25, r25
     35a:	0e 94 aa 03 	call	0x754	; 0x754 <__floatsisf>
     35e:	9b 01       	movw	r18, r22
     360:	ac 01       	movw	r20, r24
     362:	c7 01       	movw	r24, r14
     364:	b6 01       	movw	r22, r12
     366:	0e 94 00 03 	call	0x600	; 0x600 <__divsf3>
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	48 ec       	ldi	r20, 0xC8	; 200
     370:	52 e4       	ldi	r21, 0x42	; 66
     372:	0e 94 36 04 	call	0x86c	; 0x86c <__mulsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	48 ec       	ldi	r20, 0xC8	; 200
     37c:	52 e4       	ldi	r21, 0x42	; 66
     37e:	0e 94 93 02 	call	0x526	; 0x526 <__subsf3>
     382:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fixsfsi>
     386:	cb 01       	movw	r24, r22
     388:	33 c0       	rjmp	.+102    	; 0x3f0 <normalize_output_joystick+0xc6>
	}
	else if((int)value > center){
		position = ((((255-(float)value)/(255-(float) center))*(-100)))+100;
     38a:	68 2f       	mov	r22, r24
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 a8 03 	call	0x750	; 0x750 <__floatunsisf>
     396:	9b 01       	movw	r18, r22
     398:	ac 01       	movw	r20, r24
     39a:	60 e0       	ldi	r22, 0x00	; 0
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	8f e7       	ldi	r24, 0x7F	; 127
     3a0:	93 e4       	ldi	r25, 0x43	; 67
     3a2:	0e 94 93 02 	call	0x526	; 0x526 <__subsf3>
     3a6:	6b 01       	movw	r12, r22
     3a8:	7c 01       	movw	r14, r24
     3aa:	be 01       	movw	r22, r28
     3ac:	dd 0f       	add	r29, r29
     3ae:	88 0b       	sbc	r24, r24
     3b0:	99 0b       	sbc	r25, r25
     3b2:	0e 94 aa 03 	call	0x754	; 0x754 <__floatsisf>
     3b6:	9b 01       	movw	r18, r22
     3b8:	ac 01       	movw	r20, r24
     3ba:	60 e0       	ldi	r22, 0x00	; 0
     3bc:	70 e0       	ldi	r23, 0x00	; 0
     3be:	8f e7       	ldi	r24, 0x7F	; 127
     3c0:	93 e4       	ldi	r25, 0x43	; 67
     3c2:	0e 94 93 02 	call	0x526	; 0x526 <__subsf3>
     3c6:	9b 01       	movw	r18, r22
     3c8:	ac 01       	movw	r20, r24
     3ca:	c7 01       	movw	r24, r14
     3cc:	b6 01       	movw	r22, r12
     3ce:	0e 94 00 03 	call	0x600	; 0x600 <__divsf3>
     3d2:	20 e0       	ldi	r18, 0x00	; 0
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	48 ec       	ldi	r20, 0xC8	; 200
     3d8:	52 ec       	ldi	r21, 0xC2	; 194
     3da:	0e 94 36 04 	call	0x86c	; 0x86c <__mulsf3>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	48 ec       	ldi	r20, 0xC8	; 200
     3e4:	52 e4       	ldi	r21, 0x42	; 66
     3e6:	0e 94 94 02 	call	0x528	; 0x528 <__addsf3>
     3ea:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fixsfsi>
     3ee:	cb 01       	movw	r24, r22
	}
	
	return position;
}
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	ff 90       	pop	r15
     3f6:	ef 90       	pop	r14
     3f8:	df 90       	pop	r13
     3fa:	cf 90       	pop	r12
     3fc:	08 95       	ret

000003fe <mcp2515_read>:
	break;
	default:
		printf("Not a valid entry\n\r try again");
	break;
	}
	PORTB |= (1<<PB4);
     3fe:	cf 93       	push	r28
     400:	c8 2f       	mov	r28, r24
     402:	c4 98       	cbi	0x18, 4	; 24
     404:	83 e0       	ldi	r24, 0x03	; 3
     406:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     40a:	8c 2f       	mov	r24, r28
     40c:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     410:	0e 94 31 02 	call	0x462	; 0x462 <SPI_MasterReceive>
     414:	c4 9a       	sbi	0x18, 4	; 24
     416:	cf 91       	pop	r28
     418:	08 95       	ret

0000041a <mcp2515_read_status>:
}

uint8_t mcp2515_read_status(void){
	uint8_t result;
	PORTB &= ~(1<<PB4);
     41a:	c4 98       	cbi	0x18, 4	; 24
	SPI_MasterTransmit(MCP_READ_STATUS);
     41c:	80 ea       	ldi	r24, 0xA0	; 160
     41e:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	result = SPI_MasterReceive();
     422:	0e 94 31 02 	call	0x462	; 0x462 <SPI_MasterReceive>
	PORTB |= (1<<PB4);
     426:	c4 9a       	sbi	0x18, 4	; 24
	return result;
}
     428:	08 95       	ret

0000042a <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t data_mask, uint8_t data){
     42a:	1f 93       	push	r17
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	18 2f       	mov	r17, r24
     432:	d6 2f       	mov	r29, r22
     434:	c4 2f       	mov	r28, r20
	PORTB &= ~(1<<PB4);
     436:	c4 98       	cbi	0x18, 4	; 24
	SPI_MasterTransmit(MCP_BITMOD);
     438:	85 e0       	ldi	r24, 0x05	; 5
     43a:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
     43e:	81 2f       	mov	r24, r17
     440:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	SPI_MasterTransmit(data_mask);
     444:	8d 2f       	mov	r24, r29
     446:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	SPI_MasterTransmit(data);
     44a:	8c 2f       	mov	r24, r28
     44c:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	PORTB |= (1<<PB4);
     450:	c4 9a       	sbi	0x18, 4	; 24
}
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	1f 91       	pop	r17
     458:	08 95       	ret

0000045a <SPI_MasterTransmit>:
	PORTB |= (1<<SS);
}

void SPI_MasterTransmit(char cData){
	// Start transmission 
	SPDR = cData;
     45a:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete 
	while(!(SPSR & (1<<SPIF)));
     45c:	77 9b       	sbis	0x0e, 7	; 14
     45e:	fe cf       	rjmp	.-4      	; 0x45c <SPI_MasterTransmit+0x2>
}
     460:	08 95       	ret

00000462 <SPI_MasterReceive>:


char SPI_MasterReceive(void){
	SPI_MasterTransmit('a');
     462:	81 e6       	ldi	r24, 0x61	; 97
     464:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
	return SPDR;
     468:	8f b1       	in	r24, 0x0f	; 15
}  
     46a:	08 95       	ret

0000046c <SRAM_init>:
	//DDRC |= (1 << PC3);
	//PORTC = 0x04;
	volatile char *ext_ram = (char *) 0x1800;
	//printf("\r\n\n\nInitiating SRAM...\r\n");
	
	MCUCR |= (1<<SRE);
     46c:	85 b7       	in	r24, 0x35	; 53
     46e:	80 68       	ori	r24, 0x80	; 128
     470:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<5);
     472:	80 b7       	in	r24, 0x30	; 48
     474:	80 62       	ori	r24, 0x20	; 32
     476:	80 bf       	out	0x30, r24	; 48
     478:	08 95       	ret

0000047a <main>:
#define HORIZONTAL 0
#define VERTICAL 1

int main(void)
{	int rec;
	USART_Init(MYUBRR);
     47a:	8f e1       	ldi	r24, 0x1F	; 31
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0e 94 84 02 	call	0x508	; 0x508 <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
     482:	6f e8       	ldi	r22, 0x8F	; 143
     484:	72 e0       	ldi	r23, 0x02	; 2
     486:	8b e8       	ldi	r24, 0x8B	; 139
     488:	92 e0       	ldi	r25, 0x02	; 2
     48a:	0e 94 cb 04 	call	0x996	; 0x996 <fdevopen>
	
	clock_timer();
     48e:	0e 94 57 00 	call	0xae	; 0xae <clock_timer>
	SRAM_init();
     492:	0e 94 36 02 	call	0x46c	; 0x46c <SRAM_init>
	//can_init();
	int centerH = joystick_init(HORIZONTAL, 10);
     496:	6a e0       	ldi	r22, 0x0A	; 10
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	0e 94 49 01 	call	0x292	; 0x292 <joystick_init>
     4a0:	d8 2f       	mov	r29, r24
     4a2:	d9 2e       	mov	r13, r25
	printf("CENTER: %d\r\n", centerH);
     4a4:	9f 93       	push	r25
     4a6:	8f 93       	push	r24
     4a8:	8b ea       	ldi	r24, 0xAB	; 171
     4aa:	91 e0       	ldi	r25, 0x01	; 1
     4ac:	9f 93       	push	r25
     4ae:	8f 93       	push	r24
     4b0:	0e 94 16 05 	call	0xa2c	; 0xa2c <printf>
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
	//int centerV = joystick_init(VERTICAL, 10);
	int outputH = 0;
	while(1){
		uint8_t valueH = adc_read(HORIZONTAL);
		printf("ADC output: %d\r\n", valueH);
     4bc:	0f 2e       	mov	r0, r31
     4be:	f8 eb       	ldi	r31, 0xB8	; 184
     4c0:	ef 2e       	mov	r14, r31
     4c2:	f1 e0       	ldi	r31, 0x01	; 1
     4c4:	ff 2e       	mov	r15, r31
     4c6:	f0 2d       	mov	r31, r0
		outputH = normalize_output_joystick(valueH, centerH);
		printf("Horizontal output: %d\r\n", outputH);
     4c8:	09 ec       	ldi	r16, 0xC9	; 201
     4ca:	11 e0       	ldi	r17, 0x01	; 1
	int centerH = joystick_init(HORIZONTAL, 10);
	printf("CENTER: %d\r\n", centerH);
	//int centerV = joystick_init(VERTICAL, 10);
	int outputH = 0;
	while(1){
		uint8_t valueH = adc_read(HORIZONTAL);
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	0e 94 66 00 	call	0xcc	; 0xcc <adc_read>
     4d2:	c8 2f       	mov	r28, r24
		printf("ADC output: %d\r\n", valueH);
     4d4:	1f 92       	push	r1
     4d6:	8f 93       	push	r24
     4d8:	ff 92       	push	r15
     4da:	ef 92       	push	r14
     4dc:	0e 94 16 05 	call	0xa2c	; 0xa2c <printf>
		outputH = normalize_output_joystick(valueH, centerH);
     4e0:	6d 2f       	mov	r22, r29
     4e2:	7d 2d       	mov	r23, r13
     4e4:	8c 2f       	mov	r24, r28
     4e6:	0e 94 95 01 	call	0x32a	; 0x32a <normalize_output_joystick>
		printf("Horizontal output: %d\r\n", outputH);
     4ea:	9f 93       	push	r25
     4ec:	8f 93       	push	r24
     4ee:	1f 93       	push	r17
     4f0:	0f 93       	push	r16
     4f2:	0e 94 16 05 	call	0xa2c	; 0xa2c <printf>
     4f6:	8d b7       	in	r24, 0x3d	; 61
     4f8:	9e b7       	in	r25, 0x3e	; 62
     4fa:	08 96       	adiw	r24, 0x08	; 8
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	f8 94       	cli
     500:	9e bf       	out	0x3e, r25	; 62
     502:	0f be       	out	0x3f, r0	; 63
     504:	8d bf       	out	0x3d, r24	; 61
     506:	e2 cf       	rjmp	.-60     	; 0x4cc <main+0x52>

00000508 <USART_Init>:
#include "uart.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR1H = (unsigned char)(ubrr>>8);
     508:	9c bf       	out	0x3c, r25	; 60
	UBRR1L = (unsigned char)ubrr;
     50a:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
     50c:	88 e1       	ldi	r24, 0x18	; 24
     50e:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8data, 2stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(3<<UCSZ10);
     510:	8e e8       	ldi	r24, 0x8E	; 142
     512:	8c bf       	out	0x3c, r24	; 60
     514:	08 95       	ret

00000516 <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR1A & (1<<UDRE1)) );
     516:	15 9b       	sbis	0x02, 5	; 2
     518:	fe cf       	rjmp	.-4      	; 0x516 <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR1 = data;
     51a:	83 b9       	out	0x03, r24	; 3
     51c:	08 95       	ret

0000051e <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR1A & (1<<RXC1)) );
     51e:	17 9b       	sbis	0x02, 7	; 2
     520:	fe cf       	rjmp	.-4      	; 0x51e <USART_Receive>
	/* Get and return received data from buffer */
	return UDR1;
     522:	83 b1       	in	r24, 0x03	; 3
     524:	08 95       	ret

00000526 <__subsf3>:
     526:	50 58       	subi	r21, 0x80	; 128

00000528 <__addsf3>:
     528:	bb 27       	eor	r27, r27
     52a:	aa 27       	eor	r26, r26
     52c:	0e 94 ab 02 	call	0x556	; 0x556 <__addsf3x>
     530:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__fp_round>
     534:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fp_pscA>
     538:	38 f0       	brcs	.+14     	; 0x548 <__addsf3+0x20>
     53a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscB>
     53e:	20 f0       	brcs	.+8      	; 0x548 <__addsf3+0x20>
     540:	39 f4       	brne	.+14     	; 0x550 <__addsf3+0x28>
     542:	9f 3f       	cpi	r25, 0xFF	; 255
     544:	19 f4       	brne	.+6      	; 0x54c <__addsf3+0x24>
     546:	26 f4       	brtc	.+8      	; 0x550 <__addsf3+0x28>
     548:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_nan>
     54c:	0e f4       	brtc	.+2      	; 0x550 <__addsf3+0x28>
     54e:	e0 95       	com	r30
     550:	e7 fb       	bst	r30, 7
     552:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_inf>

00000556 <__addsf3x>:
     556:	e9 2f       	mov	r30, r25
     558:	0e 94 0d 04 	call	0x81a	; 0x81a <__fp_split3>
     55c:	58 f3       	brcs	.-42     	; 0x534 <__addsf3+0xc>
     55e:	ba 17       	cp	r27, r26
     560:	62 07       	cpc	r22, r18
     562:	73 07       	cpc	r23, r19
     564:	84 07       	cpc	r24, r20
     566:	95 07       	cpc	r25, r21
     568:	20 f0       	brcs	.+8      	; 0x572 <__addsf3x+0x1c>
     56a:	79 f4       	brne	.+30     	; 0x58a <__addsf3x+0x34>
     56c:	a6 f5       	brtc	.+104    	; 0x5d6 <__addsf3x+0x80>
     56e:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__fp_zero>
     572:	0e f4       	brtc	.+2      	; 0x576 <__addsf3x+0x20>
     574:	e0 95       	com	r30
     576:	0b 2e       	mov	r0, r27
     578:	ba 2f       	mov	r27, r26
     57a:	a0 2d       	mov	r26, r0
     57c:	0b 01       	movw	r0, r22
     57e:	b9 01       	movw	r22, r18
     580:	90 01       	movw	r18, r0
     582:	0c 01       	movw	r0, r24
     584:	ca 01       	movw	r24, r20
     586:	a0 01       	movw	r20, r0
     588:	11 24       	eor	r1, r1
     58a:	ff 27       	eor	r31, r31
     58c:	59 1b       	sub	r21, r25
     58e:	99 f0       	breq	.+38     	; 0x5b6 <__addsf3x+0x60>
     590:	59 3f       	cpi	r21, 0xF9	; 249
     592:	50 f4       	brcc	.+20     	; 0x5a8 <__addsf3x+0x52>
     594:	50 3e       	cpi	r21, 0xE0	; 224
     596:	68 f1       	brcs	.+90     	; 0x5f2 <__addsf3x+0x9c>
     598:	1a 16       	cp	r1, r26
     59a:	f0 40       	sbci	r31, 0x00	; 0
     59c:	a2 2f       	mov	r26, r18
     59e:	23 2f       	mov	r18, r19
     5a0:	34 2f       	mov	r19, r20
     5a2:	44 27       	eor	r20, r20
     5a4:	58 5f       	subi	r21, 0xF8	; 248
     5a6:	f3 cf       	rjmp	.-26     	; 0x58e <__addsf3x+0x38>
     5a8:	46 95       	lsr	r20
     5aa:	37 95       	ror	r19
     5ac:	27 95       	ror	r18
     5ae:	a7 95       	ror	r26
     5b0:	f0 40       	sbci	r31, 0x00	; 0
     5b2:	53 95       	inc	r21
     5b4:	c9 f7       	brne	.-14     	; 0x5a8 <__addsf3x+0x52>
     5b6:	7e f4       	brtc	.+30     	; 0x5d6 <__addsf3x+0x80>
     5b8:	1f 16       	cp	r1, r31
     5ba:	ba 0b       	sbc	r27, r26
     5bc:	62 0b       	sbc	r22, r18
     5be:	73 0b       	sbc	r23, r19
     5c0:	84 0b       	sbc	r24, r20
     5c2:	ba f0       	brmi	.+46     	; 0x5f2 <__addsf3x+0x9c>
     5c4:	91 50       	subi	r25, 0x01	; 1
     5c6:	a1 f0       	breq	.+40     	; 0x5f0 <__addsf3x+0x9a>
     5c8:	ff 0f       	add	r31, r31
     5ca:	bb 1f       	adc	r27, r27
     5cc:	66 1f       	adc	r22, r22
     5ce:	77 1f       	adc	r23, r23
     5d0:	88 1f       	adc	r24, r24
     5d2:	c2 f7       	brpl	.-16     	; 0x5c4 <__addsf3x+0x6e>
     5d4:	0e c0       	rjmp	.+28     	; 0x5f2 <__addsf3x+0x9c>
     5d6:	ba 0f       	add	r27, r26
     5d8:	62 1f       	adc	r22, r18
     5da:	73 1f       	adc	r23, r19
     5dc:	84 1f       	adc	r24, r20
     5de:	48 f4       	brcc	.+18     	; 0x5f2 <__addsf3x+0x9c>
     5e0:	87 95       	ror	r24
     5e2:	77 95       	ror	r23
     5e4:	67 95       	ror	r22
     5e6:	b7 95       	ror	r27
     5e8:	f7 95       	ror	r31
     5ea:	9e 3f       	cpi	r25, 0xFE	; 254
     5ec:	08 f0       	brcs	.+2      	; 0x5f0 <__addsf3x+0x9a>
     5ee:	b0 cf       	rjmp	.-160    	; 0x550 <__addsf3+0x28>
     5f0:	93 95       	inc	r25
     5f2:	88 0f       	add	r24, r24
     5f4:	08 f0       	brcs	.+2      	; 0x5f8 <__addsf3x+0xa2>
     5f6:	99 27       	eor	r25, r25
     5f8:	ee 0f       	add	r30, r30
     5fa:	97 95       	ror	r25
     5fc:	87 95       	ror	r24
     5fe:	08 95       	ret

00000600 <__divsf3>:
     600:	0e 94 14 03 	call	0x628	; 0x628 <__divsf3x>
     604:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__fp_round>
     608:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscB>
     60c:	58 f0       	brcs	.+22     	; 0x624 <__divsf3+0x24>
     60e:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fp_pscA>
     612:	40 f0       	brcs	.+16     	; 0x624 <__divsf3+0x24>
     614:	29 f4       	brne	.+10     	; 0x620 <__divsf3+0x20>
     616:	5f 3f       	cpi	r21, 0xFF	; 255
     618:	29 f0       	breq	.+10     	; 0x624 <__divsf3+0x24>
     61a:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_inf>
     61e:	51 11       	cpse	r21, r1
     620:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_szero>
     624:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_nan>

00000628 <__divsf3x>:
     628:	0e 94 0d 04 	call	0x81a	; 0x81a <__fp_split3>
     62c:	68 f3       	brcs	.-38     	; 0x608 <__divsf3+0x8>

0000062e <__divsf3_pse>:
     62e:	99 23       	and	r25, r25
     630:	b1 f3       	breq	.-20     	; 0x61e <__divsf3+0x1e>
     632:	55 23       	and	r21, r21
     634:	91 f3       	breq	.-28     	; 0x61a <__divsf3+0x1a>
     636:	95 1b       	sub	r25, r21
     638:	55 0b       	sbc	r21, r21
     63a:	bb 27       	eor	r27, r27
     63c:	aa 27       	eor	r26, r26
     63e:	62 17       	cp	r22, r18
     640:	73 07       	cpc	r23, r19
     642:	84 07       	cpc	r24, r20
     644:	38 f0       	brcs	.+14     	; 0x654 <__divsf3_pse+0x26>
     646:	9f 5f       	subi	r25, 0xFF	; 255
     648:	5f 4f       	sbci	r21, 0xFF	; 255
     64a:	22 0f       	add	r18, r18
     64c:	33 1f       	adc	r19, r19
     64e:	44 1f       	adc	r20, r20
     650:	aa 1f       	adc	r26, r26
     652:	a9 f3       	breq	.-22     	; 0x63e <__divsf3_pse+0x10>
     654:	35 d0       	rcall	.+106    	; 0x6c0 <__divsf3_pse+0x92>
     656:	0e 2e       	mov	r0, r30
     658:	3a f0       	brmi	.+14     	; 0x668 <__divsf3_pse+0x3a>
     65a:	e0 e8       	ldi	r30, 0x80	; 128
     65c:	32 d0       	rcall	.+100    	; 0x6c2 <__divsf3_pse+0x94>
     65e:	91 50       	subi	r25, 0x01	; 1
     660:	50 40       	sbci	r21, 0x00	; 0
     662:	e6 95       	lsr	r30
     664:	00 1c       	adc	r0, r0
     666:	ca f7       	brpl	.-14     	; 0x65a <__divsf3_pse+0x2c>
     668:	2b d0       	rcall	.+86     	; 0x6c0 <__divsf3_pse+0x92>
     66a:	fe 2f       	mov	r31, r30
     66c:	29 d0       	rcall	.+82     	; 0x6c0 <__divsf3_pse+0x92>
     66e:	66 0f       	add	r22, r22
     670:	77 1f       	adc	r23, r23
     672:	88 1f       	adc	r24, r24
     674:	bb 1f       	adc	r27, r27
     676:	26 17       	cp	r18, r22
     678:	37 07       	cpc	r19, r23
     67a:	48 07       	cpc	r20, r24
     67c:	ab 07       	cpc	r26, r27
     67e:	b0 e8       	ldi	r27, 0x80	; 128
     680:	09 f0       	breq	.+2      	; 0x684 <__divsf3_pse+0x56>
     682:	bb 0b       	sbc	r27, r27
     684:	80 2d       	mov	r24, r0
     686:	bf 01       	movw	r22, r30
     688:	ff 27       	eor	r31, r31
     68a:	93 58       	subi	r25, 0x83	; 131
     68c:	5f 4f       	sbci	r21, 0xFF	; 255
     68e:	3a f0       	brmi	.+14     	; 0x69e <__divsf3_pse+0x70>
     690:	9e 3f       	cpi	r25, 0xFE	; 254
     692:	51 05       	cpc	r21, r1
     694:	78 f0       	brcs	.+30     	; 0x6b4 <__divsf3_pse+0x86>
     696:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_inf>
     69a:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_szero>
     69e:	5f 3f       	cpi	r21, 0xFF	; 255
     6a0:	e4 f3       	brlt	.-8      	; 0x69a <__divsf3_pse+0x6c>
     6a2:	98 3e       	cpi	r25, 0xE8	; 232
     6a4:	d4 f3       	brlt	.-12     	; 0x69a <__divsf3_pse+0x6c>
     6a6:	86 95       	lsr	r24
     6a8:	77 95       	ror	r23
     6aa:	67 95       	ror	r22
     6ac:	b7 95       	ror	r27
     6ae:	f7 95       	ror	r31
     6b0:	9f 5f       	subi	r25, 0xFF	; 255
     6b2:	c9 f7       	brne	.-14     	; 0x6a6 <__divsf3_pse+0x78>
     6b4:	88 0f       	add	r24, r24
     6b6:	91 1d       	adc	r25, r1
     6b8:	96 95       	lsr	r25
     6ba:	87 95       	ror	r24
     6bc:	97 f9       	bld	r25, 7
     6be:	08 95       	ret
     6c0:	e1 e0       	ldi	r30, 0x01	; 1
     6c2:	66 0f       	add	r22, r22
     6c4:	77 1f       	adc	r23, r23
     6c6:	88 1f       	adc	r24, r24
     6c8:	bb 1f       	adc	r27, r27
     6ca:	62 17       	cp	r22, r18
     6cc:	73 07       	cpc	r23, r19
     6ce:	84 07       	cpc	r24, r20
     6d0:	ba 07       	cpc	r27, r26
     6d2:	20 f0       	brcs	.+8      	; 0x6dc <__divsf3_pse+0xae>
     6d4:	62 1b       	sub	r22, r18
     6d6:	73 0b       	sbc	r23, r19
     6d8:	84 0b       	sbc	r24, r20
     6da:	ba 0b       	sbc	r27, r26
     6dc:	ee 1f       	adc	r30, r30
     6de:	88 f7       	brcc	.-30     	; 0x6c2 <__divsf3_pse+0x94>
     6e0:	e0 95       	com	r30
     6e2:	08 95       	ret

000006e4 <__fixsfsi>:
     6e4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fixunssfsi>
     6e8:	68 94       	set
     6ea:	b1 11       	cpse	r27, r1
     6ec:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_szero>
     6f0:	08 95       	ret

000006f2 <__fixunssfsi>:
     6f2:	0e 94 15 04 	call	0x82a	; 0x82a <__fp_splitA>
     6f6:	88 f0       	brcs	.+34     	; 0x71a <__fixunssfsi+0x28>
     6f8:	9f 57       	subi	r25, 0x7F	; 127
     6fa:	98 f0       	brcs	.+38     	; 0x722 <__fixunssfsi+0x30>
     6fc:	b9 2f       	mov	r27, r25
     6fe:	99 27       	eor	r25, r25
     700:	b7 51       	subi	r27, 0x17	; 23
     702:	b0 f0       	brcs	.+44     	; 0x730 <__fixunssfsi+0x3e>
     704:	e1 f0       	breq	.+56     	; 0x73e <__fixunssfsi+0x4c>
     706:	66 0f       	add	r22, r22
     708:	77 1f       	adc	r23, r23
     70a:	88 1f       	adc	r24, r24
     70c:	99 1f       	adc	r25, r25
     70e:	1a f0       	brmi	.+6      	; 0x716 <__fixunssfsi+0x24>
     710:	ba 95       	dec	r27
     712:	c9 f7       	brne	.-14     	; 0x706 <__fixunssfsi+0x14>
     714:	14 c0       	rjmp	.+40     	; 0x73e <__fixunssfsi+0x4c>
     716:	b1 30       	cpi	r27, 0x01	; 1
     718:	91 f0       	breq	.+36     	; 0x73e <__fixunssfsi+0x4c>
     71a:	0e 94 2f 04 	call	0x85e	; 0x85e <__fp_zero>
     71e:	b1 e0       	ldi	r27, 0x01	; 1
     720:	08 95       	ret
     722:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__fp_zero>
     726:	67 2f       	mov	r22, r23
     728:	78 2f       	mov	r23, r24
     72a:	88 27       	eor	r24, r24
     72c:	b8 5f       	subi	r27, 0xF8	; 248
     72e:	39 f0       	breq	.+14     	; 0x73e <__fixunssfsi+0x4c>
     730:	b9 3f       	cpi	r27, 0xF9	; 249
     732:	cc f3       	brlt	.-14     	; 0x726 <__fixunssfsi+0x34>
     734:	86 95       	lsr	r24
     736:	77 95       	ror	r23
     738:	67 95       	ror	r22
     73a:	b3 95       	inc	r27
     73c:	d9 f7       	brne	.-10     	; 0x734 <__fixunssfsi+0x42>
     73e:	3e f4       	brtc	.+14     	; 0x74e <__fixunssfsi+0x5c>
     740:	90 95       	com	r25
     742:	80 95       	com	r24
     744:	70 95       	com	r23
     746:	61 95       	neg	r22
     748:	7f 4f       	sbci	r23, 0xFF	; 255
     74a:	8f 4f       	sbci	r24, 0xFF	; 255
     74c:	9f 4f       	sbci	r25, 0xFF	; 255
     74e:	08 95       	ret

00000750 <__floatunsisf>:
     750:	e8 94       	clt
     752:	09 c0       	rjmp	.+18     	; 0x766 <__floatsisf+0x12>

00000754 <__floatsisf>:
     754:	97 fb       	bst	r25, 7
     756:	3e f4       	brtc	.+14     	; 0x766 <__floatsisf+0x12>
     758:	90 95       	com	r25
     75a:	80 95       	com	r24
     75c:	70 95       	com	r23
     75e:	61 95       	neg	r22
     760:	7f 4f       	sbci	r23, 0xFF	; 255
     762:	8f 4f       	sbci	r24, 0xFF	; 255
     764:	9f 4f       	sbci	r25, 0xFF	; 255
     766:	99 23       	and	r25, r25
     768:	a9 f0       	breq	.+42     	; 0x794 <__floatsisf+0x40>
     76a:	f9 2f       	mov	r31, r25
     76c:	96 e9       	ldi	r25, 0x96	; 150
     76e:	bb 27       	eor	r27, r27
     770:	93 95       	inc	r25
     772:	f6 95       	lsr	r31
     774:	87 95       	ror	r24
     776:	77 95       	ror	r23
     778:	67 95       	ror	r22
     77a:	b7 95       	ror	r27
     77c:	f1 11       	cpse	r31, r1
     77e:	f8 cf       	rjmp	.-16     	; 0x770 <__floatsisf+0x1c>
     780:	fa f4       	brpl	.+62     	; 0x7c0 <__floatsisf+0x6c>
     782:	bb 0f       	add	r27, r27
     784:	11 f4       	brne	.+4      	; 0x78a <__floatsisf+0x36>
     786:	60 ff       	sbrs	r22, 0
     788:	1b c0       	rjmp	.+54     	; 0x7c0 <__floatsisf+0x6c>
     78a:	6f 5f       	subi	r22, 0xFF	; 255
     78c:	7f 4f       	sbci	r23, 0xFF	; 255
     78e:	8f 4f       	sbci	r24, 0xFF	; 255
     790:	9f 4f       	sbci	r25, 0xFF	; 255
     792:	16 c0       	rjmp	.+44     	; 0x7c0 <__floatsisf+0x6c>
     794:	88 23       	and	r24, r24
     796:	11 f0       	breq	.+4      	; 0x79c <__floatsisf+0x48>
     798:	96 e9       	ldi	r25, 0x96	; 150
     79a:	11 c0       	rjmp	.+34     	; 0x7be <__floatsisf+0x6a>
     79c:	77 23       	and	r23, r23
     79e:	21 f0       	breq	.+8      	; 0x7a8 <__floatsisf+0x54>
     7a0:	9e e8       	ldi	r25, 0x8E	; 142
     7a2:	87 2f       	mov	r24, r23
     7a4:	76 2f       	mov	r23, r22
     7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <__floatsisf+0x5e>
     7a8:	66 23       	and	r22, r22
     7aa:	71 f0       	breq	.+28     	; 0x7c8 <__floatsisf+0x74>
     7ac:	96 e8       	ldi	r25, 0x86	; 134
     7ae:	86 2f       	mov	r24, r22
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	2a f0       	brmi	.+10     	; 0x7c0 <__floatsisf+0x6c>
     7b6:	9a 95       	dec	r25
     7b8:	66 0f       	add	r22, r22
     7ba:	77 1f       	adc	r23, r23
     7bc:	88 1f       	adc	r24, r24
     7be:	da f7       	brpl	.-10     	; 0x7b6 <__floatsisf+0x62>
     7c0:	88 0f       	add	r24, r24
     7c2:	96 95       	lsr	r25
     7c4:	87 95       	ror	r24
     7c6:	97 f9       	bld	r25, 7
     7c8:	08 95       	ret

000007ca <__fp_inf>:
     7ca:	97 f9       	bld	r25, 7
     7cc:	9f 67       	ori	r25, 0x7F	; 127
     7ce:	80 e8       	ldi	r24, 0x80	; 128
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	08 95       	ret

000007d6 <__fp_nan>:
     7d6:	9f ef       	ldi	r25, 0xFF	; 255
     7d8:	80 ec       	ldi	r24, 0xC0	; 192
     7da:	08 95       	ret

000007dc <__fp_pscA>:
     7dc:	00 24       	eor	r0, r0
     7de:	0a 94       	dec	r0
     7e0:	16 16       	cp	r1, r22
     7e2:	17 06       	cpc	r1, r23
     7e4:	18 06       	cpc	r1, r24
     7e6:	09 06       	cpc	r0, r25
     7e8:	08 95       	ret

000007ea <__fp_pscB>:
     7ea:	00 24       	eor	r0, r0
     7ec:	0a 94       	dec	r0
     7ee:	12 16       	cp	r1, r18
     7f0:	13 06       	cpc	r1, r19
     7f2:	14 06       	cpc	r1, r20
     7f4:	05 06       	cpc	r0, r21
     7f6:	08 95       	ret

000007f8 <__fp_round>:
     7f8:	09 2e       	mov	r0, r25
     7fa:	03 94       	inc	r0
     7fc:	00 0c       	add	r0, r0
     7fe:	11 f4       	brne	.+4      	; 0x804 <__fp_round+0xc>
     800:	88 23       	and	r24, r24
     802:	52 f0       	brmi	.+20     	; 0x818 <__fp_round+0x20>
     804:	bb 0f       	add	r27, r27
     806:	40 f4       	brcc	.+16     	; 0x818 <__fp_round+0x20>
     808:	bf 2b       	or	r27, r31
     80a:	11 f4       	brne	.+4      	; 0x810 <__fp_round+0x18>
     80c:	60 ff       	sbrs	r22, 0
     80e:	04 c0       	rjmp	.+8      	; 0x818 <__fp_round+0x20>
     810:	6f 5f       	subi	r22, 0xFF	; 255
     812:	7f 4f       	sbci	r23, 0xFF	; 255
     814:	8f 4f       	sbci	r24, 0xFF	; 255
     816:	9f 4f       	sbci	r25, 0xFF	; 255
     818:	08 95       	ret

0000081a <__fp_split3>:
     81a:	57 fd       	sbrc	r21, 7
     81c:	90 58       	subi	r25, 0x80	; 128
     81e:	44 0f       	add	r20, r20
     820:	55 1f       	adc	r21, r21
     822:	59 f0       	breq	.+22     	; 0x83a <__fp_splitA+0x10>
     824:	5f 3f       	cpi	r21, 0xFF	; 255
     826:	71 f0       	breq	.+28     	; 0x844 <__fp_splitA+0x1a>
     828:	47 95       	ror	r20

0000082a <__fp_splitA>:
     82a:	88 0f       	add	r24, r24
     82c:	97 fb       	bst	r25, 7
     82e:	99 1f       	adc	r25, r25
     830:	61 f0       	breq	.+24     	; 0x84a <__fp_splitA+0x20>
     832:	9f 3f       	cpi	r25, 0xFF	; 255
     834:	79 f0       	breq	.+30     	; 0x854 <__fp_splitA+0x2a>
     836:	87 95       	ror	r24
     838:	08 95       	ret
     83a:	12 16       	cp	r1, r18
     83c:	13 06       	cpc	r1, r19
     83e:	14 06       	cpc	r1, r20
     840:	55 1f       	adc	r21, r21
     842:	f2 cf       	rjmp	.-28     	; 0x828 <__fp_split3+0xe>
     844:	46 95       	lsr	r20
     846:	f1 df       	rcall	.-30     	; 0x82a <__fp_splitA>
     848:	08 c0       	rjmp	.+16     	; 0x85a <__fp_splitA+0x30>
     84a:	16 16       	cp	r1, r22
     84c:	17 06       	cpc	r1, r23
     84e:	18 06       	cpc	r1, r24
     850:	99 1f       	adc	r25, r25
     852:	f1 cf       	rjmp	.-30     	; 0x836 <__fp_splitA+0xc>
     854:	86 95       	lsr	r24
     856:	71 05       	cpc	r23, r1
     858:	61 05       	cpc	r22, r1
     85a:	08 94       	sec
     85c:	08 95       	ret

0000085e <__fp_zero>:
     85e:	e8 94       	clt

00000860 <__fp_szero>:
     860:	bb 27       	eor	r27, r27
     862:	66 27       	eor	r22, r22
     864:	77 27       	eor	r23, r23
     866:	cb 01       	movw	r24, r22
     868:	97 f9       	bld	r25, 7
     86a:	08 95       	ret

0000086c <__mulsf3>:
     86c:	0e 94 49 04 	call	0x892	; 0x892 <__mulsf3x>
     870:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__fp_round>
     874:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fp_pscA>
     878:	38 f0       	brcs	.+14     	; 0x888 <__mulsf3+0x1c>
     87a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscB>
     87e:	20 f0       	brcs	.+8      	; 0x888 <__mulsf3+0x1c>
     880:	95 23       	and	r25, r21
     882:	11 f0       	breq	.+4      	; 0x888 <__mulsf3+0x1c>
     884:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_inf>
     888:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_nan>
     88c:	11 24       	eor	r1, r1
     88e:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_szero>

00000892 <__mulsf3x>:
     892:	0e 94 0d 04 	call	0x81a	; 0x81a <__fp_split3>
     896:	70 f3       	brcs	.-36     	; 0x874 <__mulsf3+0x8>

00000898 <__mulsf3_pse>:
     898:	95 9f       	mul	r25, r21
     89a:	c1 f3       	breq	.-16     	; 0x88c <__mulsf3+0x20>
     89c:	95 0f       	add	r25, r21
     89e:	50 e0       	ldi	r21, 0x00	; 0
     8a0:	55 1f       	adc	r21, r21
     8a2:	62 9f       	mul	r22, r18
     8a4:	f0 01       	movw	r30, r0
     8a6:	72 9f       	mul	r23, r18
     8a8:	bb 27       	eor	r27, r27
     8aa:	f0 0d       	add	r31, r0
     8ac:	b1 1d       	adc	r27, r1
     8ae:	63 9f       	mul	r22, r19
     8b0:	aa 27       	eor	r26, r26
     8b2:	f0 0d       	add	r31, r0
     8b4:	b1 1d       	adc	r27, r1
     8b6:	aa 1f       	adc	r26, r26
     8b8:	64 9f       	mul	r22, r20
     8ba:	66 27       	eor	r22, r22
     8bc:	b0 0d       	add	r27, r0
     8be:	a1 1d       	adc	r26, r1
     8c0:	66 1f       	adc	r22, r22
     8c2:	82 9f       	mul	r24, r18
     8c4:	22 27       	eor	r18, r18
     8c6:	b0 0d       	add	r27, r0
     8c8:	a1 1d       	adc	r26, r1
     8ca:	62 1f       	adc	r22, r18
     8cc:	73 9f       	mul	r23, r19
     8ce:	b0 0d       	add	r27, r0
     8d0:	a1 1d       	adc	r26, r1
     8d2:	62 1f       	adc	r22, r18
     8d4:	83 9f       	mul	r24, r19
     8d6:	a0 0d       	add	r26, r0
     8d8:	61 1d       	adc	r22, r1
     8da:	22 1f       	adc	r18, r18
     8dc:	74 9f       	mul	r23, r20
     8de:	33 27       	eor	r19, r19
     8e0:	a0 0d       	add	r26, r0
     8e2:	61 1d       	adc	r22, r1
     8e4:	23 1f       	adc	r18, r19
     8e6:	84 9f       	mul	r24, r20
     8e8:	60 0d       	add	r22, r0
     8ea:	21 1d       	adc	r18, r1
     8ec:	82 2f       	mov	r24, r18
     8ee:	76 2f       	mov	r23, r22
     8f0:	6a 2f       	mov	r22, r26
     8f2:	11 24       	eor	r1, r1
     8f4:	9f 57       	subi	r25, 0x7F	; 127
     8f6:	50 40       	sbci	r21, 0x00	; 0
     8f8:	9a f0       	brmi	.+38     	; 0x920 <__mulsf3_pse+0x88>
     8fa:	f1 f0       	breq	.+60     	; 0x938 <__mulsf3_pse+0xa0>
     8fc:	88 23       	and	r24, r24
     8fe:	4a f0       	brmi	.+18     	; 0x912 <__mulsf3_pse+0x7a>
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	bb 1f       	adc	r27, r27
     906:	66 1f       	adc	r22, r22
     908:	77 1f       	adc	r23, r23
     90a:	88 1f       	adc	r24, r24
     90c:	91 50       	subi	r25, 0x01	; 1
     90e:	50 40       	sbci	r21, 0x00	; 0
     910:	a9 f7       	brne	.-22     	; 0x8fc <__mulsf3_pse+0x64>
     912:	9e 3f       	cpi	r25, 0xFE	; 254
     914:	51 05       	cpc	r21, r1
     916:	80 f0       	brcs	.+32     	; 0x938 <__mulsf3_pse+0xa0>
     918:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_inf>
     91c:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_szero>
     920:	5f 3f       	cpi	r21, 0xFF	; 255
     922:	e4 f3       	brlt	.-8      	; 0x91c <__mulsf3_pse+0x84>
     924:	98 3e       	cpi	r25, 0xE8	; 232
     926:	d4 f3       	brlt	.-12     	; 0x91c <__mulsf3_pse+0x84>
     928:	86 95       	lsr	r24
     92a:	77 95       	ror	r23
     92c:	67 95       	ror	r22
     92e:	b7 95       	ror	r27
     930:	f7 95       	ror	r31
     932:	e7 95       	ror	r30
     934:	9f 5f       	subi	r25, 0xFF	; 255
     936:	c1 f7       	brne	.-16     	; 0x928 <__mulsf3_pse+0x90>
     938:	fe 2b       	or	r31, r30
     93a:	88 0f       	add	r24, r24
     93c:	91 1d       	adc	r25, r1
     93e:	96 95       	lsr	r25
     940:	87 95       	ror	r24
     942:	97 f9       	bld	r25, 7
     944:	08 95       	ret

00000946 <__divmodhi4>:
     946:	97 fb       	bst	r25, 7
     948:	07 2e       	mov	r0, r23
     94a:	16 f4       	brtc	.+4      	; 0x950 <__divmodhi4+0xa>
     94c:	00 94       	com	r0
     94e:	07 d0       	rcall	.+14     	; 0x95e <__divmodhi4_neg1>
     950:	77 fd       	sbrc	r23, 7
     952:	09 d0       	rcall	.+18     	; 0x966 <__divmodhi4_neg2>
     954:	0e 94 b7 04 	call	0x96e	; 0x96e <__udivmodhi4>
     958:	07 fc       	sbrc	r0, 7
     95a:	05 d0       	rcall	.+10     	; 0x966 <__divmodhi4_neg2>
     95c:	3e f4       	brtc	.+14     	; 0x96c <__divmodhi4_exit>

0000095e <__divmodhi4_neg1>:
     95e:	90 95       	com	r25
     960:	81 95       	neg	r24
     962:	9f 4f       	sbci	r25, 0xFF	; 255
     964:	08 95       	ret

00000966 <__divmodhi4_neg2>:
     966:	70 95       	com	r23
     968:	61 95       	neg	r22
     96a:	7f 4f       	sbci	r23, 0xFF	; 255

0000096c <__divmodhi4_exit>:
     96c:	08 95       	ret

0000096e <__udivmodhi4>:
     96e:	aa 1b       	sub	r26, r26
     970:	bb 1b       	sub	r27, r27
     972:	51 e1       	ldi	r21, 0x11	; 17
     974:	07 c0       	rjmp	.+14     	; 0x984 <__udivmodhi4_ep>

00000976 <__udivmodhi4_loop>:
     976:	aa 1f       	adc	r26, r26
     978:	bb 1f       	adc	r27, r27
     97a:	a6 17       	cp	r26, r22
     97c:	b7 07       	cpc	r27, r23
     97e:	10 f0       	brcs	.+4      	; 0x984 <__udivmodhi4_ep>
     980:	a6 1b       	sub	r26, r22
     982:	b7 0b       	sbc	r27, r23

00000984 <__udivmodhi4_ep>:
     984:	88 1f       	adc	r24, r24
     986:	99 1f       	adc	r25, r25
     988:	5a 95       	dec	r21
     98a:	a9 f7       	brne	.-22     	; 0x976 <__udivmodhi4_loop>
     98c:	80 95       	com	r24
     98e:	90 95       	com	r25
     990:	bc 01       	movw	r22, r24
     992:	cd 01       	movw	r24, r26
     994:	08 95       	ret

00000996 <fdevopen>:
     996:	0f 93       	push	r16
     998:	1f 93       	push	r17
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	00 97       	sbiw	r24, 0x00	; 0
     9a0:	31 f4       	brne	.+12     	; 0x9ae <fdevopen+0x18>
     9a2:	61 15       	cp	r22, r1
     9a4:	71 05       	cpc	r23, r1
     9a6:	19 f4       	brne	.+6      	; 0x9ae <fdevopen+0x18>
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	3a c0       	rjmp	.+116    	; 0xa22 <fdevopen+0x8c>
     9ae:	8b 01       	movw	r16, r22
     9b0:	ec 01       	movw	r28, r24
     9b2:	6e e0       	ldi	r22, 0x0E	; 14
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	81 e0       	ldi	r24, 0x01	; 1
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 0d 07 	call	0xe1a	; 0xe1a <calloc>
     9be:	fc 01       	movw	r30, r24
     9c0:	89 2b       	or	r24, r25
     9c2:	91 f3       	breq	.-28     	; 0x9a8 <fdevopen+0x12>
     9c4:	80 e8       	ldi	r24, 0x80	; 128
     9c6:	83 83       	std	Z+3, r24	; 0x03
     9c8:	01 15       	cp	r16, r1
     9ca:	11 05       	cpc	r17, r1
     9cc:	71 f0       	breq	.+28     	; 0x9ea <fdevopen+0x54>
     9ce:	13 87       	std	Z+11, r17	; 0x0b
     9d0:	02 87       	std	Z+10, r16	; 0x0a
     9d2:	81 e8       	ldi	r24, 0x81	; 129
     9d4:	83 83       	std	Z+3, r24	; 0x03
     9d6:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     9da:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     9de:	89 2b       	or	r24, r25
     9e0:	21 f4       	brne	.+8      	; 0x9ea <fdevopen+0x54>
     9e2:	f0 93 e3 01 	sts	0x01E3, r31	; 0x8001e3 <__data_end+0x1>
     9e6:	e0 93 e2 01 	sts	0x01E2, r30	; 0x8001e2 <__data_end>
     9ea:	20 97       	sbiw	r28, 0x00	; 0
     9ec:	c9 f0       	breq	.+50     	; 0xa20 <fdevopen+0x8a>
     9ee:	d1 87       	std	Z+9, r29	; 0x09
     9f0:	c0 87       	std	Z+8, r28	; 0x08
     9f2:	83 81       	ldd	r24, Z+3	; 0x03
     9f4:	82 60       	ori	r24, 0x02	; 2
     9f6:	83 83       	std	Z+3, r24	; 0x03
     9f8:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end+0x2>
     9fc:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x3>
     a00:	89 2b       	or	r24, r25
     a02:	71 f4       	brne	.+28     	; 0xa20 <fdevopen+0x8a>
     a04:	f0 93 e5 01 	sts	0x01E5, r31	; 0x8001e5 <__data_end+0x3>
     a08:	e0 93 e4 01 	sts	0x01E4, r30	; 0x8001e4 <__data_end+0x2>
     a0c:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <__data_end+0x4>
     a10:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <__data_end+0x5>
     a14:	89 2b       	or	r24, r25
     a16:	21 f4       	brne	.+8      	; 0xa20 <fdevopen+0x8a>
     a18:	f0 93 e7 01 	sts	0x01E7, r31	; 0x8001e7 <__data_end+0x5>
     a1c:	e0 93 e6 01 	sts	0x01E6, r30	; 0x8001e6 <__data_end+0x4>
     a20:	cf 01       	movw	r24, r30
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	08 95       	ret

00000a2c <printf>:
     a2c:	a0 e0       	ldi	r26, 0x00	; 0
     a2e:	b0 e0       	ldi	r27, 0x00	; 0
     a30:	ec e1       	ldi	r30, 0x1C	; 28
     a32:	f5 e0       	ldi	r31, 0x05	; 5
     a34:	0c 94 11 09 	jmp	0x1222	; 0x1222 <__prologue_saves__+0x20>
     a38:	ae 01       	movw	r20, r28
     a3a:	4b 5f       	subi	r20, 0xFB	; 251
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	fa 01       	movw	r30, r20
     a40:	61 91       	ld	r22, Z+
     a42:	71 91       	ld	r23, Z+
     a44:	af 01       	movw	r20, r30
     a46:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end+0x2>
     a4a:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x3>
     a4e:	0e 94 2c 05 	call	0xa58	; 0xa58 <vfprintf>
     a52:	e2 e0       	ldi	r30, 0x02	; 2
     a54:	0c 94 2d 09 	jmp	0x125a	; 0x125a <__epilogue_restores__+0x20>

00000a58 <vfprintf>:
     a58:	ab e0       	ldi	r26, 0x0B	; 11
     a5a:	b0 e0       	ldi	r27, 0x00	; 0
     a5c:	e2 e3       	ldi	r30, 0x32	; 50
     a5e:	f5 e0       	ldi	r31, 0x05	; 5
     a60:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__prologue_saves__>
     a64:	6c 01       	movw	r12, r24
     a66:	7b 01       	movw	r14, r22
     a68:	8a 01       	movw	r16, r20
     a6a:	fc 01       	movw	r30, r24
     a6c:	17 82       	std	Z+7, r1	; 0x07
     a6e:	16 82       	std	Z+6, r1	; 0x06
     a70:	83 81       	ldd	r24, Z+3	; 0x03
     a72:	81 ff       	sbrs	r24, 1
     a74:	cc c1       	rjmp	.+920    	; 0xe0e <vfprintf+0x3b6>
     a76:	ce 01       	movw	r24, r28
     a78:	01 96       	adiw	r24, 0x01	; 1
     a7a:	3c 01       	movw	r6, r24
     a7c:	f6 01       	movw	r30, r12
     a7e:	93 81       	ldd	r25, Z+3	; 0x03
     a80:	f7 01       	movw	r30, r14
     a82:	93 fd       	sbrc	r25, 3
     a84:	85 91       	lpm	r24, Z+
     a86:	93 ff       	sbrs	r25, 3
     a88:	81 91       	ld	r24, Z+
     a8a:	7f 01       	movw	r14, r30
     a8c:	88 23       	and	r24, r24
     a8e:	09 f4       	brne	.+2      	; 0xa92 <vfprintf+0x3a>
     a90:	ba c1       	rjmp	.+884    	; 0xe06 <vfprintf+0x3ae>
     a92:	85 32       	cpi	r24, 0x25	; 37
     a94:	39 f4       	brne	.+14     	; 0xaa4 <vfprintf+0x4c>
     a96:	93 fd       	sbrc	r25, 3
     a98:	85 91       	lpm	r24, Z+
     a9a:	93 ff       	sbrs	r25, 3
     a9c:	81 91       	ld	r24, Z+
     a9e:	7f 01       	movw	r14, r30
     aa0:	85 32       	cpi	r24, 0x25	; 37
     aa2:	29 f4       	brne	.+10     	; 0xaae <vfprintf+0x56>
     aa4:	b6 01       	movw	r22, r12
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     aac:	e7 cf       	rjmp	.-50     	; 0xa7c <vfprintf+0x24>
     aae:	91 2c       	mov	r9, r1
     ab0:	21 2c       	mov	r2, r1
     ab2:	31 2c       	mov	r3, r1
     ab4:	ff e1       	ldi	r31, 0x1F	; 31
     ab6:	f3 15       	cp	r31, r3
     ab8:	d8 f0       	brcs	.+54     	; 0xaf0 <vfprintf+0x98>
     aba:	8b 32       	cpi	r24, 0x2B	; 43
     abc:	79 f0       	breq	.+30     	; 0xadc <vfprintf+0x84>
     abe:	38 f4       	brcc	.+14     	; 0xace <vfprintf+0x76>
     ac0:	80 32       	cpi	r24, 0x20	; 32
     ac2:	79 f0       	breq	.+30     	; 0xae2 <vfprintf+0x8a>
     ac4:	83 32       	cpi	r24, 0x23	; 35
     ac6:	a1 f4       	brne	.+40     	; 0xaf0 <vfprintf+0x98>
     ac8:	23 2d       	mov	r18, r3
     aca:	20 61       	ori	r18, 0x10	; 16
     acc:	1d c0       	rjmp	.+58     	; 0xb08 <vfprintf+0xb0>
     ace:	8d 32       	cpi	r24, 0x2D	; 45
     ad0:	61 f0       	breq	.+24     	; 0xaea <vfprintf+0x92>
     ad2:	80 33       	cpi	r24, 0x30	; 48
     ad4:	69 f4       	brne	.+26     	; 0xaf0 <vfprintf+0x98>
     ad6:	23 2d       	mov	r18, r3
     ad8:	21 60       	ori	r18, 0x01	; 1
     ada:	16 c0       	rjmp	.+44     	; 0xb08 <vfprintf+0xb0>
     adc:	83 2d       	mov	r24, r3
     ade:	82 60       	ori	r24, 0x02	; 2
     ae0:	38 2e       	mov	r3, r24
     ae2:	e3 2d       	mov	r30, r3
     ae4:	e4 60       	ori	r30, 0x04	; 4
     ae6:	3e 2e       	mov	r3, r30
     ae8:	2a c0       	rjmp	.+84     	; 0xb3e <vfprintf+0xe6>
     aea:	f3 2d       	mov	r31, r3
     aec:	f8 60       	ori	r31, 0x08	; 8
     aee:	1d c0       	rjmp	.+58     	; 0xb2a <vfprintf+0xd2>
     af0:	37 fc       	sbrc	r3, 7
     af2:	2d c0       	rjmp	.+90     	; 0xb4e <vfprintf+0xf6>
     af4:	20 ed       	ldi	r18, 0xD0	; 208
     af6:	28 0f       	add	r18, r24
     af8:	2a 30       	cpi	r18, 0x0A	; 10
     afa:	40 f0       	brcs	.+16     	; 0xb0c <vfprintf+0xb4>
     afc:	8e 32       	cpi	r24, 0x2E	; 46
     afe:	b9 f4       	brne	.+46     	; 0xb2e <vfprintf+0xd6>
     b00:	36 fc       	sbrc	r3, 6
     b02:	81 c1       	rjmp	.+770    	; 0xe06 <vfprintf+0x3ae>
     b04:	23 2d       	mov	r18, r3
     b06:	20 64       	ori	r18, 0x40	; 64
     b08:	32 2e       	mov	r3, r18
     b0a:	19 c0       	rjmp	.+50     	; 0xb3e <vfprintf+0xe6>
     b0c:	36 fe       	sbrs	r3, 6
     b0e:	06 c0       	rjmp	.+12     	; 0xb1c <vfprintf+0xc4>
     b10:	8a e0       	ldi	r24, 0x0A	; 10
     b12:	98 9e       	mul	r9, r24
     b14:	20 0d       	add	r18, r0
     b16:	11 24       	eor	r1, r1
     b18:	92 2e       	mov	r9, r18
     b1a:	11 c0       	rjmp	.+34     	; 0xb3e <vfprintf+0xe6>
     b1c:	ea e0       	ldi	r30, 0x0A	; 10
     b1e:	2e 9e       	mul	r2, r30
     b20:	20 0d       	add	r18, r0
     b22:	11 24       	eor	r1, r1
     b24:	22 2e       	mov	r2, r18
     b26:	f3 2d       	mov	r31, r3
     b28:	f0 62       	ori	r31, 0x20	; 32
     b2a:	3f 2e       	mov	r3, r31
     b2c:	08 c0       	rjmp	.+16     	; 0xb3e <vfprintf+0xe6>
     b2e:	8c 36       	cpi	r24, 0x6C	; 108
     b30:	21 f4       	brne	.+8      	; 0xb3a <vfprintf+0xe2>
     b32:	83 2d       	mov	r24, r3
     b34:	80 68       	ori	r24, 0x80	; 128
     b36:	38 2e       	mov	r3, r24
     b38:	02 c0       	rjmp	.+4      	; 0xb3e <vfprintf+0xe6>
     b3a:	88 36       	cpi	r24, 0x68	; 104
     b3c:	41 f4       	brne	.+16     	; 0xb4e <vfprintf+0xf6>
     b3e:	f7 01       	movw	r30, r14
     b40:	93 fd       	sbrc	r25, 3
     b42:	85 91       	lpm	r24, Z+
     b44:	93 ff       	sbrs	r25, 3
     b46:	81 91       	ld	r24, Z+
     b48:	7f 01       	movw	r14, r30
     b4a:	81 11       	cpse	r24, r1
     b4c:	b3 cf       	rjmp	.-154    	; 0xab4 <vfprintf+0x5c>
     b4e:	98 2f       	mov	r25, r24
     b50:	9f 7d       	andi	r25, 0xDF	; 223
     b52:	95 54       	subi	r25, 0x45	; 69
     b54:	93 30       	cpi	r25, 0x03	; 3
     b56:	28 f4       	brcc	.+10     	; 0xb62 <vfprintf+0x10a>
     b58:	0c 5f       	subi	r16, 0xFC	; 252
     b5a:	1f 4f       	sbci	r17, 0xFF	; 255
     b5c:	9f e3       	ldi	r25, 0x3F	; 63
     b5e:	99 83       	std	Y+1, r25	; 0x01
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <vfprintf+0x124>
     b62:	83 36       	cpi	r24, 0x63	; 99
     b64:	31 f0       	breq	.+12     	; 0xb72 <vfprintf+0x11a>
     b66:	83 37       	cpi	r24, 0x73	; 115
     b68:	71 f0       	breq	.+28     	; 0xb86 <vfprintf+0x12e>
     b6a:	83 35       	cpi	r24, 0x53	; 83
     b6c:	09 f0       	breq	.+2      	; 0xb70 <vfprintf+0x118>
     b6e:	59 c0       	rjmp	.+178    	; 0xc22 <vfprintf+0x1ca>
     b70:	21 c0       	rjmp	.+66     	; 0xbb4 <vfprintf+0x15c>
     b72:	f8 01       	movw	r30, r16
     b74:	80 81       	ld	r24, Z
     b76:	89 83       	std	Y+1, r24	; 0x01
     b78:	0e 5f       	subi	r16, 0xFE	; 254
     b7a:	1f 4f       	sbci	r17, 0xFF	; 255
     b7c:	88 24       	eor	r8, r8
     b7e:	83 94       	inc	r8
     b80:	91 2c       	mov	r9, r1
     b82:	53 01       	movw	r10, r6
     b84:	13 c0       	rjmp	.+38     	; 0xbac <vfprintf+0x154>
     b86:	28 01       	movw	r4, r16
     b88:	f2 e0       	ldi	r31, 0x02	; 2
     b8a:	4f 0e       	add	r4, r31
     b8c:	51 1c       	adc	r5, r1
     b8e:	f8 01       	movw	r30, r16
     b90:	a0 80       	ld	r10, Z
     b92:	b1 80       	ldd	r11, Z+1	; 0x01
     b94:	36 fe       	sbrs	r3, 6
     b96:	03 c0       	rjmp	.+6      	; 0xb9e <vfprintf+0x146>
     b98:	69 2d       	mov	r22, r9
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x14a>
     b9e:	6f ef       	ldi	r22, 0xFF	; 255
     ba0:	7f ef       	ldi	r23, 0xFF	; 255
     ba2:	c5 01       	movw	r24, r10
     ba4:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <strnlen>
     ba8:	4c 01       	movw	r8, r24
     baa:	82 01       	movw	r16, r4
     bac:	f3 2d       	mov	r31, r3
     bae:	ff 77       	andi	r31, 0x7F	; 127
     bb0:	3f 2e       	mov	r3, r31
     bb2:	16 c0       	rjmp	.+44     	; 0xbe0 <vfprintf+0x188>
     bb4:	28 01       	movw	r4, r16
     bb6:	22 e0       	ldi	r18, 0x02	; 2
     bb8:	42 0e       	add	r4, r18
     bba:	51 1c       	adc	r5, r1
     bbc:	f8 01       	movw	r30, r16
     bbe:	a0 80       	ld	r10, Z
     bc0:	b1 80       	ldd	r11, Z+1	; 0x01
     bc2:	36 fe       	sbrs	r3, 6
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x174>
     bc6:	69 2d       	mov	r22, r9
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vfprintf+0x178>
     bcc:	6f ef       	ldi	r22, 0xFF	; 255
     bce:	7f ef       	ldi	r23, 0xFF	; 255
     bd0:	c5 01       	movw	r24, r10
     bd2:	0e 94 4a 08 	call	0x1094	; 0x1094 <strnlen_P>
     bd6:	4c 01       	movw	r8, r24
     bd8:	f3 2d       	mov	r31, r3
     bda:	f0 68       	ori	r31, 0x80	; 128
     bdc:	3f 2e       	mov	r3, r31
     bde:	82 01       	movw	r16, r4
     be0:	33 fc       	sbrc	r3, 3
     be2:	1b c0       	rjmp	.+54     	; 0xc1a <vfprintf+0x1c2>
     be4:	82 2d       	mov	r24, r2
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	88 16       	cp	r8, r24
     bea:	99 06       	cpc	r9, r25
     bec:	b0 f4       	brcc	.+44     	; 0xc1a <vfprintf+0x1c2>
     bee:	b6 01       	movw	r22, r12
     bf0:	80 e2       	ldi	r24, 0x20	; 32
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     bf8:	2a 94       	dec	r2
     bfa:	f4 cf       	rjmp	.-24     	; 0xbe4 <vfprintf+0x18c>
     bfc:	f5 01       	movw	r30, r10
     bfe:	37 fc       	sbrc	r3, 7
     c00:	85 91       	lpm	r24, Z+
     c02:	37 fe       	sbrs	r3, 7
     c04:	81 91       	ld	r24, Z+
     c06:	5f 01       	movw	r10, r30
     c08:	b6 01       	movw	r22, r12
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     c10:	21 10       	cpse	r2, r1
     c12:	2a 94       	dec	r2
     c14:	21 e0       	ldi	r18, 0x01	; 1
     c16:	82 1a       	sub	r8, r18
     c18:	91 08       	sbc	r9, r1
     c1a:	81 14       	cp	r8, r1
     c1c:	91 04       	cpc	r9, r1
     c1e:	71 f7       	brne	.-36     	; 0xbfc <vfprintf+0x1a4>
     c20:	e8 c0       	rjmp	.+464    	; 0xdf2 <vfprintf+0x39a>
     c22:	84 36       	cpi	r24, 0x64	; 100
     c24:	11 f0       	breq	.+4      	; 0xc2a <vfprintf+0x1d2>
     c26:	89 36       	cpi	r24, 0x69	; 105
     c28:	41 f5       	brne	.+80     	; 0xc7a <vfprintf+0x222>
     c2a:	f8 01       	movw	r30, r16
     c2c:	37 fe       	sbrs	r3, 7
     c2e:	07 c0       	rjmp	.+14     	; 0xc3e <vfprintf+0x1e6>
     c30:	60 81       	ld	r22, Z
     c32:	71 81       	ldd	r23, Z+1	; 0x01
     c34:	82 81       	ldd	r24, Z+2	; 0x02
     c36:	93 81       	ldd	r25, Z+3	; 0x03
     c38:	0c 5f       	subi	r16, 0xFC	; 252
     c3a:	1f 4f       	sbci	r17, 0xFF	; 255
     c3c:	08 c0       	rjmp	.+16     	; 0xc4e <vfprintf+0x1f6>
     c3e:	60 81       	ld	r22, Z
     c40:	71 81       	ldd	r23, Z+1	; 0x01
     c42:	07 2e       	mov	r0, r23
     c44:	00 0c       	add	r0, r0
     c46:	88 0b       	sbc	r24, r24
     c48:	99 0b       	sbc	r25, r25
     c4a:	0e 5f       	subi	r16, 0xFE	; 254
     c4c:	1f 4f       	sbci	r17, 0xFF	; 255
     c4e:	f3 2d       	mov	r31, r3
     c50:	ff 76       	andi	r31, 0x6F	; 111
     c52:	3f 2e       	mov	r3, r31
     c54:	97 ff       	sbrs	r25, 7
     c56:	09 c0       	rjmp	.+18     	; 0xc6a <vfprintf+0x212>
     c58:	90 95       	com	r25
     c5a:	80 95       	com	r24
     c5c:	70 95       	com	r23
     c5e:	61 95       	neg	r22
     c60:	7f 4f       	sbci	r23, 0xFF	; 255
     c62:	8f 4f       	sbci	r24, 0xFF	; 255
     c64:	9f 4f       	sbci	r25, 0xFF	; 255
     c66:	f0 68       	ori	r31, 0x80	; 128
     c68:	3f 2e       	mov	r3, r31
     c6a:	2a e0       	ldi	r18, 0x0A	; 10
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	a3 01       	movw	r20, r6
     c70:	0e 94 a3 08 	call	0x1146	; 0x1146 <__ultoa_invert>
     c74:	88 2e       	mov	r8, r24
     c76:	86 18       	sub	r8, r6
     c78:	45 c0       	rjmp	.+138    	; 0xd04 <vfprintf+0x2ac>
     c7a:	85 37       	cpi	r24, 0x75	; 117
     c7c:	31 f4       	brne	.+12     	; 0xc8a <vfprintf+0x232>
     c7e:	23 2d       	mov	r18, r3
     c80:	2f 7e       	andi	r18, 0xEF	; 239
     c82:	b2 2e       	mov	r11, r18
     c84:	2a e0       	ldi	r18, 0x0A	; 10
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	25 c0       	rjmp	.+74     	; 0xcd4 <vfprintf+0x27c>
     c8a:	93 2d       	mov	r25, r3
     c8c:	99 7f       	andi	r25, 0xF9	; 249
     c8e:	b9 2e       	mov	r11, r25
     c90:	8f 36       	cpi	r24, 0x6F	; 111
     c92:	c1 f0       	breq	.+48     	; 0xcc4 <vfprintf+0x26c>
     c94:	18 f4       	brcc	.+6      	; 0xc9c <vfprintf+0x244>
     c96:	88 35       	cpi	r24, 0x58	; 88
     c98:	79 f0       	breq	.+30     	; 0xcb8 <vfprintf+0x260>
     c9a:	b5 c0       	rjmp	.+362    	; 0xe06 <vfprintf+0x3ae>
     c9c:	80 37       	cpi	r24, 0x70	; 112
     c9e:	19 f0       	breq	.+6      	; 0xca6 <vfprintf+0x24e>
     ca0:	88 37       	cpi	r24, 0x78	; 120
     ca2:	21 f0       	breq	.+8      	; 0xcac <vfprintf+0x254>
     ca4:	b0 c0       	rjmp	.+352    	; 0xe06 <vfprintf+0x3ae>
     ca6:	e9 2f       	mov	r30, r25
     ca8:	e0 61       	ori	r30, 0x10	; 16
     caa:	be 2e       	mov	r11, r30
     cac:	b4 fe       	sbrs	r11, 4
     cae:	0d c0       	rjmp	.+26     	; 0xcca <vfprintf+0x272>
     cb0:	fb 2d       	mov	r31, r11
     cb2:	f4 60       	ori	r31, 0x04	; 4
     cb4:	bf 2e       	mov	r11, r31
     cb6:	09 c0       	rjmp	.+18     	; 0xcca <vfprintf+0x272>
     cb8:	34 fe       	sbrs	r3, 4
     cba:	0a c0       	rjmp	.+20     	; 0xcd0 <vfprintf+0x278>
     cbc:	29 2f       	mov	r18, r25
     cbe:	26 60       	ori	r18, 0x06	; 6
     cc0:	b2 2e       	mov	r11, r18
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <vfprintf+0x278>
     cc4:	28 e0       	ldi	r18, 0x08	; 8
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	05 c0       	rjmp	.+10     	; 0xcd4 <vfprintf+0x27c>
     cca:	20 e1       	ldi	r18, 0x10	; 16
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	02 c0       	rjmp	.+4      	; 0xcd4 <vfprintf+0x27c>
     cd0:	20 e1       	ldi	r18, 0x10	; 16
     cd2:	32 e0       	ldi	r19, 0x02	; 2
     cd4:	f8 01       	movw	r30, r16
     cd6:	b7 fe       	sbrs	r11, 7
     cd8:	07 c0       	rjmp	.+14     	; 0xce8 <vfprintf+0x290>
     cda:	60 81       	ld	r22, Z
     cdc:	71 81       	ldd	r23, Z+1	; 0x01
     cde:	82 81       	ldd	r24, Z+2	; 0x02
     ce0:	93 81       	ldd	r25, Z+3	; 0x03
     ce2:	0c 5f       	subi	r16, 0xFC	; 252
     ce4:	1f 4f       	sbci	r17, 0xFF	; 255
     ce6:	06 c0       	rjmp	.+12     	; 0xcf4 <vfprintf+0x29c>
     ce8:	60 81       	ld	r22, Z
     cea:	71 81       	ldd	r23, Z+1	; 0x01
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 5f       	subi	r16, 0xFE	; 254
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	a3 01       	movw	r20, r6
     cf6:	0e 94 a3 08 	call	0x1146	; 0x1146 <__ultoa_invert>
     cfa:	88 2e       	mov	r8, r24
     cfc:	86 18       	sub	r8, r6
     cfe:	fb 2d       	mov	r31, r11
     d00:	ff 77       	andi	r31, 0x7F	; 127
     d02:	3f 2e       	mov	r3, r31
     d04:	36 fe       	sbrs	r3, 6
     d06:	0d c0       	rjmp	.+26     	; 0xd22 <vfprintf+0x2ca>
     d08:	23 2d       	mov	r18, r3
     d0a:	2e 7f       	andi	r18, 0xFE	; 254
     d0c:	a2 2e       	mov	r10, r18
     d0e:	89 14       	cp	r8, r9
     d10:	58 f4       	brcc	.+22     	; 0xd28 <vfprintf+0x2d0>
     d12:	34 fe       	sbrs	r3, 4
     d14:	0b c0       	rjmp	.+22     	; 0xd2c <vfprintf+0x2d4>
     d16:	32 fc       	sbrc	r3, 2
     d18:	09 c0       	rjmp	.+18     	; 0xd2c <vfprintf+0x2d4>
     d1a:	83 2d       	mov	r24, r3
     d1c:	8e 7e       	andi	r24, 0xEE	; 238
     d1e:	a8 2e       	mov	r10, r24
     d20:	05 c0       	rjmp	.+10     	; 0xd2c <vfprintf+0x2d4>
     d22:	b8 2c       	mov	r11, r8
     d24:	a3 2c       	mov	r10, r3
     d26:	03 c0       	rjmp	.+6      	; 0xd2e <vfprintf+0x2d6>
     d28:	b8 2c       	mov	r11, r8
     d2a:	01 c0       	rjmp	.+2      	; 0xd2e <vfprintf+0x2d6>
     d2c:	b9 2c       	mov	r11, r9
     d2e:	a4 fe       	sbrs	r10, 4
     d30:	0f c0       	rjmp	.+30     	; 0xd50 <vfprintf+0x2f8>
     d32:	fe 01       	movw	r30, r28
     d34:	e8 0d       	add	r30, r8
     d36:	f1 1d       	adc	r31, r1
     d38:	80 81       	ld	r24, Z
     d3a:	80 33       	cpi	r24, 0x30	; 48
     d3c:	21 f4       	brne	.+8      	; 0xd46 <vfprintf+0x2ee>
     d3e:	9a 2d       	mov	r25, r10
     d40:	99 7e       	andi	r25, 0xE9	; 233
     d42:	a9 2e       	mov	r10, r25
     d44:	09 c0       	rjmp	.+18     	; 0xd58 <vfprintf+0x300>
     d46:	a2 fe       	sbrs	r10, 2
     d48:	06 c0       	rjmp	.+12     	; 0xd56 <vfprintf+0x2fe>
     d4a:	b3 94       	inc	r11
     d4c:	b3 94       	inc	r11
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <vfprintf+0x300>
     d50:	8a 2d       	mov	r24, r10
     d52:	86 78       	andi	r24, 0x86	; 134
     d54:	09 f0       	breq	.+2      	; 0xd58 <vfprintf+0x300>
     d56:	b3 94       	inc	r11
     d58:	a3 fc       	sbrc	r10, 3
     d5a:	11 c0       	rjmp	.+34     	; 0xd7e <vfprintf+0x326>
     d5c:	a0 fe       	sbrs	r10, 0
     d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0x314>
     d60:	b2 14       	cp	r11, r2
     d62:	88 f4       	brcc	.+34     	; 0xd86 <vfprintf+0x32e>
     d64:	28 0c       	add	r2, r8
     d66:	92 2c       	mov	r9, r2
     d68:	9b 18       	sub	r9, r11
     d6a:	0e c0       	rjmp	.+28     	; 0xd88 <vfprintf+0x330>
     d6c:	b2 14       	cp	r11, r2
     d6e:	60 f4       	brcc	.+24     	; 0xd88 <vfprintf+0x330>
     d70:	b6 01       	movw	r22, r12
     d72:	80 e2       	ldi	r24, 0x20	; 32
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     d7a:	b3 94       	inc	r11
     d7c:	f7 cf       	rjmp	.-18     	; 0xd6c <vfprintf+0x314>
     d7e:	b2 14       	cp	r11, r2
     d80:	18 f4       	brcc	.+6      	; 0xd88 <vfprintf+0x330>
     d82:	2b 18       	sub	r2, r11
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0x332>
     d86:	98 2c       	mov	r9, r8
     d88:	21 2c       	mov	r2, r1
     d8a:	a4 fe       	sbrs	r10, 4
     d8c:	10 c0       	rjmp	.+32     	; 0xdae <vfprintf+0x356>
     d8e:	b6 01       	movw	r22, r12
     d90:	80 e3       	ldi	r24, 0x30	; 48
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     d98:	a2 fe       	sbrs	r10, 2
     d9a:	17 c0       	rjmp	.+46     	; 0xdca <vfprintf+0x372>
     d9c:	a1 fc       	sbrc	r10, 1
     d9e:	03 c0       	rjmp	.+6      	; 0xda6 <vfprintf+0x34e>
     da0:	88 e7       	ldi	r24, 0x78	; 120
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	02 c0       	rjmp	.+4      	; 0xdaa <vfprintf+0x352>
     da6:	88 e5       	ldi	r24, 0x58	; 88
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	b6 01       	movw	r22, r12
     dac:	0c c0       	rjmp	.+24     	; 0xdc6 <vfprintf+0x36e>
     dae:	8a 2d       	mov	r24, r10
     db0:	86 78       	andi	r24, 0x86	; 134
     db2:	59 f0       	breq	.+22     	; 0xdca <vfprintf+0x372>
     db4:	a1 fe       	sbrs	r10, 1
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <vfprintf+0x364>
     db8:	8b e2       	ldi	r24, 0x2B	; 43
     dba:	01 c0       	rjmp	.+2      	; 0xdbe <vfprintf+0x366>
     dbc:	80 e2       	ldi	r24, 0x20	; 32
     dbe:	a7 fc       	sbrc	r10, 7
     dc0:	8d e2       	ldi	r24, 0x2D	; 45
     dc2:	b6 01       	movw	r22, r12
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     dca:	89 14       	cp	r8, r9
     dcc:	38 f4       	brcc	.+14     	; 0xddc <vfprintf+0x384>
     dce:	b6 01       	movw	r22, r12
     dd0:	80 e3       	ldi	r24, 0x30	; 48
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     dd8:	9a 94       	dec	r9
     dda:	f7 cf       	rjmp	.-18     	; 0xdca <vfprintf+0x372>
     ddc:	8a 94       	dec	r8
     dde:	f3 01       	movw	r30, r6
     de0:	e8 0d       	add	r30, r8
     de2:	f1 1d       	adc	r31, r1
     de4:	80 81       	ld	r24, Z
     de6:	b6 01       	movw	r22, r12
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     dee:	81 10       	cpse	r8, r1
     df0:	f5 cf       	rjmp	.-22     	; 0xddc <vfprintf+0x384>
     df2:	22 20       	and	r2, r2
     df4:	09 f4       	brne	.+2      	; 0xdf8 <vfprintf+0x3a0>
     df6:	42 ce       	rjmp	.-892    	; 0xa7c <vfprintf+0x24>
     df8:	b6 01       	movw	r22, r12
     dfa:	80 e2       	ldi	r24, 0x20	; 32
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 67 08 	call	0x10ce	; 0x10ce <fputc>
     e02:	2a 94       	dec	r2
     e04:	f6 cf       	rjmp	.-20     	; 0xdf2 <vfprintf+0x39a>
     e06:	f6 01       	movw	r30, r12
     e08:	86 81       	ldd	r24, Z+6	; 0x06
     e0a:	97 81       	ldd	r25, Z+7	; 0x07
     e0c:	02 c0       	rjmp	.+4      	; 0xe12 <vfprintf+0x3ba>
     e0e:	8f ef       	ldi	r24, 0xFF	; 255
     e10:	9f ef       	ldi	r25, 0xFF	; 255
     e12:	2b 96       	adiw	r28, 0x0b	; 11
     e14:	e2 e1       	ldi	r30, 0x12	; 18
     e16:	0c 94 1d 09 	jmp	0x123a	; 0x123a <__epilogue_restores__>

00000e1a <calloc>:
     e1a:	0f 93       	push	r16
     e1c:	1f 93       	push	r17
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	86 9f       	mul	r24, r22
     e24:	80 01       	movw	r16, r0
     e26:	87 9f       	mul	r24, r23
     e28:	10 0d       	add	r17, r0
     e2a:	96 9f       	mul	r25, r22
     e2c:	10 0d       	add	r17, r0
     e2e:	11 24       	eor	r1, r1
     e30:	c8 01       	movw	r24, r16
     e32:	0e 94 29 07 	call	0xe52	; 0xe52 <malloc>
     e36:	ec 01       	movw	r28, r24
     e38:	00 97       	sbiw	r24, 0x00	; 0
     e3a:	29 f0       	breq	.+10     	; 0xe46 <calloc+0x2c>
     e3c:	a8 01       	movw	r20, r16
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	0e 94 55 08 	call	0x10aa	; 0x10aa <memset>
     e46:	ce 01       	movw	r24, r28
     e48:	df 91       	pop	r29
     e4a:	cf 91       	pop	r28
     e4c:	1f 91       	pop	r17
     e4e:	0f 91       	pop	r16
     e50:	08 95       	ret

00000e52 <malloc>:
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	91 05       	cpc	r25, r1
     e5e:	10 f4       	brcc	.+4      	; 0xe64 <malloc+0x12>
     e60:	82 e0       	ldi	r24, 0x02	; 2
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <__flp>
     e68:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <__flp+0x1>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	30 97       	sbiw	r30, 0x00	; 0
     e76:	19 f1       	breq	.+70     	; 0xebe <malloc+0x6c>
     e78:	40 81       	ld	r20, Z
     e7a:	51 81       	ldd	r21, Z+1	; 0x01
     e7c:	02 81       	ldd	r16, Z+2	; 0x02
     e7e:	13 81       	ldd	r17, Z+3	; 0x03
     e80:	48 17       	cp	r20, r24
     e82:	59 07       	cpc	r21, r25
     e84:	c8 f0       	brcs	.+50     	; 0xeb8 <malloc+0x66>
     e86:	84 17       	cp	r24, r20
     e88:	95 07       	cpc	r25, r21
     e8a:	69 f4       	brne	.+26     	; 0xea6 <malloc+0x54>
     e8c:	10 97       	sbiw	r26, 0x00	; 0
     e8e:	31 f0       	breq	.+12     	; 0xe9c <malloc+0x4a>
     e90:	12 96       	adiw	r26, 0x02	; 2
     e92:	0c 93       	st	X, r16
     e94:	12 97       	sbiw	r26, 0x02	; 2
     e96:	13 96       	adiw	r26, 0x03	; 3
     e98:	1c 93       	st	X, r17
     e9a:	27 c0       	rjmp	.+78     	; 0xeea <malloc+0x98>
     e9c:	00 93 ea 01 	sts	0x01EA, r16	; 0x8001ea <__flp>
     ea0:	10 93 eb 01 	sts	0x01EB, r17	; 0x8001eb <__flp+0x1>
     ea4:	22 c0       	rjmp	.+68     	; 0xeea <malloc+0x98>
     ea6:	21 15       	cp	r18, r1
     ea8:	31 05       	cpc	r19, r1
     eaa:	19 f0       	breq	.+6      	; 0xeb2 <malloc+0x60>
     eac:	42 17       	cp	r20, r18
     eae:	53 07       	cpc	r21, r19
     eb0:	18 f4       	brcc	.+6      	; 0xeb8 <malloc+0x66>
     eb2:	9a 01       	movw	r18, r20
     eb4:	bd 01       	movw	r22, r26
     eb6:	ef 01       	movw	r28, r30
     eb8:	df 01       	movw	r26, r30
     eba:	f8 01       	movw	r30, r16
     ebc:	db cf       	rjmp	.-74     	; 0xe74 <malloc+0x22>
     ebe:	21 15       	cp	r18, r1
     ec0:	31 05       	cpc	r19, r1
     ec2:	f9 f0       	breq	.+62     	; 0xf02 <malloc+0xb0>
     ec4:	28 1b       	sub	r18, r24
     ec6:	39 0b       	sbc	r19, r25
     ec8:	24 30       	cpi	r18, 0x04	; 4
     eca:	31 05       	cpc	r19, r1
     ecc:	80 f4       	brcc	.+32     	; 0xeee <malloc+0x9c>
     ece:	8a 81       	ldd	r24, Y+2	; 0x02
     ed0:	9b 81       	ldd	r25, Y+3	; 0x03
     ed2:	61 15       	cp	r22, r1
     ed4:	71 05       	cpc	r23, r1
     ed6:	21 f0       	breq	.+8      	; 0xee0 <malloc+0x8e>
     ed8:	fb 01       	movw	r30, r22
     eda:	93 83       	std	Z+3, r25	; 0x03
     edc:	82 83       	std	Z+2, r24	; 0x02
     ede:	04 c0       	rjmp	.+8      	; 0xee8 <malloc+0x96>
     ee0:	90 93 eb 01 	sts	0x01EB, r25	; 0x8001eb <__flp+0x1>
     ee4:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <__flp>
     ee8:	fe 01       	movw	r30, r28
     eea:	32 96       	adiw	r30, 0x02	; 2
     eec:	44 c0       	rjmp	.+136    	; 0xf76 <malloc+0x124>
     eee:	fe 01       	movw	r30, r28
     ef0:	e2 0f       	add	r30, r18
     ef2:	f3 1f       	adc	r31, r19
     ef4:	81 93       	st	Z+, r24
     ef6:	91 93       	st	Z+, r25
     ef8:	22 50       	subi	r18, 0x02	; 2
     efa:	31 09       	sbc	r19, r1
     efc:	39 83       	std	Y+1, r19	; 0x01
     efe:	28 83       	st	Y, r18
     f00:	3a c0       	rjmp	.+116    	; 0xf76 <malloc+0x124>
     f02:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
     f06:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
     f0a:	23 2b       	or	r18, r19
     f0c:	41 f4       	brne	.+16     	; 0xf1e <malloc+0xcc>
     f0e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     f12:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     f16:	30 93 e9 01 	sts	0x01E9, r19	; 0x8001e9 <__brkval+0x1>
     f1a:	20 93 e8 01 	sts	0x01E8, r18	; 0x8001e8 <__brkval>
     f1e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     f22:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     f26:	21 15       	cp	r18, r1
     f28:	31 05       	cpc	r19, r1
     f2a:	41 f4       	brne	.+16     	; 0xf3c <malloc+0xea>
     f2c:	2d b7       	in	r18, 0x3d	; 61
     f2e:	3e b7       	in	r19, 0x3e	; 62
     f30:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f34:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f38:	24 1b       	sub	r18, r20
     f3a:	35 0b       	sbc	r19, r21
     f3c:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <__brkval>
     f40:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <__brkval+0x1>
     f44:	e2 17       	cp	r30, r18
     f46:	f3 07       	cpc	r31, r19
     f48:	a0 f4       	brcc	.+40     	; 0xf72 <malloc+0x120>
     f4a:	2e 1b       	sub	r18, r30
     f4c:	3f 0b       	sbc	r19, r31
     f4e:	28 17       	cp	r18, r24
     f50:	39 07       	cpc	r19, r25
     f52:	78 f0       	brcs	.+30     	; 0xf72 <malloc+0x120>
     f54:	ac 01       	movw	r20, r24
     f56:	4e 5f       	subi	r20, 0xFE	; 254
     f58:	5f 4f       	sbci	r21, 0xFF	; 255
     f5a:	24 17       	cp	r18, r20
     f5c:	35 07       	cpc	r19, r21
     f5e:	48 f0       	brcs	.+18     	; 0xf72 <malloc+0x120>
     f60:	4e 0f       	add	r20, r30
     f62:	5f 1f       	adc	r21, r31
     f64:	50 93 e9 01 	sts	0x01E9, r21	; 0x8001e9 <__brkval+0x1>
     f68:	40 93 e8 01 	sts	0x01E8, r20	; 0x8001e8 <__brkval>
     f6c:	81 93       	st	Z+, r24
     f6e:	91 93       	st	Z+, r25
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <malloc+0x124>
     f72:	e0 e0       	ldi	r30, 0x00	; 0
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	cf 01       	movw	r24, r30
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	1f 91       	pop	r17
     f7e:	0f 91       	pop	r16
     f80:	08 95       	ret

00000f82 <free>:
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	00 97       	sbiw	r24, 0x00	; 0
     f88:	09 f4       	brne	.+2      	; 0xf8c <free+0xa>
     f8a:	81 c0       	rjmp	.+258    	; 0x108e <free+0x10c>
     f8c:	fc 01       	movw	r30, r24
     f8e:	32 97       	sbiw	r30, 0x02	; 2
     f90:	13 82       	std	Z+3, r1	; 0x03
     f92:	12 82       	std	Z+2, r1	; 0x02
     f94:	a0 91 ea 01 	lds	r26, 0x01EA	; 0x8001ea <__flp>
     f98:	b0 91 eb 01 	lds	r27, 0x01EB	; 0x8001eb <__flp+0x1>
     f9c:	10 97       	sbiw	r26, 0x00	; 0
     f9e:	81 f4       	brne	.+32     	; 0xfc0 <free+0x3e>
     fa0:	20 81       	ld	r18, Z
     fa2:	31 81       	ldd	r19, Z+1	; 0x01
     fa4:	82 0f       	add	r24, r18
     fa6:	93 1f       	adc	r25, r19
     fa8:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
     fac:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
     fb0:	28 17       	cp	r18, r24
     fb2:	39 07       	cpc	r19, r25
     fb4:	51 f5       	brne	.+84     	; 0x100a <free+0x88>
     fb6:	f0 93 e9 01 	sts	0x01E9, r31	; 0x8001e9 <__brkval+0x1>
     fba:	e0 93 e8 01 	sts	0x01E8, r30	; 0x8001e8 <__brkval>
     fbe:	67 c0       	rjmp	.+206    	; 0x108e <free+0x10c>
     fc0:	ed 01       	movw	r28, r26
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	ce 17       	cp	r28, r30
     fc8:	df 07       	cpc	r29, r31
     fca:	40 f4       	brcc	.+16     	; 0xfdc <free+0x5a>
     fcc:	4a 81       	ldd	r20, Y+2	; 0x02
     fce:	5b 81       	ldd	r21, Y+3	; 0x03
     fd0:	9e 01       	movw	r18, r28
     fd2:	41 15       	cp	r20, r1
     fd4:	51 05       	cpc	r21, r1
     fd6:	f1 f0       	breq	.+60     	; 0x1014 <free+0x92>
     fd8:	ea 01       	movw	r28, r20
     fda:	f5 cf       	rjmp	.-22     	; 0xfc6 <free+0x44>
     fdc:	d3 83       	std	Z+3, r29	; 0x03
     fde:	c2 83       	std	Z+2, r28	; 0x02
     fe0:	40 81       	ld	r20, Z
     fe2:	51 81       	ldd	r21, Z+1	; 0x01
     fe4:	84 0f       	add	r24, r20
     fe6:	95 1f       	adc	r25, r21
     fe8:	c8 17       	cp	r28, r24
     fea:	d9 07       	cpc	r29, r25
     fec:	59 f4       	brne	.+22     	; 0x1004 <free+0x82>
     fee:	88 81       	ld	r24, Y
     ff0:	99 81       	ldd	r25, Y+1	; 0x01
     ff2:	84 0f       	add	r24, r20
     ff4:	95 1f       	adc	r25, r21
     ff6:	02 96       	adiw	r24, 0x02	; 2
     ff8:	91 83       	std	Z+1, r25	; 0x01
     ffa:	80 83       	st	Z, r24
     ffc:	8a 81       	ldd	r24, Y+2	; 0x02
     ffe:	9b 81       	ldd	r25, Y+3	; 0x03
    1000:	93 83       	std	Z+3, r25	; 0x03
    1002:	82 83       	std	Z+2, r24	; 0x02
    1004:	21 15       	cp	r18, r1
    1006:	31 05       	cpc	r19, r1
    1008:	29 f4       	brne	.+10     	; 0x1014 <free+0x92>
    100a:	f0 93 eb 01 	sts	0x01EB, r31	; 0x8001eb <__flp+0x1>
    100e:	e0 93 ea 01 	sts	0x01EA, r30	; 0x8001ea <__flp>
    1012:	3d c0       	rjmp	.+122    	; 0x108e <free+0x10c>
    1014:	e9 01       	movw	r28, r18
    1016:	fb 83       	std	Y+3, r31	; 0x03
    1018:	ea 83       	std	Y+2, r30	; 0x02
    101a:	49 91       	ld	r20, Y+
    101c:	59 91       	ld	r21, Y+
    101e:	c4 0f       	add	r28, r20
    1020:	d5 1f       	adc	r29, r21
    1022:	ec 17       	cp	r30, r28
    1024:	fd 07       	cpc	r31, r29
    1026:	61 f4       	brne	.+24     	; 0x1040 <free+0xbe>
    1028:	80 81       	ld	r24, Z
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	84 0f       	add	r24, r20
    102e:	95 1f       	adc	r25, r21
    1030:	02 96       	adiw	r24, 0x02	; 2
    1032:	e9 01       	movw	r28, r18
    1034:	99 83       	std	Y+1, r25	; 0x01
    1036:	88 83       	st	Y, r24
    1038:	82 81       	ldd	r24, Z+2	; 0x02
    103a:	93 81       	ldd	r25, Z+3	; 0x03
    103c:	9b 83       	std	Y+3, r25	; 0x03
    103e:	8a 83       	std	Y+2, r24	; 0x02
    1040:	e0 e0       	ldi	r30, 0x00	; 0
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	12 96       	adiw	r26, 0x02	; 2
    1046:	8d 91       	ld	r24, X+
    1048:	9c 91       	ld	r25, X
    104a:	13 97       	sbiw	r26, 0x03	; 3
    104c:	00 97       	sbiw	r24, 0x00	; 0
    104e:	19 f0       	breq	.+6      	; 0x1056 <free+0xd4>
    1050:	fd 01       	movw	r30, r26
    1052:	dc 01       	movw	r26, r24
    1054:	f7 cf       	rjmp	.-18     	; 0x1044 <free+0xc2>
    1056:	8d 91       	ld	r24, X+
    1058:	9c 91       	ld	r25, X
    105a:	11 97       	sbiw	r26, 0x01	; 1
    105c:	9d 01       	movw	r18, r26
    105e:	2e 5f       	subi	r18, 0xFE	; 254
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	82 0f       	add	r24, r18
    1064:	93 1f       	adc	r25, r19
    1066:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
    106a:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
    106e:	28 17       	cp	r18, r24
    1070:	39 07       	cpc	r19, r25
    1072:	69 f4       	brne	.+26     	; 0x108e <free+0x10c>
    1074:	30 97       	sbiw	r30, 0x00	; 0
    1076:	29 f4       	brne	.+10     	; 0x1082 <free+0x100>
    1078:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <__flp+0x1>
    107c:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <__flp>
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <free+0x104>
    1082:	13 82       	std	Z+3, r1	; 0x03
    1084:	12 82       	std	Z+2, r1	; 0x02
    1086:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <__brkval+0x1>
    108a:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <__brkval>
    108e:	df 91       	pop	r29
    1090:	cf 91       	pop	r28
    1092:	08 95       	ret

00001094 <strnlen_P>:
    1094:	fc 01       	movw	r30, r24
    1096:	05 90       	lpm	r0, Z+
    1098:	61 50       	subi	r22, 0x01	; 1
    109a:	70 40       	sbci	r23, 0x00	; 0
    109c:	01 10       	cpse	r0, r1
    109e:	d8 f7       	brcc	.-10     	; 0x1096 <strnlen_P+0x2>
    10a0:	80 95       	com	r24
    10a2:	90 95       	com	r25
    10a4:	8e 0f       	add	r24, r30
    10a6:	9f 1f       	adc	r25, r31
    10a8:	08 95       	ret

000010aa <memset>:
    10aa:	dc 01       	movw	r26, r24
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <memset+0x6>
    10ae:	6d 93       	st	X+, r22
    10b0:	41 50       	subi	r20, 0x01	; 1
    10b2:	50 40       	sbci	r21, 0x00	; 0
    10b4:	e0 f7       	brcc	.-8      	; 0x10ae <memset+0x4>
    10b6:	08 95       	ret

000010b8 <strnlen>:
    10b8:	fc 01       	movw	r30, r24
    10ba:	61 50       	subi	r22, 0x01	; 1
    10bc:	70 40       	sbci	r23, 0x00	; 0
    10be:	01 90       	ld	r0, Z+
    10c0:	01 10       	cpse	r0, r1
    10c2:	d8 f7       	brcc	.-10     	; 0x10ba <strnlen+0x2>
    10c4:	80 95       	com	r24
    10c6:	90 95       	com	r25
    10c8:	8e 0f       	add	r24, r30
    10ca:	9f 1f       	adc	r25, r31
    10cc:	08 95       	ret

000010ce <fputc>:
    10ce:	0f 93       	push	r16
    10d0:	1f 93       	push	r17
    10d2:	cf 93       	push	r28
    10d4:	df 93       	push	r29
    10d6:	fb 01       	movw	r30, r22
    10d8:	23 81       	ldd	r18, Z+3	; 0x03
    10da:	21 fd       	sbrc	r18, 1
    10dc:	03 c0       	rjmp	.+6      	; 0x10e4 <fputc+0x16>
    10de:	8f ef       	ldi	r24, 0xFF	; 255
    10e0:	9f ef       	ldi	r25, 0xFF	; 255
    10e2:	2c c0       	rjmp	.+88     	; 0x113c <fputc+0x6e>
    10e4:	22 ff       	sbrs	r18, 2
    10e6:	16 c0       	rjmp	.+44     	; 0x1114 <fputc+0x46>
    10e8:	46 81       	ldd	r20, Z+6	; 0x06
    10ea:	57 81       	ldd	r21, Z+7	; 0x07
    10ec:	24 81       	ldd	r18, Z+4	; 0x04
    10ee:	35 81       	ldd	r19, Z+5	; 0x05
    10f0:	42 17       	cp	r20, r18
    10f2:	53 07       	cpc	r21, r19
    10f4:	44 f4       	brge	.+16     	; 0x1106 <fputc+0x38>
    10f6:	a0 81       	ld	r26, Z
    10f8:	b1 81       	ldd	r27, Z+1	; 0x01
    10fa:	9d 01       	movw	r18, r26
    10fc:	2f 5f       	subi	r18, 0xFF	; 255
    10fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1100:	31 83       	std	Z+1, r19	; 0x01
    1102:	20 83       	st	Z, r18
    1104:	8c 93       	st	X, r24
    1106:	26 81       	ldd	r18, Z+6	; 0x06
    1108:	37 81       	ldd	r19, Z+7	; 0x07
    110a:	2f 5f       	subi	r18, 0xFF	; 255
    110c:	3f 4f       	sbci	r19, 0xFF	; 255
    110e:	37 83       	std	Z+7, r19	; 0x07
    1110:	26 83       	std	Z+6, r18	; 0x06
    1112:	14 c0       	rjmp	.+40     	; 0x113c <fputc+0x6e>
    1114:	8b 01       	movw	r16, r22
    1116:	ec 01       	movw	r28, r24
    1118:	fb 01       	movw	r30, r22
    111a:	00 84       	ldd	r0, Z+8	; 0x08
    111c:	f1 85       	ldd	r31, Z+9	; 0x09
    111e:	e0 2d       	mov	r30, r0
    1120:	09 95       	icall
    1122:	89 2b       	or	r24, r25
    1124:	e1 f6       	brne	.-72     	; 0x10de <fputc+0x10>
    1126:	d8 01       	movw	r26, r16
    1128:	16 96       	adiw	r26, 0x06	; 6
    112a:	8d 91       	ld	r24, X+
    112c:	9c 91       	ld	r25, X
    112e:	17 97       	sbiw	r26, 0x07	; 7
    1130:	01 96       	adiw	r24, 0x01	; 1
    1132:	17 96       	adiw	r26, 0x07	; 7
    1134:	9c 93       	st	X, r25
    1136:	8e 93       	st	-X, r24
    1138:	16 97       	sbiw	r26, 0x06	; 6
    113a:	ce 01       	movw	r24, r28
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	1f 91       	pop	r17
    1142:	0f 91       	pop	r16
    1144:	08 95       	ret

00001146 <__ultoa_invert>:
    1146:	fa 01       	movw	r30, r20
    1148:	aa 27       	eor	r26, r26
    114a:	28 30       	cpi	r18, 0x08	; 8
    114c:	51 f1       	breq	.+84     	; 0x11a2 <__ultoa_invert+0x5c>
    114e:	20 31       	cpi	r18, 0x10	; 16
    1150:	81 f1       	breq	.+96     	; 0x11b2 <__ultoa_invert+0x6c>
    1152:	e8 94       	clt
    1154:	6f 93       	push	r22
    1156:	6e 7f       	andi	r22, 0xFE	; 254
    1158:	6e 5f       	subi	r22, 0xFE	; 254
    115a:	7f 4f       	sbci	r23, 0xFF	; 255
    115c:	8f 4f       	sbci	r24, 0xFF	; 255
    115e:	9f 4f       	sbci	r25, 0xFF	; 255
    1160:	af 4f       	sbci	r26, 0xFF	; 255
    1162:	b1 e0       	ldi	r27, 0x01	; 1
    1164:	3e d0       	rcall	.+124    	; 0x11e2 <__ultoa_invert+0x9c>
    1166:	b4 e0       	ldi	r27, 0x04	; 4
    1168:	3c d0       	rcall	.+120    	; 0x11e2 <__ultoa_invert+0x9c>
    116a:	67 0f       	add	r22, r23
    116c:	78 1f       	adc	r23, r24
    116e:	89 1f       	adc	r24, r25
    1170:	9a 1f       	adc	r25, r26
    1172:	a1 1d       	adc	r26, r1
    1174:	68 0f       	add	r22, r24
    1176:	79 1f       	adc	r23, r25
    1178:	8a 1f       	adc	r24, r26
    117a:	91 1d       	adc	r25, r1
    117c:	a1 1d       	adc	r26, r1
    117e:	6a 0f       	add	r22, r26
    1180:	71 1d       	adc	r23, r1
    1182:	81 1d       	adc	r24, r1
    1184:	91 1d       	adc	r25, r1
    1186:	a1 1d       	adc	r26, r1
    1188:	20 d0       	rcall	.+64     	; 0x11ca <__ultoa_invert+0x84>
    118a:	09 f4       	brne	.+2      	; 0x118e <__ultoa_invert+0x48>
    118c:	68 94       	set
    118e:	3f 91       	pop	r19
    1190:	2a e0       	ldi	r18, 0x0A	; 10
    1192:	26 9f       	mul	r18, r22
    1194:	11 24       	eor	r1, r1
    1196:	30 19       	sub	r19, r0
    1198:	30 5d       	subi	r19, 0xD0	; 208
    119a:	31 93       	st	Z+, r19
    119c:	de f6       	brtc	.-74     	; 0x1154 <__ultoa_invert+0xe>
    119e:	cf 01       	movw	r24, r30
    11a0:	08 95       	ret
    11a2:	46 2f       	mov	r20, r22
    11a4:	47 70       	andi	r20, 0x07	; 7
    11a6:	40 5d       	subi	r20, 0xD0	; 208
    11a8:	41 93       	st	Z+, r20
    11aa:	b3 e0       	ldi	r27, 0x03	; 3
    11ac:	0f d0       	rcall	.+30     	; 0x11cc <__ultoa_invert+0x86>
    11ae:	c9 f7       	brne	.-14     	; 0x11a2 <__ultoa_invert+0x5c>
    11b0:	f6 cf       	rjmp	.-20     	; 0x119e <__ultoa_invert+0x58>
    11b2:	46 2f       	mov	r20, r22
    11b4:	4f 70       	andi	r20, 0x0F	; 15
    11b6:	40 5d       	subi	r20, 0xD0	; 208
    11b8:	4a 33       	cpi	r20, 0x3A	; 58
    11ba:	18 f0       	brcs	.+6      	; 0x11c2 <__ultoa_invert+0x7c>
    11bc:	49 5d       	subi	r20, 0xD9	; 217
    11be:	31 fd       	sbrc	r19, 1
    11c0:	40 52       	subi	r20, 0x20	; 32
    11c2:	41 93       	st	Z+, r20
    11c4:	02 d0       	rcall	.+4      	; 0x11ca <__ultoa_invert+0x84>
    11c6:	a9 f7       	brne	.-22     	; 0x11b2 <__ultoa_invert+0x6c>
    11c8:	ea cf       	rjmp	.-44     	; 0x119e <__ultoa_invert+0x58>
    11ca:	b4 e0       	ldi	r27, 0x04	; 4
    11cc:	a6 95       	lsr	r26
    11ce:	97 95       	ror	r25
    11d0:	87 95       	ror	r24
    11d2:	77 95       	ror	r23
    11d4:	67 95       	ror	r22
    11d6:	ba 95       	dec	r27
    11d8:	c9 f7       	brne	.-14     	; 0x11cc <__ultoa_invert+0x86>
    11da:	00 97       	sbiw	r24, 0x00	; 0
    11dc:	61 05       	cpc	r22, r1
    11de:	71 05       	cpc	r23, r1
    11e0:	08 95       	ret
    11e2:	9b 01       	movw	r18, r22
    11e4:	ac 01       	movw	r20, r24
    11e6:	0a 2e       	mov	r0, r26
    11e8:	06 94       	lsr	r0
    11ea:	57 95       	ror	r21
    11ec:	47 95       	ror	r20
    11ee:	37 95       	ror	r19
    11f0:	27 95       	ror	r18
    11f2:	ba 95       	dec	r27
    11f4:	c9 f7       	brne	.-14     	; 0x11e8 <__ultoa_invert+0xa2>
    11f6:	62 0f       	add	r22, r18
    11f8:	73 1f       	adc	r23, r19
    11fa:	84 1f       	adc	r24, r20
    11fc:	95 1f       	adc	r25, r21
    11fe:	a0 1d       	adc	r26, r0
    1200:	08 95       	ret

00001202 <__prologue_saves__>:
    1202:	2f 92       	push	r2
    1204:	3f 92       	push	r3
    1206:	4f 92       	push	r4
    1208:	5f 92       	push	r5
    120a:	6f 92       	push	r6
    120c:	7f 92       	push	r7
    120e:	8f 92       	push	r8
    1210:	9f 92       	push	r9
    1212:	af 92       	push	r10
    1214:	bf 92       	push	r11
    1216:	cf 92       	push	r12
    1218:	df 92       	push	r13
    121a:	ef 92       	push	r14
    121c:	ff 92       	push	r15
    121e:	0f 93       	push	r16
    1220:	1f 93       	push	r17
    1222:	cf 93       	push	r28
    1224:	df 93       	push	r29
    1226:	cd b7       	in	r28, 0x3d	; 61
    1228:	de b7       	in	r29, 0x3e	; 62
    122a:	ca 1b       	sub	r28, r26
    122c:	db 0b       	sbc	r29, r27
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	de bf       	out	0x3e, r29	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	cd bf       	out	0x3d, r28	; 61
    1238:	09 94       	ijmp

0000123a <__epilogue_restores__>:
    123a:	2a 88       	ldd	r2, Y+18	; 0x12
    123c:	39 88       	ldd	r3, Y+17	; 0x11
    123e:	48 88       	ldd	r4, Y+16	; 0x10
    1240:	5f 84       	ldd	r5, Y+15	; 0x0f
    1242:	6e 84       	ldd	r6, Y+14	; 0x0e
    1244:	7d 84       	ldd	r7, Y+13	; 0x0d
    1246:	8c 84       	ldd	r8, Y+12	; 0x0c
    1248:	9b 84       	ldd	r9, Y+11	; 0x0b
    124a:	aa 84       	ldd	r10, Y+10	; 0x0a
    124c:	b9 84       	ldd	r11, Y+9	; 0x09
    124e:	c8 84       	ldd	r12, Y+8	; 0x08
    1250:	df 80       	ldd	r13, Y+7	; 0x07
    1252:	ee 80       	ldd	r14, Y+6	; 0x06
    1254:	fd 80       	ldd	r15, Y+5	; 0x05
    1256:	0c 81       	ldd	r16, Y+4	; 0x04
    1258:	1b 81       	ldd	r17, Y+3	; 0x03
    125a:	aa 81       	ldd	r26, Y+2	; 0x02
    125c:	b9 81       	ldd	r27, Y+1	; 0x01
    125e:	ce 0f       	add	r28, r30
    1260:	d1 1d       	adc	r29, r1
    1262:	0f b6       	in	r0, 0x3f	; 63
    1264:	f8 94       	cli
    1266:	de bf       	out	0x3e, r29	; 62
    1268:	0f be       	out	0x3f, r0	; 63
    126a:	cd bf       	out	0x3d, r28	; 61
    126c:	ed 01       	movw	r28, r26
    126e:	08 95       	ret

00001270 <_exit>:
    1270:	f8 94       	cli

00001272 <__stop_program>:
    1272:	ff cf       	rjmp	.-2      	; 0x1272 <__stop_program>
