
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000004e6  0000057a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800112  00800112  0000058c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e1b  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a22  00000000  00000000  00001523  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000679  00000000  00000000  00001f45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  000025c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052b  00000000  00000000  00002778  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001cc  00000000  00000000  00002ca3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00002e6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 ee       	ldi	r30, 0xE6	; 230
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 31       	cpi	r26, 0x12	; 18
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e1       	ldi	r26, 0x12	; 18
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 31       	cpi	r26, 0x1C	; 28
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 8e 00 	call	0x11c	; 0x11c <main>
  a6:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <can_init>:

static int flag;


void can_init(){
	mcp2515_init();
  ae:	0e 94 7a 00 	call	0xf4	; 0xf4 <mcp2515_init>
	mcp2515_bit_modify(MCP_CANINTE, 0X01, 0x01);		//enables the transmission complete flag (for the interrupt)
  b2:	41 e0       	ldi	r20, 0x01	; 1
  b4:	61 e0       	ldi	r22, 0x01	; 1
  b6:	8b e2       	ldi	r24, 0x2B	; 43
  b8:	0e 94 80 00 	call	0x100	; 0x100 <mcp2515_bit_modify>
	mcp2515_write(MCP_CANCTRL, MODE_LOOPBACK);			//setting the mode to loopback for now
  bc:	60 e4       	ldi	r22, 0x40	; 64
  be:	8f e0       	ldi	r24, 0x0F	; 15
  c0:	0e 94 63 00 	call	0xc6	; 0xc6 <mcp2515_write>
  c4:	08 95       	ret

000000c6 <mcp2515_write>:
uint8_t mcp2515_read_status(){
	SPI_MasterTransmit(MCP_READ_STATUS);
	return SPI_MasterReceive();
	//mcp2515_write(MCP_CANINTF, MCP_READ_STATUS);
	//mcp2515_read(MCP_CANINTF);
}
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	d8 2f       	mov	r29, r24
  cc:	c6 2f       	mov	r28, r22
  ce:	c0 98       	cbi	0x18, 0	; 24
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	0e 94 8a 00 	call	0x114	; 0x114 <SPI_MasterTransmit>
  d6:	8d 2f       	mov	r24, r29
  d8:	0e 94 8a 00 	call	0x114	; 0x114 <SPI_MasterTransmit>
  dc:	8c 2f       	mov	r24, r28
  de:	0e 94 8a 00 	call	0x114	; 0x114 <SPI_MasterTransmit>
  e2:	c0 9a       	sbi	0x18, 0	; 24
  e4:	df 91       	pop	r29
  e6:	cf 91       	pop	r28
  e8:	08 95       	ret

000000ea <mcp2515_reset>:
  ea:	60 e8       	ldi	r22, 0x80	; 128
  ec:	8f e0       	ldi	r24, 0x0F	; 15
  ee:	0e 94 63 00 	call	0xc6	; 0xc6 <mcp2515_write>
  f2:	08 95       	ret

000000f4 <mcp2515_init>:
  f4:	0e 94 84 00 	call	0x108	; 0x108 <SPI_MasterInit>
  f8:	0e 94 75 00 	call	0xea	; 0xea <mcp2515_reset>
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	08 95       	ret

00000100 <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t data_mask, uint8_t data){
	mcp2515_write(address, (data_mask & data));
 100:	64 23       	and	r22, r20
 102:	0e 94 63 00 	call	0xc6	; 0xc6 <mcp2515_write>
 106:	08 95       	ret

00000108 <SPI_MasterInit>:


//Needed for initializing the SPI as a master
void SPI_MasterInit(void){
	// Set MOSI and SCK output, all others input, set CS as output
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB0);
 108:	81 ea       	ldi	r24, 0xA1	; 161
 10a:	87 bb       	out	0x17, r24	; 23
	PORTB = (0<<PB0);
 10c:	18 ba       	out	0x18, r1	; 24
	// Enable SPI, Master, set clock rate fck/16 & select mode 00
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)|(0<<CPOL)|(0<<CPHA);
 10e:	81 e5       	ldi	r24, 0x51	; 81
 110:	8d b9       	out	0x0d, r24	; 13
 112:	08 95       	ret

00000114 <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(char cData){
	// Start transmission 
	SPDR = cData;
 114:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete 
	while(!(SPSR & (1<<SPIF)));
 116:	77 9b       	sbis	0x0e, 7	; 14
 118:	fe cf       	rjmp	.-4      	; 0x116 <SPI_MasterTransmit+0x2>
}
 11a:	08 95       	ret

0000011c <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
	USART_Init(MYUBRR);
 11c:	8f e1       	ldi	r24, 0x1F	; 31
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 a3 00 	call	0x146	; 0x146 <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
 124:	6e ea       	ldi	r22, 0xAE	; 174
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	8a ea       	ldi	r24, 0xAA	; 170
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 b2 00 	call	0x164	; 0x164 <fdevopen>
	
	printf("bla\r\n");
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	91 e0       	ldi	r25, 0x01	; 1
 134:	0e 94 fd 00 	call	0x1fa	; 0x1fa <puts>
	can_init();
 138:	0e 94 57 00 	call	0xae	; 0xae <can_init>
	printf("hello\r\n");
 13c:	8b e0       	ldi	r24, 0x0B	; 11
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	0e 94 fd 00 	call	0x1fa	; 0x1fa <puts>
 144:	ff cf       	rjmp	.-2      	; 0x144 <main+0x28>

00000146 <USART_Init>:
 146:	9c bf       	out	0x3c, r25	; 60
 148:	80 b9       	out	0x00, r24	; 0
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	81 b9       	out	0x01, r24	; 1
 14e:	8e e8       	ldi	r24, 0x8E	; 142
 150:	8c bf       	out	0x3c, r24	; 60
 152:	08 95       	ret

00000154 <USART_Transmit>:
 154:	15 9b       	sbis	0x02, 5	; 2
 156:	fe cf       	rjmp	.-4      	; 0x154 <USART_Transmit>
 158:	83 b9       	out	0x03, r24	; 3
 15a:	08 95       	ret

0000015c <USART_Receive>:
 15c:	17 9b       	sbis	0x02, 7	; 2
 15e:	fe cf       	rjmp	.-4      	; 0x15c <USART_Receive>
 160:	83 b1       	in	r24, 0x03	; 3
 162:	08 95       	ret

00000164 <fdevopen>:
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	00 97       	sbiw	r24, 0x00	; 0
 16e:	31 f4       	brne	.+12     	; 0x17c <fdevopen+0x18>
 170:	61 15       	cp	r22, r1
 172:	71 05       	cpc	r23, r1
 174:	19 f4       	brne	.+6      	; 0x17c <fdevopen+0x18>
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	3a c0       	rjmp	.+116    	; 0x1f0 <fdevopen+0x8c>
 17c:	8b 01       	movw	r16, r22
 17e:	ec 01       	movw	r28, r24
 180:	6e e0       	ldi	r22, 0x0E	; 14
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 2d 01 	call	0x25a	; 0x25a <calloc>
 18c:	fc 01       	movw	r30, r24
 18e:	89 2b       	or	r24, r25
 190:	91 f3       	breq	.-28     	; 0x176 <fdevopen+0x12>
 192:	80 e8       	ldi	r24, 0x80	; 128
 194:	83 83       	std	Z+3, r24	; 0x03
 196:	01 15       	cp	r16, r1
 198:	11 05       	cpc	r17, r1
 19a:	71 f0       	breq	.+28     	; 0x1b8 <fdevopen+0x54>
 19c:	13 87       	std	Z+11, r17	; 0x0b
 19e:	02 87       	std	Z+10, r16	; 0x0a
 1a0:	81 e8       	ldi	r24, 0x81	; 129
 1a2:	83 83       	std	Z+3, r24	; 0x03
 1a4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1a8:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 1ac:	89 2b       	or	r24, r25
 1ae:	21 f4       	brne	.+8      	; 0x1b8 <fdevopen+0x54>
 1b0:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__data_end+0x1>
 1b4:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__data_end>
 1b8:	20 97       	sbiw	r28, 0x00	; 0
 1ba:	c9 f0       	breq	.+50     	; 0x1ee <fdevopen+0x8a>
 1bc:	d1 87       	std	Z+9, r29	; 0x09
 1be:	c0 87       	std	Z+8, r28	; 0x08
 1c0:	83 81       	ldd	r24, Z+3	; 0x03
 1c2:	82 60       	ori	r24, 0x02	; 2
 1c4:	83 83       	std	Z+3, r24	; 0x03
 1c6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
 1ca:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
 1ce:	89 2b       	or	r24, r25
 1d0:	71 f4       	brne	.+28     	; 0x1ee <fdevopen+0x8a>
 1d2:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x3>
 1d6:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end+0x2>
 1da:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x4>
 1de:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x5>
 1e2:	89 2b       	or	r24, r25
 1e4:	21 f4       	brne	.+8      	; 0x1ee <fdevopen+0x8a>
 1e6:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x5>
 1ea:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end+0x4>
 1ee:	cf 01       	movw	r24, r30
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	1f 91       	pop	r17
 1f6:	0f 91       	pop	r16
 1f8:	08 95       	ret

000001fa <puts>:
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end+0x2>
 206:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x3>
 20a:	23 81       	ldd	r18, Z+3	; 0x03
 20c:	21 ff       	sbrs	r18, 1
 20e:	1b c0       	rjmp	.+54     	; 0x246 <puts+0x4c>
 210:	8c 01       	movw	r16, r24
 212:	d0 e0       	ldi	r29, 0x00	; 0
 214:	c0 e0       	ldi	r28, 0x00	; 0
 216:	f8 01       	movw	r30, r16
 218:	81 91       	ld	r24, Z+
 21a:	8f 01       	movw	r16, r30
 21c:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <__data_end+0x2>
 220:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <__data_end+0x3>
 224:	db 01       	movw	r26, r22
 226:	18 96       	adiw	r26, 0x08	; 8
 228:	ed 91       	ld	r30, X+
 22a:	fc 91       	ld	r31, X
 22c:	19 97       	sbiw	r26, 0x09	; 9
 22e:	88 23       	and	r24, r24
 230:	31 f0       	breq	.+12     	; 0x23e <puts+0x44>
 232:	09 95       	icall
 234:	89 2b       	or	r24, r25
 236:	79 f3       	breq	.-34     	; 0x216 <puts+0x1c>
 238:	df ef       	ldi	r29, 0xFF	; 255
 23a:	cf ef       	ldi	r28, 0xFF	; 255
 23c:	ec cf       	rjmp	.-40     	; 0x216 <puts+0x1c>
 23e:	8a e0       	ldi	r24, 0x0A	; 10
 240:	09 95       	icall
 242:	89 2b       	or	r24, r25
 244:	19 f0       	breq	.+6      	; 0x24c <puts+0x52>
 246:	8f ef       	ldi	r24, 0xFF	; 255
 248:	9f ef       	ldi	r25, 0xFF	; 255
 24a:	02 c0       	rjmp	.+4      	; 0x250 <puts+0x56>
 24c:	8d 2f       	mov	r24, r29
 24e:	9c 2f       	mov	r25, r28
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	08 95       	ret

0000025a <calloc>:
 25a:	0f 93       	push	r16
 25c:	1f 93       	push	r17
 25e:	cf 93       	push	r28
 260:	df 93       	push	r29
 262:	86 9f       	mul	r24, r22
 264:	80 01       	movw	r16, r0
 266:	87 9f       	mul	r24, r23
 268:	10 0d       	add	r17, r0
 26a:	96 9f       	mul	r25, r22
 26c:	10 0d       	add	r17, r0
 26e:	11 24       	eor	r1, r1
 270:	c8 01       	movw	r24, r16
 272:	0e 94 49 01 	call	0x292	; 0x292 <malloc>
 276:	ec 01       	movw	r28, r24
 278:	00 97       	sbiw	r24, 0x00	; 0
 27a:	29 f0       	breq	.+10     	; 0x286 <calloc+0x2c>
 27c:	a8 01       	movw	r20, r16
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <memset>
 286:	ce 01       	movw	r24, r28
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	1f 91       	pop	r17
 28e:	0f 91       	pop	r16
 290:	08 95       	ret

00000292 <malloc>:
 292:	0f 93       	push	r16
 294:	1f 93       	push	r17
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	82 30       	cpi	r24, 0x02	; 2
 29c:	91 05       	cpc	r25, r1
 29e:	10 f4       	brcc	.+4      	; 0x2a4 <malloc+0x12>
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__flp>
 2a8:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__flp+0x1>
 2ac:	20 e0       	ldi	r18, 0x00	; 0
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	a0 e0       	ldi	r26, 0x00	; 0
 2b2:	b0 e0       	ldi	r27, 0x00	; 0
 2b4:	30 97       	sbiw	r30, 0x00	; 0
 2b6:	19 f1       	breq	.+70     	; 0x2fe <malloc+0x6c>
 2b8:	40 81       	ld	r20, Z
 2ba:	51 81       	ldd	r21, Z+1	; 0x01
 2bc:	02 81       	ldd	r16, Z+2	; 0x02
 2be:	13 81       	ldd	r17, Z+3	; 0x03
 2c0:	48 17       	cp	r20, r24
 2c2:	59 07       	cpc	r21, r25
 2c4:	c8 f0       	brcs	.+50     	; 0x2f8 <malloc+0x66>
 2c6:	84 17       	cp	r24, r20
 2c8:	95 07       	cpc	r25, r21
 2ca:	69 f4       	brne	.+26     	; 0x2e6 <malloc+0x54>
 2cc:	10 97       	sbiw	r26, 0x00	; 0
 2ce:	31 f0       	breq	.+12     	; 0x2dc <malloc+0x4a>
 2d0:	12 96       	adiw	r26, 0x02	; 2
 2d2:	0c 93       	st	X, r16
 2d4:	12 97       	sbiw	r26, 0x02	; 2
 2d6:	13 96       	adiw	r26, 0x03	; 3
 2d8:	1c 93       	st	X, r17
 2da:	27 c0       	rjmp	.+78     	; 0x32a <malloc+0x98>
 2dc:	00 93 1a 01 	sts	0x011A, r16	; 0x80011a <__flp>
 2e0:	10 93 1b 01 	sts	0x011B, r17	; 0x80011b <__flp+0x1>
 2e4:	22 c0       	rjmp	.+68     	; 0x32a <malloc+0x98>
 2e6:	21 15       	cp	r18, r1
 2e8:	31 05       	cpc	r19, r1
 2ea:	19 f0       	breq	.+6      	; 0x2f2 <malloc+0x60>
 2ec:	42 17       	cp	r20, r18
 2ee:	53 07       	cpc	r21, r19
 2f0:	18 f4       	brcc	.+6      	; 0x2f8 <malloc+0x66>
 2f2:	9a 01       	movw	r18, r20
 2f4:	bd 01       	movw	r22, r26
 2f6:	ef 01       	movw	r28, r30
 2f8:	df 01       	movw	r26, r30
 2fa:	f8 01       	movw	r30, r16
 2fc:	db cf       	rjmp	.-74     	; 0x2b4 <malloc+0x22>
 2fe:	21 15       	cp	r18, r1
 300:	31 05       	cpc	r19, r1
 302:	f9 f0       	breq	.+62     	; 0x342 <malloc+0xb0>
 304:	28 1b       	sub	r18, r24
 306:	39 0b       	sbc	r19, r25
 308:	24 30       	cpi	r18, 0x04	; 4
 30a:	31 05       	cpc	r19, r1
 30c:	80 f4       	brcc	.+32     	; 0x32e <malloc+0x9c>
 30e:	8a 81       	ldd	r24, Y+2	; 0x02
 310:	9b 81       	ldd	r25, Y+3	; 0x03
 312:	61 15       	cp	r22, r1
 314:	71 05       	cpc	r23, r1
 316:	21 f0       	breq	.+8      	; 0x320 <malloc+0x8e>
 318:	fb 01       	movw	r30, r22
 31a:	93 83       	std	Z+3, r25	; 0x03
 31c:	82 83       	std	Z+2, r24	; 0x02
 31e:	04 c0       	rjmp	.+8      	; 0x328 <malloc+0x96>
 320:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__flp+0x1>
 324:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__flp>
 328:	fe 01       	movw	r30, r28
 32a:	32 96       	adiw	r30, 0x02	; 2
 32c:	44 c0       	rjmp	.+136    	; 0x3b6 <malloc+0x124>
 32e:	fe 01       	movw	r30, r28
 330:	e2 0f       	add	r30, r18
 332:	f3 1f       	adc	r31, r19
 334:	81 93       	st	Z+, r24
 336:	91 93       	st	Z+, r25
 338:	22 50       	subi	r18, 0x02	; 2
 33a:	31 09       	sbc	r19, r1
 33c:	39 83       	std	Y+1, r19	; 0x01
 33e:	28 83       	st	Y, r18
 340:	3a c0       	rjmp	.+116    	; 0x3b6 <malloc+0x124>
 342:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 346:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 34a:	23 2b       	or	r18, r19
 34c:	41 f4       	brne	.+16     	; 0x35e <malloc+0xcc>
 34e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 352:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 356:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__brkval+0x1>
 35a:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__brkval>
 35e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 362:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 366:	21 15       	cp	r18, r1
 368:	31 05       	cpc	r19, r1
 36a:	41 f4       	brne	.+16     	; 0x37c <malloc+0xea>
 36c:	2d b7       	in	r18, 0x3d	; 61
 36e:	3e b7       	in	r19, 0x3e	; 62
 370:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 374:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 378:	24 1b       	sub	r18, r20
 37a:	35 0b       	sbc	r19, r21
 37c:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__brkval>
 380:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__brkval+0x1>
 384:	e2 17       	cp	r30, r18
 386:	f3 07       	cpc	r31, r19
 388:	a0 f4       	brcc	.+40     	; 0x3b2 <malloc+0x120>
 38a:	2e 1b       	sub	r18, r30
 38c:	3f 0b       	sbc	r19, r31
 38e:	28 17       	cp	r18, r24
 390:	39 07       	cpc	r19, r25
 392:	78 f0       	brcs	.+30     	; 0x3b2 <malloc+0x120>
 394:	ac 01       	movw	r20, r24
 396:	4e 5f       	subi	r20, 0xFE	; 254
 398:	5f 4f       	sbci	r21, 0xFF	; 255
 39a:	24 17       	cp	r18, r20
 39c:	35 07       	cpc	r19, r21
 39e:	48 f0       	brcs	.+18     	; 0x3b2 <malloc+0x120>
 3a0:	4e 0f       	add	r20, r30
 3a2:	5f 1f       	adc	r21, r31
 3a4:	50 93 19 01 	sts	0x0119, r21	; 0x800119 <__brkval+0x1>
 3a8:	40 93 18 01 	sts	0x0118, r20	; 0x800118 <__brkval>
 3ac:	81 93       	st	Z+, r24
 3ae:	91 93       	st	Z+, r25
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <malloc+0x124>
 3b2:	e0 e0       	ldi	r30, 0x00	; 0
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	cf 01       	movw	r24, r30
 3b8:	df 91       	pop	r29
 3ba:	cf 91       	pop	r28
 3bc:	1f 91       	pop	r17
 3be:	0f 91       	pop	r16
 3c0:	08 95       	ret

000003c2 <free>:
 3c2:	cf 93       	push	r28
 3c4:	df 93       	push	r29
 3c6:	00 97       	sbiw	r24, 0x00	; 0
 3c8:	09 f4       	brne	.+2      	; 0x3cc <free+0xa>
 3ca:	81 c0       	rjmp	.+258    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 3cc:	fc 01       	movw	r30, r24
 3ce:	32 97       	sbiw	r30, 0x02	; 2
 3d0:	13 82       	std	Z+3, r1	; 0x03
 3d2:	12 82       	std	Z+2, r1	; 0x02
 3d4:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <__flp>
 3d8:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <__flp+0x1>
 3dc:	10 97       	sbiw	r26, 0x00	; 0
 3de:	81 f4       	brne	.+32     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e0:	20 81       	ld	r18, Z
 3e2:	31 81       	ldd	r19, Z+1	; 0x01
 3e4:	82 0f       	add	r24, r18
 3e6:	93 1f       	adc	r25, r19
 3e8:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 3ec:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 3f0:	28 17       	cp	r18, r24
 3f2:	39 07       	cpc	r19, r25
 3f4:	51 f5       	brne	.+84     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3f6:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__brkval+0x1>
 3fa:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__brkval>
 3fe:	67 c0       	rjmp	.+206    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 400:	ed 01       	movw	r28, r26
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	ce 17       	cp	r28, r30
 408:	df 07       	cpc	r29, r31
 40a:	40 f4       	brcc	.+16     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40c:	4a 81       	ldd	r20, Y+2	; 0x02
 40e:	5b 81       	ldd	r21, Y+3	; 0x03
 410:	9e 01       	movw	r18, r28
 412:	41 15       	cp	r20, r1
 414:	51 05       	cpc	r21, r1
 416:	f1 f0       	breq	.+60     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 418:	ea 01       	movw	r28, r20
 41a:	f5 cf       	rjmp	.-22     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 41c:	d3 83       	std	Z+3, r29	; 0x03
 41e:	c2 83       	std	Z+2, r28	; 0x02
 420:	40 81       	ld	r20, Z
 422:	51 81       	ldd	r21, Z+1	; 0x01
 424:	84 0f       	add	r24, r20
 426:	95 1f       	adc	r25, r21
 428:	c8 17       	cp	r28, r24
 42a:	d9 07       	cpc	r29, r25
 42c:	59 f4       	brne	.+22     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 42e:	88 81       	ld	r24, Y
 430:	99 81       	ldd	r25, Y+1	; 0x01
 432:	84 0f       	add	r24, r20
 434:	95 1f       	adc	r25, r21
 436:	02 96       	adiw	r24, 0x02	; 2
 438:	91 83       	std	Z+1, r25	; 0x01
 43a:	80 83       	st	Z, r24
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	9b 81       	ldd	r25, Y+3	; 0x03
 440:	93 83       	std	Z+3, r25	; 0x03
 442:	82 83       	std	Z+2, r24	; 0x02
 444:	21 15       	cp	r18, r1
 446:	31 05       	cpc	r19, r1
 448:	29 f4       	brne	.+10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44a:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__flp+0x1>
 44e:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__flp>
 452:	3d c0       	rjmp	.+122    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 454:	e9 01       	movw	r28, r18
 456:	fb 83       	std	Y+3, r31	; 0x03
 458:	ea 83       	std	Y+2, r30	; 0x02
 45a:	49 91       	ld	r20, Y+
 45c:	59 91       	ld	r21, Y+
 45e:	c4 0f       	add	r28, r20
 460:	d5 1f       	adc	r29, r21
 462:	ec 17       	cp	r30, r28
 464:	fd 07       	cpc	r31, r29
 466:	61 f4       	brne	.+24     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 468:	80 81       	ld	r24, Z
 46a:	91 81       	ldd	r25, Z+1	; 0x01
 46c:	84 0f       	add	r24, r20
 46e:	95 1f       	adc	r25, r21
 470:	02 96       	adiw	r24, 0x02	; 2
 472:	e9 01       	movw	r28, r18
 474:	99 83       	std	Y+1, r25	; 0x01
 476:	88 83       	st	Y, r24
 478:	82 81       	ldd	r24, Z+2	; 0x02
 47a:	93 81       	ldd	r25, Z+3	; 0x03
 47c:	9b 83       	std	Y+3, r25	; 0x03
 47e:	8a 83       	std	Y+2, r24	; 0x02
 480:	e0 e0       	ldi	r30, 0x00	; 0
 482:	f0 e0       	ldi	r31, 0x00	; 0
 484:	12 96       	adiw	r26, 0x02	; 2
 486:	8d 91       	ld	r24, X+
 488:	9c 91       	ld	r25, X
 48a:	13 97       	sbiw	r26, 0x03	; 3
 48c:	00 97       	sbiw	r24, 0x00	; 0
 48e:	19 f0       	breq	.+6      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 490:	fd 01       	movw	r30, r26
 492:	dc 01       	movw	r26, r24
 494:	f7 cf       	rjmp	.-18     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 496:	8d 91       	ld	r24, X+
 498:	9c 91       	ld	r25, X
 49a:	11 97       	sbiw	r26, 0x01	; 1
 49c:	9d 01       	movw	r18, r26
 49e:	2e 5f       	subi	r18, 0xFE	; 254
 4a0:	3f 4f       	sbci	r19, 0xFF	; 255
 4a2:	82 0f       	add	r24, r18
 4a4:	93 1f       	adc	r25, r19
 4a6:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 4aa:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 4ae:	28 17       	cp	r18, r24
 4b0:	39 07       	cpc	r19, r25
 4b2:	69 f4       	brne	.+26     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4b4:	30 97       	sbiw	r30, 0x00	; 0
 4b6:	29 f4       	brne	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b8:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__flp+0x1>
 4bc:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__flp>
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c2:	13 82       	std	Z+3, r1	; 0x03
 4c4:	12 82       	std	Z+2, r1	; 0x02
 4c6:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <__brkval+0x1>
 4ca:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <__brkval>
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	08 95       	ret

000004d4 <memset>:
 4d4:	dc 01       	movw	r26, r24
 4d6:	01 c0       	rjmp	.+2      	; 0x4da <memset+0x6>
 4d8:	6d 93       	st	X+, r22
 4da:	41 50       	subi	r20, 0x01	; 1
 4dc:	50 40       	sbci	r21, 0x00	; 0
 4de:	e0 f7       	brcc	.-8      	; 0x4d8 <memset+0x4>
 4e0:	08 95       	ret

000004e2 <_exit>:
 4e2:	f8 94       	cli

000004e4 <__stop_program>:
 4e4:	ff cf       	rjmp	.-2      	; 0x4e4 <__stop_program>
