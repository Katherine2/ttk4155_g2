
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004c0  00000554  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800106  00800106  0000055a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000055a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000058c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000102b  00000000  00000000  000006e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a93  00000000  00000000  0000170b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000079a  00000000  00000000  0000219e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002938  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000544  00000000  00000000  00002b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000330  00000000  00000000  0000307c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000033ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 ec       	ldi	r30, 0xC0	; 192
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 31       	cpi	r26, 0x12	; 18
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  a6:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <can_init>:
	mcp2515_write(MCP_TXB0SIDL, msg.idL);
	mcp2515_write(MCP_TXB0DLC, msg.length);
	mcp2515_write(MCP_TXB0Dm, msg.data);
	mcp2515_request_to_send();
	//printf("transmitting\r\n");
}
  ae:	0e 94 96 00 	call	0x12c	; 0x12c <mcp2515_init>
  b2:	43 e0       	ldi	r20, 0x03	; 3
  b4:	63 e0       	ldi	r22, 0x03	; 3
  b6:	8b e2       	ldi	r24, 0x2B	; 43
  b8:	0e 94 9c 00 	call	0x138	; 0x138 <mcp2515_bit_modify>
  bc:	60 e4       	ldi	r22, 0x40	; 64
  be:	8f e0       	ldi	r24, 0x0F	; 15
  c0:	0e 94 7f 00 	call	0xfe	; 0xfe <mcp2515_write>
  c4:	f8 94       	cli
  c6:	86 b7       	in	r24, 0x36	; 54
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	86 bf       	out	0x36, r24	; 54
  cc:	8b b7       	in	r24, 0x3b	; 59
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	8b bf       	out	0x3b, r24	; 59
  d2:	78 94       	sei
  d4:	08 95       	ret

000000d6 <__vector_1>:

ISR(INT0_vect){
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
  e0:	8f 93       	push	r24
  e2:	9f 93       	push	r25
	//*flag_ptr = 1;
	flag = 1;	
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
  ec:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
}
  f0:	9f 91       	pop	r25
  f2:	8f 91       	pop	r24
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <mcp2515_write>:
uint8_t mcp2515_read_status(){
	SPI_MasterTransmit(MCP_READ_STATUS);
	return SPI_MasterReceive();
	//mcp2515_write(MCP_CANINTF, MCP_READ_STATUS);
	//mcp2515_read(MCP_CANINTF);
}
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	d8 2f       	mov	r29, r24
 104:	c6 2f       	mov	r28, r22
 106:	c4 98       	cbi	0x18, 4	; 24
 108:	82 e0       	ldi	r24, 0x02	; 2
 10a:	0e 94 ab 00 	call	0x156	; 0x156 <SPI_MasterTransmit>
 10e:	8d 2f       	mov	r24, r29
 110:	0e 94 ab 00 	call	0x156	; 0x156 <SPI_MasterTransmit>
 114:	8c 2f       	mov	r24, r28
 116:	0e 94 ab 00 	call	0x156	; 0x156 <SPI_MasterTransmit>
 11a:	c4 9a       	sbi	0x18, 4	; 24
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <mcp2515_reset>:
 122:	60 e8       	ldi	r22, 0x80	; 128
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	0e 94 7f 00 	call	0xfe	; 0xfe <mcp2515_write>
 12a:	08 95       	ret

0000012c <mcp2515_init>:
 12c:	0e 94 a0 00 	call	0x140	; 0x140 <SPI_MasterInit>
 130:	0e 94 91 00 	call	0x122	; 0x122 <mcp2515_reset>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	08 95       	ret

00000138 <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t data_mask, uint8_t data){
	mcp2515_write(address, (data_mask & data));
 138:	64 23       	and	r22, r20
 13a:	0e 94 7f 00 	call	0xfe	; 0xfe <mcp2515_write>
 13e:	08 95       	ret

00000140 <SPI_MasterInit>:


//Needed for initializing the SPI as a master
void SPI_MasterInit(void){
	// Set MOSI and SCK output, all others input, set CS as output
	DDRB |= (1<<PB5)|(1<<PB7)|(1<<PB4);
 140:	87 b3       	in	r24, 0x17	; 23
 142:	80 6b       	ori	r24, 0xB0	; 176
 144:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<PB6);
 146:	be 98       	cbi	0x17, 6	; 23
	PORTB &= ~(1<<PB4);
 148:	c4 98       	cbi	0x18, 4	; 24
	
	// Enable SPI, Master, set clock rate fck/16 & select mode 00
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 14a:	8d b1       	in	r24, 0x0d	; 13
 14c:	81 65       	ori	r24, 0x51	; 81
 14e:	8d b9       	out	0x0d, r24	; 13

	SPCR &= ~(1<<CPOL);
 150:	6b 98       	cbi	0x0d, 3	; 13
	SPCR &= ~(1<<CPHA);
 152:	6a 98       	cbi	0x0d, 2	; 13
 154:	08 95       	ret

00000156 <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(char cData){
	// Start transmission 
	SPDR = cData;
 156:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete 
	while(!(SPSR & (1<<SPIF)));
 158:	77 9b       	sbis	0x0e, 7	; 14
 15a:	fe cf       	rjmp	.-4      	; 0x158 <SPI_MasterTransmit+0x2>
}
 15c:	08 95       	ret

0000015e <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
	USART_Init(MYUBRR);
 15e:	8f e1       	ldi	r24, 0x1F	; 31
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 c0 00 	call	0x180	; 0x180 <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
 166:	6b ec       	ldi	r22, 0xCB	; 203
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	87 ec       	ldi	r24, 0xC7	; 199
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 cf 00 	call	0x19e	; 0x19e <fdevopen>
	
	//printf("\n\nbefore init\r\n");
	can_init();
 172:	0e 94 57 00 	call	0xae	; 0xae <can_init>
		//mcp2515_write(MCP_TXB0Dm, 0b1010);
		/*mcp2515_write(MCP_TXB0SIDH, 0x00);
		mcp2515_write(MCP_TXB0SIDL, 0x00);
		mcp2515_write(MCP_TXB0DLC, 0x08);
		mcp2515_write(MCP_TXB0Dm, 0b1010);
		*/mcp2515_write(MCP_TXB0CTRL, 0x07);
 176:	67 e0       	ldi	r22, 0x07	; 7
 178:	80 e3       	ldi	r24, 0x30	; 48
 17a:	0e 94 7f 00 	call	0xfe	; 0xfe <mcp2515_write>
 17e:	fb cf       	rjmp	.-10     	; 0x176 <main+0x18>

00000180 <USART_Init>:
 180:	9c bf       	out	0x3c, r25	; 60
 182:	80 b9       	out	0x00, r24	; 0
 184:	88 e1       	ldi	r24, 0x18	; 24
 186:	81 b9       	out	0x01, r24	; 1
 188:	8e e8       	ldi	r24, 0x8E	; 142
 18a:	8c bf       	out	0x3c, r24	; 60
 18c:	08 95       	ret

0000018e <USART_Transmit>:
 18e:	15 9b       	sbis	0x02, 5	; 2
 190:	fe cf       	rjmp	.-4      	; 0x18e <USART_Transmit>
 192:	83 b9       	out	0x03, r24	; 3
 194:	08 95       	ret

00000196 <USART_Receive>:
 196:	17 9b       	sbis	0x02, 7	; 2
 198:	fe cf       	rjmp	.-4      	; 0x196 <USART_Receive>
 19a:	83 b1       	in	r24, 0x03	; 3
 19c:	08 95       	ret

0000019e <fdevopen>:
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	31 f4       	brne	.+12     	; 0x1b6 <fdevopen+0x18>
 1aa:	61 15       	cp	r22, r1
 1ac:	71 05       	cpc	r23, r1
 1ae:	19 f4       	brne	.+6      	; 0x1b6 <fdevopen+0x18>
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	3a c0       	rjmp	.+116    	; 0x22a <fdevopen+0x8c>
 1b6:	8b 01       	movw	r16, r22
 1b8:	ec 01       	movw	r28, r24
 1ba:	6e e0       	ldi	r22, 0x0E	; 14
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 1a 01 	call	0x234	; 0x234 <calloc>
 1c6:	fc 01       	movw	r30, r24
 1c8:	89 2b       	or	r24, r25
 1ca:	91 f3       	breq	.-28     	; 0x1b0 <fdevopen+0x12>
 1cc:	80 e8       	ldi	r24, 0x80	; 128
 1ce:	83 83       	std	Z+3, r24	; 0x03
 1d0:	01 15       	cp	r16, r1
 1d2:	11 05       	cpc	r17, r1
 1d4:	71 f0       	breq	.+28     	; 0x1f2 <fdevopen+0x54>
 1d6:	13 87       	std	Z+11, r17	; 0x0b
 1d8:	02 87       	std	Z+10, r16	; 0x0a
 1da:	81 e8       	ldi	r24, 0x81	; 129
 1dc:	83 83       	std	Z+3, r24	; 0x03
 1de:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__iob>
 1e2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__iob+0x1>
 1e6:	89 2b       	or	r24, r25
 1e8:	21 f4       	brne	.+8      	; 0x1f2 <fdevopen+0x54>
 1ea:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__iob+0x1>
 1ee:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__iob>
 1f2:	20 97       	sbiw	r28, 0x00	; 0
 1f4:	c9 f0       	breq	.+50     	; 0x228 <fdevopen+0x8a>
 1f6:	d1 87       	std	Z+9, r29	; 0x09
 1f8:	c0 87       	std	Z+8, r28	; 0x08
 1fa:	83 81       	ldd	r24, Z+3	; 0x03
 1fc:	82 60       	ori	r24, 0x02	; 2
 1fe:	83 83       	std	Z+3, r24	; 0x03
 200:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__iob+0x2>
 204:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__iob+0x3>
 208:	89 2b       	or	r24, r25
 20a:	71 f4       	brne	.+28     	; 0x228 <fdevopen+0x8a>
 20c:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__iob+0x3>
 210:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__iob+0x2>
 214:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__iob+0x4>
 218:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__iob+0x5>
 21c:	89 2b       	or	r24, r25
 21e:	21 f4       	brne	.+8      	; 0x228 <fdevopen+0x8a>
 220:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__iob+0x5>
 224:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__iob+0x4>
 228:	cf 01       	movw	r24, r30
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	1f 91       	pop	r17
 230:	0f 91       	pop	r16
 232:	08 95       	ret

00000234 <calloc>:
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	86 9f       	mul	r24, r22
 23e:	80 01       	movw	r16, r0
 240:	87 9f       	mul	r24, r23
 242:	10 0d       	add	r17, r0
 244:	96 9f       	mul	r25, r22
 246:	10 0d       	add	r17, r0
 248:	11 24       	eor	r1, r1
 24a:	c8 01       	movw	r24, r16
 24c:	0e 94 36 01 	call	0x26c	; 0x26c <malloc>
 250:	ec 01       	movw	r28, r24
 252:	00 97       	sbiw	r24, 0x00	; 0
 254:	29 f0       	breq	.+10     	; 0x260 <calloc+0x2c>
 256:	a8 01       	movw	r20, r16
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	0e 94 57 02 	call	0x4ae	; 0x4ae <memset>
 260:	ce 01       	movw	r24, r28
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	08 95       	ret

0000026c <malloc>:
 26c:	0f 93       	push	r16
 26e:	1f 93       	push	r17
 270:	cf 93       	push	r28
 272:	df 93       	push	r29
 274:	82 30       	cpi	r24, 0x02	; 2
 276:	91 05       	cpc	r25, r1
 278:	10 f4       	brcc	.+4      	; 0x27e <malloc+0x12>
 27a:	82 e0       	ldi	r24, 0x02	; 2
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__flp>
 282:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <__flp+0x1>
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	a0 e0       	ldi	r26, 0x00	; 0
 28c:	b0 e0       	ldi	r27, 0x00	; 0
 28e:	30 97       	sbiw	r30, 0x00	; 0
 290:	19 f1       	breq	.+70     	; 0x2d8 <malloc+0x6c>
 292:	40 81       	ld	r20, Z
 294:	51 81       	ldd	r21, Z+1	; 0x01
 296:	02 81       	ldd	r16, Z+2	; 0x02
 298:	13 81       	ldd	r17, Z+3	; 0x03
 29a:	48 17       	cp	r20, r24
 29c:	59 07       	cpc	r21, r25
 29e:	c8 f0       	brcs	.+50     	; 0x2d2 <malloc+0x66>
 2a0:	84 17       	cp	r24, r20
 2a2:	95 07       	cpc	r25, r21
 2a4:	69 f4       	brne	.+26     	; 0x2c0 <malloc+0x54>
 2a6:	10 97       	sbiw	r26, 0x00	; 0
 2a8:	31 f0       	breq	.+12     	; 0x2b6 <malloc+0x4a>
 2aa:	12 96       	adiw	r26, 0x02	; 2
 2ac:	0c 93       	st	X, r16
 2ae:	12 97       	sbiw	r26, 0x02	; 2
 2b0:	13 96       	adiw	r26, 0x03	; 3
 2b2:	1c 93       	st	X, r17
 2b4:	27 c0       	rjmp	.+78     	; 0x304 <malloc+0x98>
 2b6:	00 93 10 01 	sts	0x0110, r16	; 0x800110 <__flp>
 2ba:	10 93 11 01 	sts	0x0111, r17	; 0x800111 <__flp+0x1>
 2be:	22 c0       	rjmp	.+68     	; 0x304 <malloc+0x98>
 2c0:	21 15       	cp	r18, r1
 2c2:	31 05       	cpc	r19, r1
 2c4:	19 f0       	breq	.+6      	; 0x2cc <malloc+0x60>
 2c6:	42 17       	cp	r20, r18
 2c8:	53 07       	cpc	r21, r19
 2ca:	18 f4       	brcc	.+6      	; 0x2d2 <malloc+0x66>
 2cc:	9a 01       	movw	r18, r20
 2ce:	bd 01       	movw	r22, r26
 2d0:	ef 01       	movw	r28, r30
 2d2:	df 01       	movw	r26, r30
 2d4:	f8 01       	movw	r30, r16
 2d6:	db cf       	rjmp	.-74     	; 0x28e <malloc+0x22>
 2d8:	21 15       	cp	r18, r1
 2da:	31 05       	cpc	r19, r1
 2dc:	f9 f0       	breq	.+62     	; 0x31c <malloc+0xb0>
 2de:	28 1b       	sub	r18, r24
 2e0:	39 0b       	sbc	r19, r25
 2e2:	24 30       	cpi	r18, 0x04	; 4
 2e4:	31 05       	cpc	r19, r1
 2e6:	80 f4       	brcc	.+32     	; 0x308 <malloc+0x9c>
 2e8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ea:	9b 81       	ldd	r25, Y+3	; 0x03
 2ec:	61 15       	cp	r22, r1
 2ee:	71 05       	cpc	r23, r1
 2f0:	21 f0       	breq	.+8      	; 0x2fa <malloc+0x8e>
 2f2:	fb 01       	movw	r30, r22
 2f4:	93 83       	std	Z+3, r25	; 0x03
 2f6:	82 83       	std	Z+2, r24	; 0x02
 2f8:	04 c0       	rjmp	.+8      	; 0x302 <malloc+0x96>
 2fa:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__flp+0x1>
 2fe:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__flp>
 302:	fe 01       	movw	r30, r28
 304:	32 96       	adiw	r30, 0x02	; 2
 306:	44 c0       	rjmp	.+136    	; 0x390 <malloc+0x124>
 308:	fe 01       	movw	r30, r28
 30a:	e2 0f       	add	r30, r18
 30c:	f3 1f       	adc	r31, r19
 30e:	81 93       	st	Z+, r24
 310:	91 93       	st	Z+, r25
 312:	22 50       	subi	r18, 0x02	; 2
 314:	31 09       	sbc	r19, r1
 316:	39 83       	std	Y+1, r19	; 0x01
 318:	28 83       	st	Y, r18
 31a:	3a c0       	rjmp	.+116    	; 0x390 <malloc+0x124>
 31c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__brkval>
 320:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__brkval+0x1>
 324:	23 2b       	or	r18, r19
 326:	41 f4       	brne	.+16     	; 0x338 <malloc+0xcc>
 328:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 32c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 330:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <__brkval+0x1>
 334:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <__brkval>
 338:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 33c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 340:	21 15       	cp	r18, r1
 342:	31 05       	cpc	r19, r1
 344:	41 f4       	brne	.+16     	; 0x356 <malloc+0xea>
 346:	2d b7       	in	r18, 0x3d	; 61
 348:	3e b7       	in	r19, 0x3e	; 62
 34a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 34e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 352:	24 1b       	sub	r18, r20
 354:	35 0b       	sbc	r19, r21
 356:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__brkval>
 35a:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__brkval+0x1>
 35e:	e2 17       	cp	r30, r18
 360:	f3 07       	cpc	r31, r19
 362:	a0 f4       	brcc	.+40     	; 0x38c <malloc+0x120>
 364:	2e 1b       	sub	r18, r30
 366:	3f 0b       	sbc	r19, r31
 368:	28 17       	cp	r18, r24
 36a:	39 07       	cpc	r19, r25
 36c:	78 f0       	brcs	.+30     	; 0x38c <malloc+0x120>
 36e:	ac 01       	movw	r20, r24
 370:	4e 5f       	subi	r20, 0xFE	; 254
 372:	5f 4f       	sbci	r21, 0xFF	; 255
 374:	24 17       	cp	r18, r20
 376:	35 07       	cpc	r19, r21
 378:	48 f0       	brcs	.+18     	; 0x38c <malloc+0x120>
 37a:	4e 0f       	add	r20, r30
 37c:	5f 1f       	adc	r21, r31
 37e:	50 93 0f 01 	sts	0x010F, r21	; 0x80010f <__brkval+0x1>
 382:	40 93 0e 01 	sts	0x010E, r20	; 0x80010e <__brkval>
 386:	81 93       	st	Z+, r24
 388:	91 93       	st	Z+, r25
 38a:	02 c0       	rjmp	.+4      	; 0x390 <malloc+0x124>
 38c:	e0 e0       	ldi	r30, 0x00	; 0
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	cf 01       	movw	r24, r30
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
 398:	0f 91       	pop	r16
 39a:	08 95       	ret

0000039c <free>:
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	00 97       	sbiw	r24, 0x00	; 0
 3a2:	09 f4       	brne	.+2      	; 0x3a6 <free+0xa>
 3a4:	81 c0       	rjmp	.+258    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 3a6:	fc 01       	movw	r30, r24
 3a8:	32 97       	sbiw	r30, 0x02	; 2
 3aa:	13 82       	std	Z+3, r1	; 0x03
 3ac:	12 82       	std	Z+2, r1	; 0x02
 3ae:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <__flp>
 3b2:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <__flp+0x1>
 3b6:	10 97       	sbiw	r26, 0x00	; 0
 3b8:	81 f4       	brne	.+32     	; 0x3da <free+0x3e>
 3ba:	20 81       	ld	r18, Z
 3bc:	31 81       	ldd	r19, Z+1	; 0x01
 3be:	82 0f       	add	r24, r18
 3c0:	93 1f       	adc	r25, r19
 3c2:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__brkval>
 3c6:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__brkval+0x1>
 3ca:	28 17       	cp	r18, r24
 3cc:	39 07       	cpc	r19, r25
 3ce:	51 f5       	brne	.+84     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3d0:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__brkval+0x1>
 3d4:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__brkval>
 3d8:	67 c0       	rjmp	.+206    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 3da:	ed 01       	movw	r28, r26
 3dc:	20 e0       	ldi	r18, 0x00	; 0
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	ce 17       	cp	r28, r30
 3e2:	df 07       	cpc	r29, r31
 3e4:	40 f4       	brcc	.+16     	; 0x3f6 <free+0x5a>
 3e6:	4a 81       	ldd	r20, Y+2	; 0x02
 3e8:	5b 81       	ldd	r21, Y+3	; 0x03
 3ea:	9e 01       	movw	r18, r28
 3ec:	41 15       	cp	r20, r1
 3ee:	51 05       	cpc	r21, r1
 3f0:	f1 f0       	breq	.+60     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3f2:	ea 01       	movw	r28, r20
 3f4:	f5 cf       	rjmp	.-22     	; 0x3e0 <free+0x44>
 3f6:	d3 83       	std	Z+3, r29	; 0x03
 3f8:	c2 83       	std	Z+2, r28	; 0x02
 3fa:	40 81       	ld	r20, Z
 3fc:	51 81       	ldd	r21, Z+1	; 0x01
 3fe:	84 0f       	add	r24, r20
 400:	95 1f       	adc	r25, r21
 402:	c8 17       	cp	r28, r24
 404:	d9 07       	cpc	r29, r25
 406:	59 f4       	brne	.+22     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 408:	88 81       	ld	r24, Y
 40a:	99 81       	ldd	r25, Y+1	; 0x01
 40c:	84 0f       	add	r24, r20
 40e:	95 1f       	adc	r25, r21
 410:	02 96       	adiw	r24, 0x02	; 2
 412:	91 83       	std	Z+1, r25	; 0x01
 414:	80 83       	st	Z, r24
 416:	8a 81       	ldd	r24, Y+2	; 0x02
 418:	9b 81       	ldd	r25, Y+3	; 0x03
 41a:	93 83       	std	Z+3, r25	; 0x03
 41c:	82 83       	std	Z+2, r24	; 0x02
 41e:	21 15       	cp	r18, r1
 420:	31 05       	cpc	r19, r1
 422:	29 f4       	brne	.+10     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 424:	f0 93 11 01 	sts	0x0111, r31	; 0x800111 <__flp+0x1>
 428:	e0 93 10 01 	sts	0x0110, r30	; 0x800110 <__flp>
 42c:	3d c0       	rjmp	.+122    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 42e:	e9 01       	movw	r28, r18
 430:	fb 83       	std	Y+3, r31	; 0x03
 432:	ea 83       	std	Y+2, r30	; 0x02
 434:	49 91       	ld	r20, Y+
 436:	59 91       	ld	r21, Y+
 438:	c4 0f       	add	r28, r20
 43a:	d5 1f       	adc	r29, r21
 43c:	ec 17       	cp	r30, r28
 43e:	fd 07       	cpc	r31, r29
 440:	61 f4       	brne	.+24     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 442:	80 81       	ld	r24, Z
 444:	91 81       	ldd	r25, Z+1	; 0x01
 446:	84 0f       	add	r24, r20
 448:	95 1f       	adc	r25, r21
 44a:	02 96       	adiw	r24, 0x02	; 2
 44c:	e9 01       	movw	r28, r18
 44e:	99 83       	std	Y+1, r25	; 0x01
 450:	88 83       	st	Y, r24
 452:	82 81       	ldd	r24, Z+2	; 0x02
 454:	93 81       	ldd	r25, Z+3	; 0x03
 456:	9b 83       	std	Y+3, r25	; 0x03
 458:	8a 83       	std	Y+2, r24	; 0x02
 45a:	e0 e0       	ldi	r30, 0x00	; 0
 45c:	f0 e0       	ldi	r31, 0x00	; 0
 45e:	12 96       	adiw	r26, 0x02	; 2
 460:	8d 91       	ld	r24, X+
 462:	9c 91       	ld	r25, X
 464:	13 97       	sbiw	r26, 0x03	; 3
 466:	00 97       	sbiw	r24, 0x00	; 0
 468:	19 f0       	breq	.+6      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46a:	fd 01       	movw	r30, r26
 46c:	dc 01       	movw	r26, r24
 46e:	f7 cf       	rjmp	.-18     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 470:	8d 91       	ld	r24, X+
 472:	9c 91       	ld	r25, X
 474:	11 97       	sbiw	r26, 0x01	; 1
 476:	9d 01       	movw	r18, r26
 478:	2e 5f       	subi	r18, 0xFE	; 254
 47a:	3f 4f       	sbci	r19, 0xFF	; 255
 47c:	82 0f       	add	r24, r18
 47e:	93 1f       	adc	r25, r19
 480:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__brkval>
 484:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__brkval+0x1>
 488:	28 17       	cp	r18, r24
 48a:	39 07       	cpc	r19, r25
 48c:	69 f4       	brne	.+26     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 48e:	30 97       	sbiw	r30, 0x00	; 0
 490:	29 f4       	brne	.+10     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 492:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__flp+0x1>
 496:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__flp>
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49c:	13 82       	std	Z+3, r1	; 0x03
 49e:	12 82       	std	Z+2, r1	; 0x02
 4a0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <__brkval+0x1>
 4a4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <__brkval>
 4a8:	df 91       	pop	r29
 4aa:	cf 91       	pop	r28
 4ac:	08 95       	ret

000004ae <memset>:
 4ae:	dc 01       	movw	r26, r24
 4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <memset+0x6>
 4b2:	6d 93       	st	X+, r22
 4b4:	41 50       	subi	r20, 0x01	; 1
 4b6:	50 40       	sbci	r21, 0x00	; 0
 4b8:	e0 f7       	brcc	.-8      	; 0x4b2 <memset+0x4>
 4ba:	08 95       	ret

000004bc <_exit>:
 4bc:	f8 94       	cli

000004be <__stop_program>:
 4be:	ff cf       	rjmp	.-2      	; 0x4be <__stop_program>
