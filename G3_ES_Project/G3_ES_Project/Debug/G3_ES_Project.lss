
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  0000177c  00001810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000177c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800194  00800194  000018a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001900  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  0000193c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b75  00000000  00000000  00001aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df1  00000000  00000000  00003621  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf2  00000000  00000000  00004412  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000324  00000000  00000000  00005104  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062f  00000000  00000000  00005428  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d20  00000000  00000000  00005a57  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  00006777  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__divsf3_pse+0xc>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ec e7       	ldi	r30, 0x7C	; 124
     37c:	f7 e1       	ldi	r31, 0x17	; 23
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a4 39       	cpi	r26, 0x94	; 148
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a4 e9       	ldi	r26, 0x94	; 148
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a4 3a       	cpi	r26, 0xA4	; 164
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <main>
     39e:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <clock_timer>:
}

void adc_init(){
	//setting the ADC CS to low to select it (active low) from the NAND gates
	DDRC |= (1 << PC2);
	PORTC = 0x04;
     3a6:	8c 9a       	sbi	0x11, 4	; 17
     3a8:	eb e8       	ldi	r30, 0x8B	; 139
     3aa:	f0 e0       	ldi	r31, 0x00	; 0
     3ac:	80 81       	ld	r24, Z
     3ae:	88 64       	ori	r24, 0x48	; 72
     3b0:	80 83       	st	Z, r24
     3b2:	ea e8       	ldi	r30, 0x8A	; 138
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	80 81       	ld	r24, Z
     3b8:	89 60       	ori	r24, 0x09	; 9
     3ba:	80 83       	st	Z, r24
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     3c2:	08 95       	ret

000003c4 <adc_read>:
//volatile
uint8_t adc_read(uint8_t channel){	
	uint8_t adc_channel;
	
	//select which channel to write to
	if (channel==0){
     3c4:	88 23       	and	r24, r24
     3c6:	41 f0       	breq	.+16     	; 0x3d8 <adc_read+0x14>
		 adc_channel = 0b10000000;
	}
	else if (channel==1){
     3c8:	81 30       	cpi	r24, 0x01	; 1
     3ca:	41 f0       	breq	.+16     	; 0x3dc <adc_read+0x18>
		adc_channel = 0b10000001;
	}
	else if (channel==2){
     3cc:	82 30       	cpi	r24, 0x02	; 2
     3ce:	41 f0       	breq	.+16     	; 0x3e0 <adc_read+0x1c>
		adc_channel = 0b10000010;
	}
	else if (channel==3){
     3d0:	83 30       	cpi	r24, 0x03	; 3
     3d2:	39 f4       	brne	.+14     	; 0x3e2 <adc_read+0x1e>
		adc_channel = 0b10000011;
     3d4:	93 e8       	ldi	r25, 0x83	; 131
     3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <adc_read+0x1e>
uint8_t adc_read(uint8_t channel){	
	uint8_t adc_channel;
	
	//select which channel to write to
	if (channel==0){
		 adc_channel = 0b10000000;
     3d8:	90 e8       	ldi	r25, 0x80	; 128
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <adc_read+0x1e>
	}
	else if (channel==1){
		adc_channel = 0b10000001;
     3dc:	91 e8       	ldi	r25, 0x81	; 129
     3de:	01 c0       	rjmp	.+2      	; 0x3e2 <adc_read+0x1e>
	}
	else if (channel==2){
		adc_channel = 0b10000010;
     3e0:	92 e8       	ldi	r25, 0x82	; 130
	}
	else if (channel==3){
		adc_channel = 0b10000011;
	}
	adc_reg[0] = adc_channel;
     3e2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <adc_reg>
     3e6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <adc_reg+0x1>
     3ea:	90 83       	st	Z, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ec:	81 e4       	ldi	r24, 0x41	; 65
     3ee:	8a 95       	dec	r24
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <adc_read+0x2a>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <adc_read+0x30>
	_delay_us(40);
	uint8_t adc_val = adc_reg[0];
     3f4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <adc_reg>
     3f8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <adc_reg+0x1>
     3fc:	80 81       	ld	r24, Z
	
	return adc_val;
}
     3fe:	08 95       	ret

00000400 <joystick_init>:
#include "adc.h"
#include "joystick.h"

//enum position{Left, Right, Up, Down, Neutral};

int joystick_init(uint8_t channel, int samples){
     400:	df 92       	push	r13
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	d8 2e       	mov	r13, r24
     410:	7b 01       	movw	r14, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     412:	2f ef       	ldi	r18, 0xFF	; 255
     414:	8f e7       	ldi	r24, 0x7F	; 127
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	21 50       	subi	r18, 0x01	; 1
     41a:	80 40       	sbci	r24, 0x00	; 0
     41c:	90 40       	sbci	r25, 0x00	; 0
     41e:	e1 f7       	brne	.-8      	; 0x418 <joystick_init+0x18>
     420:	00 c0       	rjmp	.+0      	; 0x422 <joystick_init+0x22>
     422:	00 c0       	rjmp	.+0      	; 0x424 <joystick_init+0x24>
	uint8_t pos = 0;
	int center = 0;
	_delay_ms(100);
	for(int i=0; i<samples; i++){
     424:	16 16       	cp	r1, r22
     426:	17 06       	cpc	r1, r23
     428:	74 f4       	brge	.+28     	; 0x446 <joystick_init+0x46>
     42a:	c0 e0       	ldi	r28, 0x00	; 0
     42c:	d0 e0       	ldi	r29, 0x00	; 0
     42e:	00 e0       	ldi	r16, 0x00	; 0
     430:	10 e0       	ldi	r17, 0x00	; 0
		pos = adc_read(channel);
     432:	8d 2d       	mov	r24, r13
     434:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <adc_read>
		//printf("value: %d\r\n", pos);
		center = center + (int)pos;
     438:	08 0f       	add	r16, r24
     43a:	11 1d       	adc	r17, r1

int joystick_init(uint8_t channel, int samples){
	uint8_t pos = 0;
	int center = 0;
	_delay_ms(100);
	for(int i=0; i<samples; i++){
     43c:	21 96       	adiw	r28, 0x01	; 1
     43e:	ec 16       	cp	r14, r28
     440:	fd 06       	cpc	r15, r29
     442:	b9 f7       	brne	.-18     	; 0x432 <joystick_init+0x32>
     444:	02 c0       	rjmp	.+4      	; 0x44a <joystick_init+0x4a>

//enum position{Left, Right, Up, Down, Neutral};

int joystick_init(uint8_t channel, int samples){
	uint8_t pos = 0;
	int center = 0;
     446:	00 e0       	ldi	r16, 0x00	; 0
     448:	10 e0       	ldi	r17, 0x00	; 0
		//printf("value: %d\r\n", pos);
		center = center + (int)pos;
	}
	//printf("sum: %d\r\n", center);
	center = center/samples;
	return center;
     44a:	c8 01       	movw	r24, r16
     44c:	b7 01       	movw	r22, r14
     44e:	0e 94 27 07 	call	0xe4e	; 0xe4e <__divmodhi4>
     452:	cb 01       	movw	r24, r22
}
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	1f 91       	pop	r17
     45a:	0f 91       	pop	r16
     45c:	ff 90       	pop	r15
     45e:	ef 90       	pop	r14
     460:	df 90       	pop	r13
     462:	08 95       	ret

00000464 <normalize_output_joystick>:

int normalize_output_joystick(uint8_t value, int center){
     464:	cf 92       	push	r12
     466:	df 92       	push	r13
     468:	ef 92       	push	r14
     46a:	ff 92       	push	r15
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	eb 01       	movw	r28, r22
	int position = 0;
	if((int)value <= center){
     472:	28 2f       	mov	r18, r24
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	62 17       	cp	r22, r18
     478:	73 07       	cpc	r23, r19
     47a:	24 f1       	brlt	.+72     	; 0x4c4 <normalize_output_joystick+0x60>
		position = (((float)value/(float)center)*100)-100;
     47c:	68 2f       	mov	r22, r24
     47e:	70 e0       	ldi	r23, 0x00	; 0
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 2c 06 	call	0xc58	; 0xc58 <__floatunsisf>
     488:	6b 01       	movw	r12, r22
     48a:	7c 01       	movw	r14, r24
     48c:	be 01       	movw	r22, r28
     48e:	dd 0f       	add	r29, r29
     490:	88 0b       	sbc	r24, r24
     492:	99 0b       	sbc	r25, r25
     494:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__floatsisf>
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
     49c:	c7 01       	movw	r24, r14
     49e:	b6 01       	movw	r22, r12
     4a0:	0e 94 84 05 	call	0xb08	; 0xb08 <__divsf3>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	48 ec       	ldi	r20, 0xC8	; 200
     4aa:	52 e4       	ldi	r21, 0x42	; 66
     4ac:	0e 94 ba 06 	call	0xd74	; 0xd74 <__mulsf3>
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	48 ec       	ldi	r20, 0xC8	; 200
     4b6:	52 e4       	ldi	r21, 0x42	; 66
     4b8:	0e 94 17 05 	call	0xa2e	; 0xa2e <__subsf3>
     4bc:	0e 94 f6 05 	call	0xbec	; 0xbec <__fixsfsi>
     4c0:	cb 01       	movw	r24, r22
     4c2:	33 c0       	rjmp	.+102    	; 0x52a <__stack+0x2b>
	}
	else if((int)value > center){
		position = ((((255-(float)value)/(255-(float) center))*(-100)))+100;
     4c4:	68 2f       	mov	r22, r24
     4c6:	70 e0       	ldi	r23, 0x00	; 0
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	0e 94 2c 06 	call	0xc58	; 0xc58 <__floatunsisf>
     4d0:	9b 01       	movw	r18, r22
     4d2:	ac 01       	movw	r20, r24
     4d4:	60 e0       	ldi	r22, 0x00	; 0
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	8f e7       	ldi	r24, 0x7F	; 127
     4da:	93 e4       	ldi	r25, 0x43	; 67
     4dc:	0e 94 17 05 	call	0xa2e	; 0xa2e <__subsf3>
     4e0:	6b 01       	movw	r12, r22
     4e2:	7c 01       	movw	r14, r24
     4e4:	be 01       	movw	r22, r28
     4e6:	dd 0f       	add	r29, r29
     4e8:	88 0b       	sbc	r24, r24
     4ea:	99 0b       	sbc	r25, r25
     4ec:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__floatsisf>
     4f0:	9b 01       	movw	r18, r22
     4f2:	ac 01       	movw	r20, r24
     4f4:	60 e0       	ldi	r22, 0x00	; 0
     4f6:	70 e0       	ldi	r23, 0x00	; 0
     4f8:	8f e7       	ldi	r24, 0x7F	; 127
     4fa:	93 e4       	ldi	r25, 0x43	; 67
     4fc:	0e 94 17 05 	call	0xa2e	; 0xa2e <__subsf3>
     500:	9b 01       	movw	r18, r22
     502:	ac 01       	movw	r20, r24
     504:	c7 01       	movw	r24, r14
     506:	b6 01       	movw	r22, r12
     508:	0e 94 84 05 	call	0xb08	; 0xb08 <__divsf3>
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	48 ec       	ldi	r20, 0xC8	; 200
     512:	52 ec       	ldi	r21, 0xC2	; 194
     514:	0e 94 ba 06 	call	0xd74	; 0xd74 <__mulsf3>
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	48 ec       	ldi	r20, 0xC8	; 200
     51e:	52 e4       	ldi	r21, 0x42	; 66
     520:	0e 94 18 05 	call	0xa30	; 0xa30 <__addsf3>
     524:	0e 94 f6 05 	call	0xbec	; 0xbec <__fixsfsi>
     528:	cb 01       	movw	r24, r22
	}
	
	return position;
}
     52a:	df 91       	pop	r29
     52c:	cf 91       	pop	r28
     52e:	ff 90       	pop	r15
     530:	ef 90       	pop	r14
     532:	df 90       	pop	r13
     534:	cf 90       	pop	r12
     536:	08 95       	ret

00000538 <display_main_menu>:
	display_main_menu();
	navigate_menu();
}

void display_main_menu(){
	OLED_clear();
     538:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <OLED_clear>
	OLED_pos(0,0);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print('>');
     544:	8e e3       	ldi	r24, 0x3E	; 62
     546:	0e 94 9f 04 	call	0x93e	; 0x93e <OLED_print>
	OLED_pos(0, 15);
     54a:	6f e0       	ldi	r22, 0x0F	; 15
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print_string("Start Game");
     552:	8c e0       	ldi	r24, 0x0C	; 12
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
	OLED_pos(2, 15);
     55a:	6f e0       	ldi	r22, 0x0F	; 15
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print_string("Brightness");
     562:	87 e1       	ldi	r24, 0x17	; 23
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
	OLED_pos(4, 15);
     56a:	6f e0       	ldi	r22, 0x0F	; 15
     56c:	84 e0       	ldi	r24, 0x04	; 4
     56e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print_string("High Scores");
     572:	82 e2       	ldi	r24, 0x22	; 34
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
	OLED_pos(6, 15);
     57a:	6f e0       	ldi	r22, 0x0F	; 15
     57c:	86 e0       	ldi	r24, 0x06	; 6
     57e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print_string("Calibrate");
     582:	8e e2       	ldi	r24, 0x2E	; 46
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
	currentRow = 0;
     58a:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <currentRow+0x1>
     58e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <currentRow>
     592:	08 95       	ret

00000594 <select_item>:
			_delay_ms(1000);
		}
	}
}

void select_item(int row){
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	ec 01       	movw	r28, r24
	OLED_clear();
     59a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <OLED_clear>
	printf("row %d\r\n", row);	
     59e:	df 93       	push	r29
     5a0:	cf 93       	push	r28
     5a2:	8a e8       	ldi	r24, 0x8A	; 138
     5a4:	91 e0       	ldi	r25, 0x01	; 1
     5a6:	9f 93       	push	r25
     5a8:	8f 93       	push	r24
     5aa:	0e 94 9a 07 	call	0xf34	; 0xf34 <printf>
	if(row == 0){
     5ae:	0f 90       	pop	r0
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	20 97       	sbiw	r28, 0x00	; 0
     5b8:	49 f4       	brne	.+18     	; 0x5cc <select_item+0x38>
		//start game
		OLED_pos(0,15);
     5ba:	6f e0       	ldi	r22, 0x0F	; 15
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
		OLED_print_string("Ping pong");
     5c2:	88 e3       	ldi	r24, 0x38	; 56
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
     5ca:	22 c0       	rjmp	.+68     	; 0x610 <select_item+0x7c>
	}
	else if (row == 2){
     5cc:	c2 30       	cpi	r28, 0x02	; 2
     5ce:	d1 05       	cpc	r29, r1
     5d0:	49 f4       	brne	.+18     	; 0x5e4 <select_item+0x50>
		//change brightness
		OLED_pos(0,15);
     5d2:	6f e0       	ldi	r22, 0x0F	; 15
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
		OLED_print_string("The sun");
     5da:	82 e4       	ldi	r24, 0x42	; 66
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
     5e2:	16 c0       	rjmp	.+44     	; 0x610 <select_item+0x7c>
	}
	else if (row == 4){
     5e4:	c4 30       	cpi	r28, 0x04	; 4
     5e6:	d1 05       	cpc	r29, r1
     5e8:	49 f4       	brne	.+18     	; 0x5fc <select_item+0x68>
		//High score
		OLED_pos(0,15);
     5ea:	6f e0       	ldi	r22, 0x0F	; 15
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
		OLED_print_string("You win!!");
     5f2:	8a e4       	ldi	r24, 0x4A	; 74
     5f4:	91 e0       	ldi	r25, 0x01	; 1
     5f6:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
     5fa:	0a c0       	rjmp	.+20     	; 0x610 <select_item+0x7c>
	}
	else if (row == 6){
     5fc:	26 97       	sbiw	r28, 0x06	; 6
     5fe:	41 f4       	brne	.+16     	; 0x610 <select_item+0x7c>
		//calibrate joystick
		OLED_pos(0,15);
     600:	6f e0       	ldi	r22, 0x0F	; 15
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
		OLED_print_string("Calibrating...");
     608:	84 e5       	ldi	r24, 0x54	; 84
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	0e 94 df 04 	call	0x9be	; 0x9be <OLED_print_string>
	}
	
	navigate_menu();
     610:	0e 94 0d 03 	call	0x61a	; 0x61a <navigate_menu>
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	08 95       	ret

0000061a <navigate_menu>:
	OLED_print_string("Calibrate");
	currentRow = 0;
}

void navigate_menu(){
	clock_timer();
     61a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <clock_timer>
	//int currentRow = 0;
	//int prevPosX = 0;	//neutral
	printf("current row before while: %d\r\n", currentRow);
     61e:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <currentRow+0x1>
     622:	8f 93       	push	r24
     624:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <currentRow>
     628:	8f 93       	push	r24
     62a:	83 e6       	ldi	r24, 0x63	; 99
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	9f 93       	push	r25
     630:	8f 93       	push	r24
     632:	0e 94 9a 07 	call	0xf34	; 0xf34 <printf>
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
			display_main_menu();
			_delay_ms(1000);
		}
		
		if(normalize_output_joystick(x, centerX) > 90){
			printf("current row %d\r\n", currentRow);
     63e:	0f 2e       	mov	r0, r31
     640:	f2 e8       	ldi	r31, 0x82	; 130
     642:	ef 2e       	mov	r14, r31
     644:	f1 e0       	ldi	r31, 0x01	; 1
     646:	ff 2e       	mov	r15, r31
     648:	f0 2d       	mov	r31, r0
			select_item(currentRow);
			_delay_ms(1000);
		}
		
		if(normalize_output_joystick(y, centerY) > 90){
			OLED_clear_position(currentRow, 0);
     64a:	08 e9       	ldi	r16, 0x98	; 152
     64c:	11 e0       	ldi	r17, 0x01	; 1
			currentRow = currentRow - 2;
			if(currentRow < 0){
				currentRow = 6;
     64e:	0f 2e       	mov	r0, r31
     650:	f6 e0       	ldi	r31, 0x06	; 6
     652:	cf 2e       	mov	r12, r31
     654:	d1 2c       	mov	r13, r1
     656:	f0 2d       	mov	r31, r0
	clock_timer();
	//int currentRow = 0;
	//int prevPosX = 0;	//neutral
	printf("current row before while: %d\r\n", currentRow);
	while(1){
		uint8_t x = adc_read(0);
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <adc_read>
     660:	d8 2f       	mov	r29, r24
		uint8_t y = adc_read(1);
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <adc_read>
     66a:	c8 2f       	mov	r28, r24
		//printf("x position: %d\r\n", normalize_output_joystick(x, centerX));
		if(normalize_output_joystick(x, centerX) < -90){
     66c:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <centerX>
     670:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <centerX+0x1>
     674:	8d 2f       	mov	r24, r29
     676:	0e 94 32 02 	call	0x464	; 0x464 <normalize_output_joystick>
     67a:	86 3a       	cpi	r24, 0xA6	; 166
     67c:	9f 4f       	sbci	r25, 0xFF	; 255
     67e:	5c f4       	brge	.+22     	; 0x696 <navigate_menu+0x7c>
			//back
			//printf("left\r\n");
			display_main_menu();
     680:	0e 94 9c 02 	call	0x538	; 0x538 <display_main_menu>
     684:	8f e3       	ldi	r24, 0x3F	; 63
     686:	9d e0       	ldi	r25, 0x0D	; 13
     688:	e3 e0       	ldi	r30, 0x03	; 3
     68a:	81 50       	subi	r24, 0x01	; 1
     68c:	90 40       	sbci	r25, 0x00	; 0
     68e:	e0 40       	sbci	r30, 0x00	; 0
     690:	e1 f7       	brne	.-8      	; 0x68a <navigate_menu+0x70>
     692:	00 c0       	rjmp	.+0      	; 0x694 <navigate_menu+0x7a>
     694:	00 00       	nop
			_delay_ms(1000);
		}
		
		if(normalize_output_joystick(x, centerX) > 90){
     696:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <centerX>
     69a:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <centerX+0x1>
     69e:	8d 2f       	mov	r24, r29
     6a0:	0e 94 32 02 	call	0x464	; 0x464 <normalize_output_joystick>
     6a4:	8b 35       	cpi	r24, 0x5B	; 91
     6a6:	91 05       	cpc	r25, r1
     6a8:	ec f0       	brlt	.+58     	; 0x6e4 <navigate_menu+0xca>
			printf("current row %d\r\n", currentRow);
     6aa:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <currentRow+0x1>
     6ae:	8f 93       	push	r24
     6b0:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <currentRow>
     6b4:	8f 93       	push	r24
     6b6:	ff 92       	push	r15
     6b8:	ef 92       	push	r14
     6ba:	0e 94 9a 07 	call	0xf34	; 0xf34 <printf>
			select_item(currentRow);
     6be:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <currentRow>
     6c2:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <currentRow+0x1>
     6c6:	0e 94 ca 02 	call	0x594	; 0x594 <select_item>
     6ca:	ff e3       	ldi	r31, 0x3F	; 63
     6cc:	2d e0       	ldi	r18, 0x0D	; 13
     6ce:	83 e0       	ldi	r24, 0x03	; 3
     6d0:	f1 50       	subi	r31, 0x01	; 1
     6d2:	20 40       	sbci	r18, 0x00	; 0
     6d4:	80 40       	sbci	r24, 0x00	; 0
     6d6:	e1 f7       	brne	.-8      	; 0x6d0 <navigate_menu+0xb6>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <navigate_menu+0xc0>
     6da:	00 00       	nop
     6dc:	0f 90       	pop	r0
     6de:	0f 90       	pop	r0
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
			_delay_ms(1000);
		}
		
		if(normalize_output_joystick(y, centerY) > 90){
     6e4:	60 91 94 01 	lds	r22, 0x0194	; 0x800194 <__data_end>
     6e8:	70 91 95 01 	lds	r23, 0x0195	; 0x800195 <__data_end+0x1>
     6ec:	8c 2f       	mov	r24, r28
     6ee:	0e 94 32 02 	call	0x464	; 0x464 <normalize_output_joystick>
     6f2:	8b 35       	cpi	r24, 0x5B	; 91
     6f4:	91 05       	cpc	r25, r1
     6f6:	2c f1       	brlt	.+74     	; 0x742 <navigate_menu+0x128>
			OLED_clear_position(currentRow, 0);
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	f8 01       	movw	r30, r16
     6fc:	80 81       	ld	r24, Z
     6fe:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <OLED_clear_position>
			currentRow = currentRow - 2;
     702:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <currentRow>
     706:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <currentRow+0x1>
     70a:	02 97       	sbiw	r24, 0x02	; 2
			if(currentRow < 0){
     70c:	2a f0       	brmi	.+10     	; 0x718 <navigate_menu+0xfe>
			_delay_ms(1000);
		}
		
		if(normalize_output_joystick(y, centerY) > 90){
			OLED_clear_position(currentRow, 0);
			currentRow = currentRow - 2;
     70e:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <currentRow+0x1>
     712:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <currentRow>
     716:	04 c0       	rjmp	.+8      	; 0x720 <navigate_menu+0x106>
			if(currentRow < 0){
				currentRow = 6;
     718:	d0 92 99 01 	sts	0x0199, r13	; 0x800199 <currentRow+0x1>
     71c:	c0 92 98 01 	sts	0x0198, r12	; 0x800198 <currentRow>
			}
			//printf("current row after moving up: %d\r\n", currentRow);
			OLED_pos(currentRow, 0);
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	f8 01       	movw	r30, r16
     724:	80 81       	ld	r24, Z
     726:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
			OLED_print('>');
     72a:	8e e3       	ldi	r24, 0x3E	; 62
     72c:	0e 94 9f 04 	call	0x93e	; 0x93e <OLED_print>
     730:	ff e3       	ldi	r31, 0x3F	; 63
     732:	2d e0       	ldi	r18, 0x0D	; 13
     734:	83 e0       	ldi	r24, 0x03	; 3
     736:	f1 50       	subi	r31, 0x01	; 1
     738:	20 40       	sbci	r18, 0x00	; 0
     73a:	80 40       	sbci	r24, 0x00	; 0
     73c:	e1 f7       	brne	.-8      	; 0x736 <navigate_menu+0x11c>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <navigate_menu+0x126>
     740:	00 00       	nop
			_delay_ms(1000);
		}
		if(normalize_output_joystick(y, centerY) < -90){
     742:	60 91 94 01 	lds	r22, 0x0194	; 0x800194 <__data_end>
     746:	70 91 95 01 	lds	r23, 0x0195	; 0x800195 <__data_end+0x1>
     74a:	8c 2f       	mov	r24, r28
     74c:	0e 94 32 02 	call	0x464	; 0x464 <normalize_output_joystick>
     750:	86 3a       	cpi	r24, 0xA6	; 166
     752:	9f 4f       	sbci	r25, 0xFF	; 255
     754:	0c f0       	brlt	.+2      	; 0x758 <navigate_menu+0x13e>
     756:	80 cf       	rjmp	.-256    	; 0x658 <navigate_menu+0x3e>
			OLED_clear_position(currentRow, 0);
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	f8 01       	movw	r30, r16
     75c:	80 81       	ld	r24, Z
     75e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <OLED_clear_position>
			currentRow = currentRow + 2;
     762:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <currentRow>
     766:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <currentRow+0x1>
     76a:	02 96       	adiw	r24, 0x02	; 2
			if(currentRow > 6){
     76c:	87 30       	cpi	r24, 0x07	; 7
     76e:	91 05       	cpc	r25, r1
     770:	2c f4       	brge	.+10     	; 0x77c <navigate_menu+0x162>
			OLED_print('>');
			_delay_ms(1000);
		}
		if(normalize_output_joystick(y, centerY) < -90){
			OLED_clear_position(currentRow, 0);
			currentRow = currentRow + 2;
     772:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <currentRow+0x1>
     776:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <currentRow>
     77a:	04 c0       	rjmp	.+8      	; 0x784 <navigate_menu+0x16a>
			if(currentRow > 6){
				currentRow = 0;
     77c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <currentRow+0x1>
     780:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <currentRow>
			}
			//printf("current row after moving down: %d\r\n", currentRow);
			OLED_pos(currentRow, 0);
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	f8 01       	movw	r30, r16
     788:	80 81       	ld	r24, Z
     78a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
			OLED_print('>');
     78e:	8e e3       	ldi	r24, 0x3E	; 62
     790:	0e 94 9f 04 	call	0x93e	; 0x93e <OLED_print>
     794:	ff e3       	ldi	r31, 0x3F	; 63
     796:	2d e0       	ldi	r18, 0x0D	; 13
     798:	83 e0       	ldi	r24, 0x03	; 3
     79a:	f1 50       	subi	r31, 0x01	; 1
     79c:	20 40       	sbci	r18, 0x00	; 0
     79e:	80 40       	sbci	r24, 0x00	; 0
     7a0:	e1 f7       	brne	.-8      	; 0x79a <navigate_menu+0x180>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <navigate_menu+0x18a>
     7a4:	00 00       	nop
     7a6:	58 cf       	rjmp	.-336    	; 0x658 <navigate_menu+0x3e>

000007a8 <menu_init>:
static int centerX, centerY;
int currentRow;
//static int prevPosX = 0;	//neutral

void menu_init(){
	centerX = joystick_init(0, 10);
     7a8:	6a e0       	ldi	r22, 0x0A	; 10
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	0e 94 00 02 	call	0x400	; 0x400 <joystick_init>
     7b2:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <centerX+0x1>
     7b6:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <centerX>
	centerY = joystick_init(1, 10);
     7ba:	6a e0       	ldi	r22, 0x0A	; 10
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	0e 94 00 02 	call	0x400	; 0x400 <joystick_init>
     7c4:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
     7c8:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
	display_main_menu();
     7cc:	0e 94 9c 02 	call	0x538	; 0x538 <display_main_menu>
	navigate_menu();
     7d0:	0e 94 0d 03 	call	0x61a	; 0x61a <navigate_menu>

000007d4 <OLED_clear>:
void OLED_write_command(char c){
	oled_command_reg[0] = c;
}

void OLED_write_data(char c){
	oled_data_reg[0] = c;
     7d4:	20 eb       	ldi	r18, 0xB0	; 176
     7d6:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     7da:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     7de:	20 83       	st	Z, r18
     7e0:	80 e8       	ldi	r24, 0x80	; 128
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_data_reg>
     7e8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_data_reg+0x1>
     7ec:	10 82       	st	Z, r1
     7ee:	01 97       	sbiw	r24, 0x01	; 1
     7f0:	c9 f7       	brne	.-14     	; 0x7e4 <OLED_clear+0x10>
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	28 3b       	cpi	r18, 0xB8	; 184
     7f6:	79 f7       	brne	.-34     	; 0x7d6 <OLED_clear+0x2>
     7f8:	08 95       	ret

000007fa <OLED_init>:
     7fa:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     7fe:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     802:	8e ea       	ldi	r24, 0xAE	; 174
     804:	80 83       	st	Z, r24
     806:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     80a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     80e:	81 ea       	ldi	r24, 0xA1	; 161
     810:	80 83       	st	Z, r24
     812:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     816:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     81a:	8a ed       	ldi	r24, 0xDA	; 218
     81c:	80 83       	st	Z, r24
     81e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     822:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     826:	82 e1       	ldi	r24, 0x12	; 18
     828:	80 83       	st	Z, r24
     82a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     82e:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     832:	88 ec       	ldi	r24, 0xC8	; 200
     834:	80 83       	st	Z, r24
     836:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     83a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     83e:	88 ea       	ldi	r24, 0xA8	; 168
     840:	80 83       	st	Z, r24
     842:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     846:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     84a:	8f e3       	ldi	r24, 0x3F	; 63
     84c:	80 83       	st	Z, r24
     84e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     852:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     856:	85 ed       	ldi	r24, 0xD5	; 213
     858:	80 83       	st	Z, r24
     85a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     85e:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     862:	80 e8       	ldi	r24, 0x80	; 128
     864:	80 83       	st	Z, r24
     866:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     86a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     86e:	81 e8       	ldi	r24, 0x81	; 129
     870:	80 83       	st	Z, r24
     872:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     876:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     87a:	80 e5       	ldi	r24, 0x50	; 80
     87c:	80 83       	st	Z, r24
     87e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     882:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     886:	89 ed       	ldi	r24, 0xD9	; 217
     888:	80 83       	st	Z, r24
     88a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     88e:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     892:	81 e2       	ldi	r24, 0x21	; 33
     894:	80 83       	st	Z, r24
     896:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     89a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     89e:	80 e2       	ldi	r24, 0x20	; 32
     8a0:	80 83       	st	Z, r24
     8a2:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8a6:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8aa:	82 e0       	ldi	r24, 0x02	; 2
     8ac:	80 83       	st	Z, r24
     8ae:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8b2:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8b6:	8b ed       	ldi	r24, 0xDB	; 219
     8b8:	80 83       	st	Z, r24
     8ba:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8be:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8c2:	80 e3       	ldi	r24, 0x30	; 48
     8c4:	80 83       	st	Z, r24
     8c6:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8ca:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8ce:	8d ea       	ldi	r24, 0xAD	; 173
     8d0:	80 83       	st	Z, r24
     8d2:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8d6:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8da:	10 82       	st	Z, r1
     8dc:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8e0:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8e4:	84 ea       	ldi	r24, 0xA4	; 164
     8e6:	80 83       	st	Z, r24
     8e8:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8ec:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8f0:	86 ea       	ldi	r24, 0xA6	; 166
     8f2:	80 83       	st	Z, r24
     8f4:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     8f8:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     8fc:	8f ea       	ldi	r24, 0xAF	; 175
     8fe:	80 83       	st	Z, r24
     900:	30 eb       	ldi	r19, 0xB0	; 176
     902:	2f ef       	ldi	r18, 0xFF	; 255
     904:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     908:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     90c:	30 83       	st	Z, r19
     90e:	80 e8       	ldi	r24, 0x80	; 128
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_data_reg>
     916:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_data_reg+0x1>
     91a:	20 83       	st	Z, r18
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	c9 f7       	brne	.-14     	; 0x912 <OLED_init+0x118>
     920:	3f 5f       	subi	r19, 0xFF	; 255
     922:	38 3b       	cpi	r19, 0xB8	; 184
     924:	79 f7       	brne	.-34     	; 0x904 <OLED_init+0x10a>
     926:	2f ef       	ldi	r18, 0xFF	; 255
     928:	8f e7       	ldi	r24, 0x7F	; 127
     92a:	97 e0       	ldi	r25, 0x07	; 7
     92c:	21 50       	subi	r18, 0x01	; 1
     92e:	80 40       	sbci	r24, 0x00	; 0
     930:	90 40       	sbci	r25, 0x00	; 0
     932:	e1 f7       	brne	.-8      	; 0x92c <OLED_init+0x132>
     934:	00 c0       	rjmp	.+0      	; 0x936 <OLED_init+0x13c>
     936:	00 00       	nop
     938:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <OLED_clear>
     93c:	08 95       	ret

0000093e <OLED_print>:
}

void OLED_print(char c){
     93e:	28 2f       	mov	r18, r24
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	f9 01       	movw	r30, r18
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	ee 0f       	add	r30, r30
     94e:	ff 1f       	adc	r31, r31
     950:	e0 59       	subi	r30, 0x90	; 144
     952:	f0 40       	sbci	r31, 0x00	; 0
     954:	22 0f       	add	r18, r18
     956:	33 1f       	adc	r19, r19
     958:	22 0f       	add	r18, r18
     95a:	33 1f       	adc	r19, r19
     95c:	22 0f       	add	r18, r18
     95e:	33 1f       	adc	r19, r19
     960:	28 58       	subi	r18, 0x88	; 136
     962:	30 40       	sbci	r19, 0x00	; 0
	int pos = c - 32;
	for (int i = 0; i < 8; i++){
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
     964:	94 91       	lpm	r25, Z
void OLED_write_command(char c){
	oled_command_reg[0] = c;
}

void OLED_write_data(char c){
	oled_data_reg[0] = c;
     966:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <oled_data_reg>
     96a:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <oled_data_reg+0x1>
     96e:	9c 93       	st	X, r25
     970:	31 96       	adiw	r30, 0x01	; 1
}

void OLED_print(char c){
	int pos = c - 32;
	for (int i = 0; i < 8; i++){
     972:	e2 17       	cp	r30, r18
     974:	f3 07       	cpc	r31, r19
     976:	b1 f7       	brne	.-20     	; 0x964 <OLED_print+0x26>
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
	}
}
     978:	08 95       	ret

0000097a <OLED_goto_line>:
	OLED_goto_column(column);
	//for now, when we want to write something, we will be writing from the leftmost positions so as to not deal with the columns at the beginning	
}

void OLED_goto_line(uint8_t line){
	OLED_write_command(0xb0 + (line));		
     97a:	80 55       	subi	r24, 0x50	; 80
	OLED_pos(row, column);
	OLED_print(' ');
}

void OLED_write_command(char c){
	oled_command_reg[0] = c;
     97c:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     980:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     984:	80 83       	st	Z, r24
     986:	08 95       	ret

00000988 <OLED_goto_column>:
     988:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     98c:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     990:	80 83       	st	Z, r24
     992:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_command_reg>
     996:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_command_reg+0x1>
     99a:	80 e1       	ldi	r24, 0x10	; 16
     99c:	80 83       	st	Z, r24
     99e:	08 95       	ret

000009a0 <OLED_pos>:
	for (int i = 0; i < 8; i++){
		OLED_write_data(pgm_read_byte(&(font8[pos][i])));
	}
}

void OLED_pos(uint8_t row, uint8_t column){
     9a0:	cf 93       	push	r28
     9a2:	c6 2f       	mov	r28, r22
	OLED_goto_line(row);
     9a4:	0e 94 bd 04 	call	0x97a	; 0x97a <OLED_goto_line>
	OLED_goto_column(column);
     9a8:	8c 2f       	mov	r24, r28
     9aa:	0e 94 c4 04 	call	0x988	; 0x988 <OLED_goto_column>
	//for now, when we want to write something, we will be writing from the leftmost positions so as to not deal with the columns at the beginning	
}
     9ae:	cf 91       	pop	r28
     9b0:	08 95       	ret

000009b2 <OLED_clear_position>:
		}
	}
}

void OLED_clear_position(uint8_t row, uint8_t column){
	OLED_pos(row, column);
     9b2:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <OLED_pos>
	OLED_print(' ');
     9b6:	80 e2       	ldi	r24, 0x20	; 32
     9b8:	0e 94 9f 04 	call	0x93e	; 0x93e <OLED_print>
     9bc:	08 95       	ret

000009be <OLED_print_string>:
	//OLED_write_command(0x10);
	OLED_write_command(column);
	OLED_write_command(0x10);
}

void OLED_print_string(char* str){
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	ec 01       	movw	r28, r24
	int i = 0;
	while(str[i] != '\0'){
     9c4:	88 81       	ld	r24, Y
     9c6:	88 23       	and	r24, r24
     9c8:	31 f0       	breq	.+12     	; 0x9d6 <OLED_print_string+0x18>
     9ca:	21 96       	adiw	r28, 0x01	; 1
		OLED_print(str[i]);
     9cc:	0e 94 9f 04 	call	0x93e	; 0x93e <OLED_print>
	OLED_write_command(0x10);
}

void OLED_print_string(char* str){
	int i = 0;
	while(str[i] != '\0'){
     9d0:	89 91       	ld	r24, Y+
     9d2:	81 11       	cpse	r24, r1
     9d4:	fb cf       	rjmp	.-10     	; 0x9cc <OLED_print_string+0xe>
		OLED_print(str[i]);
		i++;
	}
}
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	08 95       	ret

000009dc <SRAM_init>:
	//DDRC |= (1 << PC3);
	//PORTC = 0x04;
	volatile char *ext_ram = (char *) 0x1800;
	//printf("\r\n\n\nInitiating SRAM...\r\n");
	
	MCUCR |= (1<<SRE);
     9dc:	85 b7       	in	r24, 0x35	; 53
     9de:	80 68       	ori	r24, 0x80	; 128
     9e0:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<5);
     9e2:	80 b7       	in	r24, 0x30	; 48
     9e4:	80 62       	ori	r24, 0x20	; 32
     9e6:	80 bf       	out	0x30, r24	; 48
     9e8:	08 95       	ret

000009ea <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
	USART_Init(MYUBRR);
     9ea:	8f e1       	ldi	r24, 0x1F	; 31
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 08 05 	call	0xa10	; 0xa10 <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
     9f2:	63 e1       	ldi	r22, 0x13	; 19
     9f4:	75 e0       	ldi	r23, 0x05	; 5
     9f6:	8f e0       	ldi	r24, 0x0F	; 15
     9f8:	95 e0       	ldi	r25, 0x05	; 5
     9fa:	0e 94 4f 07 	call	0xe9e	; 0xe9e <fdevopen>
	
	SRAM_init();
     9fe:	0e 94 ee 04 	call	0x9dc	; 0x9dc <SRAM_init>
	OLED_init();
     a02:	0e 94 fd 03 	call	0x7fa	; 0x7fa <OLED_init>
	
	menu_init();
     a06:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <menu_init>
	while (1) {
		char c = USART_Receive();
		
		printf("Character received: %c\r\n", c);
	}*/
}
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	08 95       	ret

00000a10 <USART_Init>:
#include "uart.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR1H = (unsigned char)(ubrr>>8);
     a10:	9c bf       	out	0x3c, r25	; 60
	UBRR1L = (unsigned char)ubrr;
     a12:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
     a14:	88 e1       	ldi	r24, 0x18	; 24
     a16:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8data, 2stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(3<<UCSZ10);
     a18:	8e e8       	ldi	r24, 0x8E	; 142
     a1a:	8c bf       	out	0x3c, r24	; 60
     a1c:	08 95       	ret

00000a1e <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR1A & (1<<UDRE1)) );
     a1e:	15 9b       	sbis	0x02, 5	; 2
     a20:	fe cf       	rjmp	.-4      	; 0xa1e <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR1 = data;
     a22:	83 b9       	out	0x03, r24	; 3
     a24:	08 95       	ret

00000a26 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR1A & (1<<RXC1)) );
     a26:	17 9b       	sbis	0x02, 7	; 2
     a28:	fe cf       	rjmp	.-4      	; 0xa26 <USART_Receive>
	/* Get and return received data from buffer */
	return UDR1;
     a2a:	83 b1       	in	r24, 0x03	; 3
     a2c:	08 95       	ret

00000a2e <__subsf3>:
     a2e:	50 58       	subi	r21, 0x80	; 128

00000a30 <__addsf3>:
     a30:	bb 27       	eor	r27, r27
     a32:	aa 27       	eor	r26, r26
     a34:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__addsf3x>
     a38:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_round>
     a3c:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_pscA>
     a40:	38 f0       	brcs	.+14     	; 0xa50 <__addsf3+0x20>
     a42:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__fp_pscB>
     a46:	20 f0       	brcs	.+8      	; 0xa50 <__addsf3+0x20>
     a48:	39 f4       	brne	.+14     	; 0xa58 <__addsf3+0x28>
     a4a:	9f 3f       	cpi	r25, 0xFF	; 255
     a4c:	19 f4       	brne	.+6      	; 0xa54 <__addsf3+0x24>
     a4e:	26 f4       	brtc	.+8      	; 0xa58 <__addsf3+0x28>
     a50:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_nan>
     a54:	0e f4       	brtc	.+2      	; 0xa58 <__addsf3+0x28>
     a56:	e0 95       	com	r30
     a58:	e7 fb       	bst	r30, 7
     a5a:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_inf>

00000a5e <__addsf3x>:
     a5e:	e9 2f       	mov	r30, r25
     a60:	0e 94 91 06 	call	0xd22	; 0xd22 <__fp_split3>
     a64:	58 f3       	brcs	.-42     	; 0xa3c <__addsf3+0xc>
     a66:	ba 17       	cp	r27, r26
     a68:	62 07       	cpc	r22, r18
     a6a:	73 07       	cpc	r23, r19
     a6c:	84 07       	cpc	r24, r20
     a6e:	95 07       	cpc	r25, r21
     a70:	20 f0       	brcs	.+8      	; 0xa7a <__addsf3x+0x1c>
     a72:	79 f4       	brne	.+30     	; 0xa92 <__addsf3x+0x34>
     a74:	a6 f5       	brtc	.+104    	; 0xade <__addsf3x+0x80>
     a76:	0c 94 b3 06 	jmp	0xd66	; 0xd66 <__fp_zero>
     a7a:	0e f4       	brtc	.+2      	; 0xa7e <__addsf3x+0x20>
     a7c:	e0 95       	com	r30
     a7e:	0b 2e       	mov	r0, r27
     a80:	ba 2f       	mov	r27, r26
     a82:	a0 2d       	mov	r26, r0
     a84:	0b 01       	movw	r0, r22
     a86:	b9 01       	movw	r22, r18
     a88:	90 01       	movw	r18, r0
     a8a:	0c 01       	movw	r0, r24
     a8c:	ca 01       	movw	r24, r20
     a8e:	a0 01       	movw	r20, r0
     a90:	11 24       	eor	r1, r1
     a92:	ff 27       	eor	r31, r31
     a94:	59 1b       	sub	r21, r25
     a96:	99 f0       	breq	.+38     	; 0xabe <__addsf3x+0x60>
     a98:	59 3f       	cpi	r21, 0xF9	; 249
     a9a:	50 f4       	brcc	.+20     	; 0xab0 <__addsf3x+0x52>
     a9c:	50 3e       	cpi	r21, 0xE0	; 224
     a9e:	68 f1       	brcs	.+90     	; 0xafa <__addsf3x+0x9c>
     aa0:	1a 16       	cp	r1, r26
     aa2:	f0 40       	sbci	r31, 0x00	; 0
     aa4:	a2 2f       	mov	r26, r18
     aa6:	23 2f       	mov	r18, r19
     aa8:	34 2f       	mov	r19, r20
     aaa:	44 27       	eor	r20, r20
     aac:	58 5f       	subi	r21, 0xF8	; 248
     aae:	f3 cf       	rjmp	.-26     	; 0xa96 <__addsf3x+0x38>
     ab0:	46 95       	lsr	r20
     ab2:	37 95       	ror	r19
     ab4:	27 95       	ror	r18
     ab6:	a7 95       	ror	r26
     ab8:	f0 40       	sbci	r31, 0x00	; 0
     aba:	53 95       	inc	r21
     abc:	c9 f7       	brne	.-14     	; 0xab0 <__addsf3x+0x52>
     abe:	7e f4       	brtc	.+30     	; 0xade <__addsf3x+0x80>
     ac0:	1f 16       	cp	r1, r31
     ac2:	ba 0b       	sbc	r27, r26
     ac4:	62 0b       	sbc	r22, r18
     ac6:	73 0b       	sbc	r23, r19
     ac8:	84 0b       	sbc	r24, r20
     aca:	ba f0       	brmi	.+46     	; 0xafa <__addsf3x+0x9c>
     acc:	91 50       	subi	r25, 0x01	; 1
     ace:	a1 f0       	breq	.+40     	; 0xaf8 <__addsf3x+0x9a>
     ad0:	ff 0f       	add	r31, r31
     ad2:	bb 1f       	adc	r27, r27
     ad4:	66 1f       	adc	r22, r22
     ad6:	77 1f       	adc	r23, r23
     ad8:	88 1f       	adc	r24, r24
     ada:	c2 f7       	brpl	.-16     	; 0xacc <__addsf3x+0x6e>
     adc:	0e c0       	rjmp	.+28     	; 0xafa <__addsf3x+0x9c>
     ade:	ba 0f       	add	r27, r26
     ae0:	62 1f       	adc	r22, r18
     ae2:	73 1f       	adc	r23, r19
     ae4:	84 1f       	adc	r24, r20
     ae6:	48 f4       	brcc	.+18     	; 0xafa <__addsf3x+0x9c>
     ae8:	87 95       	ror	r24
     aea:	77 95       	ror	r23
     aec:	67 95       	ror	r22
     aee:	b7 95       	ror	r27
     af0:	f7 95       	ror	r31
     af2:	9e 3f       	cpi	r25, 0xFE	; 254
     af4:	08 f0       	brcs	.+2      	; 0xaf8 <__addsf3x+0x9a>
     af6:	b0 cf       	rjmp	.-160    	; 0xa58 <__addsf3+0x28>
     af8:	93 95       	inc	r25
     afa:	88 0f       	add	r24, r24
     afc:	08 f0       	brcs	.+2      	; 0xb00 <__addsf3x+0xa2>
     afe:	99 27       	eor	r25, r25
     b00:	ee 0f       	add	r30, r30
     b02:	97 95       	ror	r25
     b04:	87 95       	ror	r24
     b06:	08 95       	ret

00000b08 <__divsf3>:
     b08:	0e 94 98 05 	call	0xb30	; 0xb30 <__divsf3x>
     b0c:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_round>
     b10:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__fp_pscB>
     b14:	58 f0       	brcs	.+22     	; 0xb2c <__divsf3+0x24>
     b16:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_pscA>
     b1a:	40 f0       	brcs	.+16     	; 0xb2c <__divsf3+0x24>
     b1c:	29 f4       	brne	.+10     	; 0xb28 <__divsf3+0x20>
     b1e:	5f 3f       	cpi	r21, 0xFF	; 255
     b20:	29 f0       	breq	.+10     	; 0xb2c <__divsf3+0x24>
     b22:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_inf>
     b26:	51 11       	cpse	r21, r1
     b28:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_szero>
     b2c:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_nan>

00000b30 <__divsf3x>:
     b30:	0e 94 91 06 	call	0xd22	; 0xd22 <__fp_split3>
     b34:	68 f3       	brcs	.-38     	; 0xb10 <__divsf3+0x8>

00000b36 <__divsf3_pse>:
     b36:	99 23       	and	r25, r25
     b38:	b1 f3       	breq	.-20     	; 0xb26 <__divsf3+0x1e>
     b3a:	55 23       	and	r21, r21
     b3c:	91 f3       	breq	.-28     	; 0xb22 <__divsf3+0x1a>
     b3e:	95 1b       	sub	r25, r21
     b40:	55 0b       	sbc	r21, r21
     b42:	bb 27       	eor	r27, r27
     b44:	aa 27       	eor	r26, r26
     b46:	62 17       	cp	r22, r18
     b48:	73 07       	cpc	r23, r19
     b4a:	84 07       	cpc	r24, r20
     b4c:	38 f0       	brcs	.+14     	; 0xb5c <__divsf3_pse+0x26>
     b4e:	9f 5f       	subi	r25, 0xFF	; 255
     b50:	5f 4f       	sbci	r21, 0xFF	; 255
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	aa 1f       	adc	r26, r26
     b5a:	a9 f3       	breq	.-22     	; 0xb46 <__divsf3_pse+0x10>
     b5c:	35 d0       	rcall	.+106    	; 0xbc8 <__divsf3_pse+0x92>
     b5e:	0e 2e       	mov	r0, r30
     b60:	3a f0       	brmi	.+14     	; 0xb70 <__divsf3_pse+0x3a>
     b62:	e0 e8       	ldi	r30, 0x80	; 128
     b64:	32 d0       	rcall	.+100    	; 0xbca <__divsf3_pse+0x94>
     b66:	91 50       	subi	r25, 0x01	; 1
     b68:	50 40       	sbci	r21, 0x00	; 0
     b6a:	e6 95       	lsr	r30
     b6c:	00 1c       	adc	r0, r0
     b6e:	ca f7       	brpl	.-14     	; 0xb62 <__divsf3_pse+0x2c>
     b70:	2b d0       	rcall	.+86     	; 0xbc8 <__divsf3_pse+0x92>
     b72:	fe 2f       	mov	r31, r30
     b74:	29 d0       	rcall	.+82     	; 0xbc8 <__divsf3_pse+0x92>
     b76:	66 0f       	add	r22, r22
     b78:	77 1f       	adc	r23, r23
     b7a:	88 1f       	adc	r24, r24
     b7c:	bb 1f       	adc	r27, r27
     b7e:	26 17       	cp	r18, r22
     b80:	37 07       	cpc	r19, r23
     b82:	48 07       	cpc	r20, r24
     b84:	ab 07       	cpc	r26, r27
     b86:	b0 e8       	ldi	r27, 0x80	; 128
     b88:	09 f0       	breq	.+2      	; 0xb8c <__divsf3_pse+0x56>
     b8a:	bb 0b       	sbc	r27, r27
     b8c:	80 2d       	mov	r24, r0
     b8e:	bf 01       	movw	r22, r30
     b90:	ff 27       	eor	r31, r31
     b92:	93 58       	subi	r25, 0x83	; 131
     b94:	5f 4f       	sbci	r21, 0xFF	; 255
     b96:	3a f0       	brmi	.+14     	; 0xba6 <__divsf3_pse+0x70>
     b98:	9e 3f       	cpi	r25, 0xFE	; 254
     b9a:	51 05       	cpc	r21, r1
     b9c:	78 f0       	brcs	.+30     	; 0xbbc <__divsf3_pse+0x86>
     b9e:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_inf>
     ba2:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_szero>
     ba6:	5f 3f       	cpi	r21, 0xFF	; 255
     ba8:	e4 f3       	brlt	.-8      	; 0xba2 <__divsf3_pse+0x6c>
     baa:	98 3e       	cpi	r25, 0xE8	; 232
     bac:	d4 f3       	brlt	.-12     	; 0xba2 <__divsf3_pse+0x6c>
     bae:	86 95       	lsr	r24
     bb0:	77 95       	ror	r23
     bb2:	67 95       	ror	r22
     bb4:	b7 95       	ror	r27
     bb6:	f7 95       	ror	r31
     bb8:	9f 5f       	subi	r25, 0xFF	; 255
     bba:	c9 f7       	brne	.-14     	; 0xbae <__divsf3_pse+0x78>
     bbc:	88 0f       	add	r24, r24
     bbe:	91 1d       	adc	r25, r1
     bc0:	96 95       	lsr	r25
     bc2:	87 95       	ror	r24
     bc4:	97 f9       	bld	r25, 7
     bc6:	08 95       	ret
     bc8:	e1 e0       	ldi	r30, 0x01	; 1
     bca:	66 0f       	add	r22, r22
     bcc:	77 1f       	adc	r23, r23
     bce:	88 1f       	adc	r24, r24
     bd0:	bb 1f       	adc	r27, r27
     bd2:	62 17       	cp	r22, r18
     bd4:	73 07       	cpc	r23, r19
     bd6:	84 07       	cpc	r24, r20
     bd8:	ba 07       	cpc	r27, r26
     bda:	20 f0       	brcs	.+8      	; 0xbe4 <__divsf3_pse+0xae>
     bdc:	62 1b       	sub	r22, r18
     bde:	73 0b       	sbc	r23, r19
     be0:	84 0b       	sbc	r24, r20
     be2:	ba 0b       	sbc	r27, r26
     be4:	ee 1f       	adc	r30, r30
     be6:	88 f7       	brcc	.-30     	; 0xbca <__divsf3_pse+0x94>
     be8:	e0 95       	com	r30
     bea:	08 95       	ret

00000bec <__fixsfsi>:
     bec:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fixunssfsi>
     bf0:	68 94       	set
     bf2:	b1 11       	cpse	r27, r1
     bf4:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_szero>
     bf8:	08 95       	ret

00000bfa <__fixunssfsi>:
     bfa:	0e 94 99 06 	call	0xd32	; 0xd32 <__fp_splitA>
     bfe:	88 f0       	brcs	.+34     	; 0xc22 <__fixunssfsi+0x28>
     c00:	9f 57       	subi	r25, 0x7F	; 127
     c02:	98 f0       	brcs	.+38     	; 0xc2a <__fixunssfsi+0x30>
     c04:	b9 2f       	mov	r27, r25
     c06:	99 27       	eor	r25, r25
     c08:	b7 51       	subi	r27, 0x17	; 23
     c0a:	b0 f0       	brcs	.+44     	; 0xc38 <__fixunssfsi+0x3e>
     c0c:	e1 f0       	breq	.+56     	; 0xc46 <__fixunssfsi+0x4c>
     c0e:	66 0f       	add	r22, r22
     c10:	77 1f       	adc	r23, r23
     c12:	88 1f       	adc	r24, r24
     c14:	99 1f       	adc	r25, r25
     c16:	1a f0       	brmi	.+6      	; 0xc1e <__fixunssfsi+0x24>
     c18:	ba 95       	dec	r27
     c1a:	c9 f7       	brne	.-14     	; 0xc0e <__fixunssfsi+0x14>
     c1c:	14 c0       	rjmp	.+40     	; 0xc46 <__fixunssfsi+0x4c>
     c1e:	b1 30       	cpi	r27, 0x01	; 1
     c20:	91 f0       	breq	.+36     	; 0xc46 <__fixunssfsi+0x4c>
     c22:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_zero>
     c26:	b1 e0       	ldi	r27, 0x01	; 1
     c28:	08 95       	ret
     c2a:	0c 94 b3 06 	jmp	0xd66	; 0xd66 <__fp_zero>
     c2e:	67 2f       	mov	r22, r23
     c30:	78 2f       	mov	r23, r24
     c32:	88 27       	eor	r24, r24
     c34:	b8 5f       	subi	r27, 0xF8	; 248
     c36:	39 f0       	breq	.+14     	; 0xc46 <__fixunssfsi+0x4c>
     c38:	b9 3f       	cpi	r27, 0xF9	; 249
     c3a:	cc f3       	brlt	.-14     	; 0xc2e <__fixunssfsi+0x34>
     c3c:	86 95       	lsr	r24
     c3e:	77 95       	ror	r23
     c40:	67 95       	ror	r22
     c42:	b3 95       	inc	r27
     c44:	d9 f7       	brne	.-10     	; 0xc3c <__fixunssfsi+0x42>
     c46:	3e f4       	brtc	.+14     	; 0xc56 <__fixunssfsi+0x5c>
     c48:	90 95       	com	r25
     c4a:	80 95       	com	r24
     c4c:	70 95       	com	r23
     c4e:	61 95       	neg	r22
     c50:	7f 4f       	sbci	r23, 0xFF	; 255
     c52:	8f 4f       	sbci	r24, 0xFF	; 255
     c54:	9f 4f       	sbci	r25, 0xFF	; 255
     c56:	08 95       	ret

00000c58 <__floatunsisf>:
     c58:	e8 94       	clt
     c5a:	09 c0       	rjmp	.+18     	; 0xc6e <__floatsisf+0x12>

00000c5c <__floatsisf>:
     c5c:	97 fb       	bst	r25, 7
     c5e:	3e f4       	brtc	.+14     	; 0xc6e <__floatsisf+0x12>
     c60:	90 95       	com	r25
     c62:	80 95       	com	r24
     c64:	70 95       	com	r23
     c66:	61 95       	neg	r22
     c68:	7f 4f       	sbci	r23, 0xFF	; 255
     c6a:	8f 4f       	sbci	r24, 0xFF	; 255
     c6c:	9f 4f       	sbci	r25, 0xFF	; 255
     c6e:	99 23       	and	r25, r25
     c70:	a9 f0       	breq	.+42     	; 0xc9c <__floatsisf+0x40>
     c72:	f9 2f       	mov	r31, r25
     c74:	96 e9       	ldi	r25, 0x96	; 150
     c76:	bb 27       	eor	r27, r27
     c78:	93 95       	inc	r25
     c7a:	f6 95       	lsr	r31
     c7c:	87 95       	ror	r24
     c7e:	77 95       	ror	r23
     c80:	67 95       	ror	r22
     c82:	b7 95       	ror	r27
     c84:	f1 11       	cpse	r31, r1
     c86:	f8 cf       	rjmp	.-16     	; 0xc78 <__floatsisf+0x1c>
     c88:	fa f4       	brpl	.+62     	; 0xcc8 <__floatsisf+0x6c>
     c8a:	bb 0f       	add	r27, r27
     c8c:	11 f4       	brne	.+4      	; 0xc92 <__floatsisf+0x36>
     c8e:	60 ff       	sbrs	r22, 0
     c90:	1b c0       	rjmp	.+54     	; 0xcc8 <__floatsisf+0x6c>
     c92:	6f 5f       	subi	r22, 0xFF	; 255
     c94:	7f 4f       	sbci	r23, 0xFF	; 255
     c96:	8f 4f       	sbci	r24, 0xFF	; 255
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	16 c0       	rjmp	.+44     	; 0xcc8 <__floatsisf+0x6c>
     c9c:	88 23       	and	r24, r24
     c9e:	11 f0       	breq	.+4      	; 0xca4 <__floatsisf+0x48>
     ca0:	96 e9       	ldi	r25, 0x96	; 150
     ca2:	11 c0       	rjmp	.+34     	; 0xcc6 <__floatsisf+0x6a>
     ca4:	77 23       	and	r23, r23
     ca6:	21 f0       	breq	.+8      	; 0xcb0 <__floatsisf+0x54>
     ca8:	9e e8       	ldi	r25, 0x8E	; 142
     caa:	87 2f       	mov	r24, r23
     cac:	76 2f       	mov	r23, r22
     cae:	05 c0       	rjmp	.+10     	; 0xcba <__floatsisf+0x5e>
     cb0:	66 23       	and	r22, r22
     cb2:	71 f0       	breq	.+28     	; 0xcd0 <__floatsisf+0x74>
     cb4:	96 e8       	ldi	r25, 0x86	; 134
     cb6:	86 2f       	mov	r24, r22
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	2a f0       	brmi	.+10     	; 0xcc8 <__floatsisf+0x6c>
     cbe:	9a 95       	dec	r25
     cc0:	66 0f       	add	r22, r22
     cc2:	77 1f       	adc	r23, r23
     cc4:	88 1f       	adc	r24, r24
     cc6:	da f7       	brpl	.-10     	; 0xcbe <__floatsisf+0x62>
     cc8:	88 0f       	add	r24, r24
     cca:	96 95       	lsr	r25
     ccc:	87 95       	ror	r24
     cce:	97 f9       	bld	r25, 7
     cd0:	08 95       	ret

00000cd2 <__fp_inf>:
     cd2:	97 f9       	bld	r25, 7
     cd4:	9f 67       	ori	r25, 0x7F	; 127
     cd6:	80 e8       	ldi	r24, 0x80	; 128
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	08 95       	ret

00000cde <__fp_nan>:
     cde:	9f ef       	ldi	r25, 0xFF	; 255
     ce0:	80 ec       	ldi	r24, 0xC0	; 192
     ce2:	08 95       	ret

00000ce4 <__fp_pscA>:
     ce4:	00 24       	eor	r0, r0
     ce6:	0a 94       	dec	r0
     ce8:	16 16       	cp	r1, r22
     cea:	17 06       	cpc	r1, r23
     cec:	18 06       	cpc	r1, r24
     cee:	09 06       	cpc	r0, r25
     cf0:	08 95       	ret

00000cf2 <__fp_pscB>:
     cf2:	00 24       	eor	r0, r0
     cf4:	0a 94       	dec	r0
     cf6:	12 16       	cp	r1, r18
     cf8:	13 06       	cpc	r1, r19
     cfa:	14 06       	cpc	r1, r20
     cfc:	05 06       	cpc	r0, r21
     cfe:	08 95       	ret

00000d00 <__fp_round>:
     d00:	09 2e       	mov	r0, r25
     d02:	03 94       	inc	r0
     d04:	00 0c       	add	r0, r0
     d06:	11 f4       	brne	.+4      	; 0xd0c <__fp_round+0xc>
     d08:	88 23       	and	r24, r24
     d0a:	52 f0       	brmi	.+20     	; 0xd20 <__fp_round+0x20>
     d0c:	bb 0f       	add	r27, r27
     d0e:	40 f4       	brcc	.+16     	; 0xd20 <__fp_round+0x20>
     d10:	bf 2b       	or	r27, r31
     d12:	11 f4       	brne	.+4      	; 0xd18 <__fp_round+0x18>
     d14:	60 ff       	sbrs	r22, 0
     d16:	04 c0       	rjmp	.+8      	; 0xd20 <__fp_round+0x20>
     d18:	6f 5f       	subi	r22, 0xFF	; 255
     d1a:	7f 4f       	sbci	r23, 0xFF	; 255
     d1c:	8f 4f       	sbci	r24, 0xFF	; 255
     d1e:	9f 4f       	sbci	r25, 0xFF	; 255
     d20:	08 95       	ret

00000d22 <__fp_split3>:
     d22:	57 fd       	sbrc	r21, 7
     d24:	90 58       	subi	r25, 0x80	; 128
     d26:	44 0f       	add	r20, r20
     d28:	55 1f       	adc	r21, r21
     d2a:	59 f0       	breq	.+22     	; 0xd42 <__fp_splitA+0x10>
     d2c:	5f 3f       	cpi	r21, 0xFF	; 255
     d2e:	71 f0       	breq	.+28     	; 0xd4c <__fp_splitA+0x1a>
     d30:	47 95       	ror	r20

00000d32 <__fp_splitA>:
     d32:	88 0f       	add	r24, r24
     d34:	97 fb       	bst	r25, 7
     d36:	99 1f       	adc	r25, r25
     d38:	61 f0       	breq	.+24     	; 0xd52 <__fp_splitA+0x20>
     d3a:	9f 3f       	cpi	r25, 0xFF	; 255
     d3c:	79 f0       	breq	.+30     	; 0xd5c <__fp_splitA+0x2a>
     d3e:	87 95       	ror	r24
     d40:	08 95       	ret
     d42:	12 16       	cp	r1, r18
     d44:	13 06       	cpc	r1, r19
     d46:	14 06       	cpc	r1, r20
     d48:	55 1f       	adc	r21, r21
     d4a:	f2 cf       	rjmp	.-28     	; 0xd30 <__fp_split3+0xe>
     d4c:	46 95       	lsr	r20
     d4e:	f1 df       	rcall	.-30     	; 0xd32 <__fp_splitA>
     d50:	08 c0       	rjmp	.+16     	; 0xd62 <__fp_splitA+0x30>
     d52:	16 16       	cp	r1, r22
     d54:	17 06       	cpc	r1, r23
     d56:	18 06       	cpc	r1, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	f1 cf       	rjmp	.-30     	; 0xd3e <__fp_splitA+0xc>
     d5c:	86 95       	lsr	r24
     d5e:	71 05       	cpc	r23, r1
     d60:	61 05       	cpc	r22, r1
     d62:	08 94       	sec
     d64:	08 95       	ret

00000d66 <__fp_zero>:
     d66:	e8 94       	clt

00000d68 <__fp_szero>:
     d68:	bb 27       	eor	r27, r27
     d6a:	66 27       	eor	r22, r22
     d6c:	77 27       	eor	r23, r23
     d6e:	cb 01       	movw	r24, r22
     d70:	97 f9       	bld	r25, 7
     d72:	08 95       	ret

00000d74 <__mulsf3>:
     d74:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__mulsf3x>
     d78:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_round>
     d7c:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_pscA>
     d80:	38 f0       	brcs	.+14     	; 0xd90 <__mulsf3+0x1c>
     d82:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__fp_pscB>
     d86:	20 f0       	brcs	.+8      	; 0xd90 <__mulsf3+0x1c>
     d88:	95 23       	and	r25, r21
     d8a:	11 f0       	breq	.+4      	; 0xd90 <__mulsf3+0x1c>
     d8c:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_inf>
     d90:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_nan>
     d94:	11 24       	eor	r1, r1
     d96:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_szero>

00000d9a <__mulsf3x>:
     d9a:	0e 94 91 06 	call	0xd22	; 0xd22 <__fp_split3>
     d9e:	70 f3       	brcs	.-36     	; 0xd7c <__mulsf3+0x8>

00000da0 <__mulsf3_pse>:
     da0:	95 9f       	mul	r25, r21
     da2:	c1 f3       	breq	.-16     	; 0xd94 <__mulsf3+0x20>
     da4:	95 0f       	add	r25, r21
     da6:	50 e0       	ldi	r21, 0x00	; 0
     da8:	55 1f       	adc	r21, r21
     daa:	62 9f       	mul	r22, r18
     dac:	f0 01       	movw	r30, r0
     dae:	72 9f       	mul	r23, r18
     db0:	bb 27       	eor	r27, r27
     db2:	f0 0d       	add	r31, r0
     db4:	b1 1d       	adc	r27, r1
     db6:	63 9f       	mul	r22, r19
     db8:	aa 27       	eor	r26, r26
     dba:	f0 0d       	add	r31, r0
     dbc:	b1 1d       	adc	r27, r1
     dbe:	aa 1f       	adc	r26, r26
     dc0:	64 9f       	mul	r22, r20
     dc2:	66 27       	eor	r22, r22
     dc4:	b0 0d       	add	r27, r0
     dc6:	a1 1d       	adc	r26, r1
     dc8:	66 1f       	adc	r22, r22
     dca:	82 9f       	mul	r24, r18
     dcc:	22 27       	eor	r18, r18
     dce:	b0 0d       	add	r27, r0
     dd0:	a1 1d       	adc	r26, r1
     dd2:	62 1f       	adc	r22, r18
     dd4:	73 9f       	mul	r23, r19
     dd6:	b0 0d       	add	r27, r0
     dd8:	a1 1d       	adc	r26, r1
     dda:	62 1f       	adc	r22, r18
     ddc:	83 9f       	mul	r24, r19
     dde:	a0 0d       	add	r26, r0
     de0:	61 1d       	adc	r22, r1
     de2:	22 1f       	adc	r18, r18
     de4:	74 9f       	mul	r23, r20
     de6:	33 27       	eor	r19, r19
     de8:	a0 0d       	add	r26, r0
     dea:	61 1d       	adc	r22, r1
     dec:	23 1f       	adc	r18, r19
     dee:	84 9f       	mul	r24, r20
     df0:	60 0d       	add	r22, r0
     df2:	21 1d       	adc	r18, r1
     df4:	82 2f       	mov	r24, r18
     df6:	76 2f       	mov	r23, r22
     df8:	6a 2f       	mov	r22, r26
     dfa:	11 24       	eor	r1, r1
     dfc:	9f 57       	subi	r25, 0x7F	; 127
     dfe:	50 40       	sbci	r21, 0x00	; 0
     e00:	9a f0       	brmi	.+38     	; 0xe28 <__mulsf3_pse+0x88>
     e02:	f1 f0       	breq	.+60     	; 0xe40 <__mulsf3_pse+0xa0>
     e04:	88 23       	and	r24, r24
     e06:	4a f0       	brmi	.+18     	; 0xe1a <__mulsf3_pse+0x7a>
     e08:	ee 0f       	add	r30, r30
     e0a:	ff 1f       	adc	r31, r31
     e0c:	bb 1f       	adc	r27, r27
     e0e:	66 1f       	adc	r22, r22
     e10:	77 1f       	adc	r23, r23
     e12:	88 1f       	adc	r24, r24
     e14:	91 50       	subi	r25, 0x01	; 1
     e16:	50 40       	sbci	r21, 0x00	; 0
     e18:	a9 f7       	brne	.-22     	; 0xe04 <__mulsf3_pse+0x64>
     e1a:	9e 3f       	cpi	r25, 0xFE	; 254
     e1c:	51 05       	cpc	r21, r1
     e1e:	80 f0       	brcs	.+32     	; 0xe40 <__mulsf3_pse+0xa0>
     e20:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_inf>
     e24:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_szero>
     e28:	5f 3f       	cpi	r21, 0xFF	; 255
     e2a:	e4 f3       	brlt	.-8      	; 0xe24 <__mulsf3_pse+0x84>
     e2c:	98 3e       	cpi	r25, 0xE8	; 232
     e2e:	d4 f3       	brlt	.-12     	; 0xe24 <__mulsf3_pse+0x84>
     e30:	86 95       	lsr	r24
     e32:	77 95       	ror	r23
     e34:	67 95       	ror	r22
     e36:	b7 95       	ror	r27
     e38:	f7 95       	ror	r31
     e3a:	e7 95       	ror	r30
     e3c:	9f 5f       	subi	r25, 0xFF	; 255
     e3e:	c1 f7       	brne	.-16     	; 0xe30 <__mulsf3_pse+0x90>
     e40:	fe 2b       	or	r31, r30
     e42:	88 0f       	add	r24, r24
     e44:	91 1d       	adc	r25, r1
     e46:	96 95       	lsr	r25
     e48:	87 95       	ror	r24
     e4a:	97 f9       	bld	r25, 7
     e4c:	08 95       	ret

00000e4e <__divmodhi4>:
     e4e:	97 fb       	bst	r25, 7
     e50:	07 2e       	mov	r0, r23
     e52:	16 f4       	brtc	.+4      	; 0xe58 <__divmodhi4+0xa>
     e54:	00 94       	com	r0
     e56:	07 d0       	rcall	.+14     	; 0xe66 <__divmodhi4_neg1>
     e58:	77 fd       	sbrc	r23, 7
     e5a:	09 d0       	rcall	.+18     	; 0xe6e <__divmodhi4_neg2>
     e5c:	0e 94 3b 07 	call	0xe76	; 0xe76 <__udivmodhi4>
     e60:	07 fc       	sbrc	r0, 7
     e62:	05 d0       	rcall	.+10     	; 0xe6e <__divmodhi4_neg2>
     e64:	3e f4       	brtc	.+14     	; 0xe74 <__divmodhi4_exit>

00000e66 <__divmodhi4_neg1>:
     e66:	90 95       	com	r25
     e68:	81 95       	neg	r24
     e6a:	9f 4f       	sbci	r25, 0xFF	; 255
     e6c:	08 95       	ret

00000e6e <__divmodhi4_neg2>:
     e6e:	70 95       	com	r23
     e70:	61 95       	neg	r22
     e72:	7f 4f       	sbci	r23, 0xFF	; 255

00000e74 <__divmodhi4_exit>:
     e74:	08 95       	ret

00000e76 <__udivmodhi4>:
     e76:	aa 1b       	sub	r26, r26
     e78:	bb 1b       	sub	r27, r27
     e7a:	51 e1       	ldi	r21, 0x11	; 17
     e7c:	07 c0       	rjmp	.+14     	; 0xe8c <__udivmodhi4_ep>

00000e7e <__udivmodhi4_loop>:
     e7e:	aa 1f       	adc	r26, r26
     e80:	bb 1f       	adc	r27, r27
     e82:	a6 17       	cp	r26, r22
     e84:	b7 07       	cpc	r27, r23
     e86:	10 f0       	brcs	.+4      	; 0xe8c <__udivmodhi4_ep>
     e88:	a6 1b       	sub	r26, r22
     e8a:	b7 0b       	sbc	r27, r23

00000e8c <__udivmodhi4_ep>:
     e8c:	88 1f       	adc	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	5a 95       	dec	r21
     e92:	a9 f7       	brne	.-22     	; 0xe7e <__udivmodhi4_loop>
     e94:	80 95       	com	r24
     e96:	90 95       	com	r25
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	08 95       	ret

00000e9e <fdevopen>:
     e9e:	0f 93       	push	r16
     ea0:	1f 93       	push	r17
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	31 f4       	brne	.+12     	; 0xeb6 <fdevopen+0x18>
     eaa:	61 15       	cp	r22, r1
     eac:	71 05       	cpc	r23, r1
     eae:	19 f4       	brne	.+6      	; 0xeb6 <fdevopen+0x18>
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	3a c0       	rjmp	.+116    	; 0xf2a <fdevopen+0x8c>
     eb6:	8b 01       	movw	r16, r22
     eb8:	ec 01       	movw	r28, r24
     eba:	6e e0       	ldi	r22, 0x0E	; 14
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 91 09 	call	0x1322	; 0x1322 <calloc>
     ec6:	fc 01       	movw	r30, r24
     ec8:	89 2b       	or	r24, r25
     eca:	91 f3       	breq	.-28     	; 0xeb0 <fdevopen+0x12>
     ecc:	80 e8       	ldi	r24, 0x80	; 128
     ece:	83 83       	std	Z+3, r24	; 0x03
     ed0:	01 15       	cp	r16, r1
     ed2:	11 05       	cpc	r17, r1
     ed4:	71 f0       	breq	.+28     	; 0xef2 <fdevopen+0x54>
     ed6:	13 87       	std	Z+11, r17	; 0x0b
     ed8:	02 87       	std	Z+10, r16	; 0x0a
     eda:	81 e8       	ldi	r24, 0x81	; 129
     edc:	83 83       	std	Z+3, r24	; 0x03
     ede:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__iob>
     ee2:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__iob+0x1>
     ee6:	89 2b       	or	r24, r25
     ee8:	21 f4       	brne	.+8      	; 0xef2 <fdevopen+0x54>
     eea:	f0 93 9b 01 	sts	0x019B, r31	; 0x80019b <__iob+0x1>
     eee:	e0 93 9a 01 	sts	0x019A, r30	; 0x80019a <__iob>
     ef2:	20 97       	sbiw	r28, 0x00	; 0
     ef4:	c9 f0       	breq	.+50     	; 0xf28 <fdevopen+0x8a>
     ef6:	d1 87       	std	Z+9, r29	; 0x09
     ef8:	c0 87       	std	Z+8, r28	; 0x08
     efa:	83 81       	ldd	r24, Z+3	; 0x03
     efc:	82 60       	ori	r24, 0x02	; 2
     efe:	83 83       	std	Z+3, r24	; 0x03
     f00:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <__iob+0x2>
     f04:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <__iob+0x3>
     f08:	89 2b       	or	r24, r25
     f0a:	71 f4       	brne	.+28     	; 0xf28 <fdevopen+0x8a>
     f0c:	f0 93 9d 01 	sts	0x019D, r31	; 0x80019d <__iob+0x3>
     f10:	e0 93 9c 01 	sts	0x019C, r30	; 0x80019c <__iob+0x2>
     f14:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__iob+0x4>
     f18:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <__iob+0x5>
     f1c:	89 2b       	or	r24, r25
     f1e:	21 f4       	brne	.+8      	; 0xf28 <fdevopen+0x8a>
     f20:	f0 93 9f 01 	sts	0x019F, r31	; 0x80019f <__iob+0x5>
     f24:	e0 93 9e 01 	sts	0x019E, r30	; 0x80019e <__iob+0x4>
     f28:	cf 01       	movw	r24, r30
     f2a:	df 91       	pop	r29
     f2c:	cf 91       	pop	r28
     f2e:	1f 91       	pop	r17
     f30:	0f 91       	pop	r16
     f32:	08 95       	ret

00000f34 <printf>:
     f34:	a0 e0       	ldi	r26, 0x00	; 0
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e0 ea       	ldi	r30, 0xA0	; 160
     f3a:	f7 e0       	ldi	r31, 0x07	; 7
     f3c:	0c 94 95 0b 	jmp	0x172a	; 0x172a <__prologue_saves__+0x20>
     f40:	ae 01       	movw	r20, r28
     f42:	4b 5f       	subi	r20, 0xFB	; 251
     f44:	5f 4f       	sbci	r21, 0xFF	; 255
     f46:	fa 01       	movw	r30, r20
     f48:	61 91       	ld	r22, Z+
     f4a:	71 91       	ld	r23, Z+
     f4c:	af 01       	movw	r20, r30
     f4e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <__iob+0x2>
     f52:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <__iob+0x3>
     f56:	0e 94 b0 07 	call	0xf60	; 0xf60 <vfprintf>
     f5a:	e2 e0       	ldi	r30, 0x02	; 2
     f5c:	0c 94 b1 0b 	jmp	0x1762	; 0x1762 <__epilogue_restores__+0x20>

00000f60 <vfprintf>:
     f60:	ab e0       	ldi	r26, 0x0B	; 11
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__prologue_saves__>
     f6c:	6c 01       	movw	r12, r24
     f6e:	7b 01       	movw	r14, r22
     f70:	8a 01       	movw	r16, r20
     f72:	fc 01       	movw	r30, r24
     f74:	17 82       	std	Z+7, r1	; 0x07
     f76:	16 82       	std	Z+6, r1	; 0x06
     f78:	83 81       	ldd	r24, Z+3	; 0x03
     f7a:	81 ff       	sbrs	r24, 1
     f7c:	cc c1       	rjmp	.+920    	; 0x1316 <vfprintf+0x3b6>
     f7e:	ce 01       	movw	r24, r28
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	3c 01       	movw	r6, r24
     f84:	f6 01       	movw	r30, r12
     f86:	93 81       	ldd	r25, Z+3	; 0x03
     f88:	f7 01       	movw	r30, r14
     f8a:	93 fd       	sbrc	r25, 3
     f8c:	85 91       	lpm	r24, Z+
     f8e:	93 ff       	sbrs	r25, 3
     f90:	81 91       	ld	r24, Z+
     f92:	7f 01       	movw	r14, r30
     f94:	88 23       	and	r24, r24
     f96:	09 f4       	brne	.+2      	; 0xf9a <vfprintf+0x3a>
     f98:	ba c1       	rjmp	.+884    	; 0x130e <vfprintf+0x3ae>
     f9a:	85 32       	cpi	r24, 0x25	; 37
     f9c:	39 f4       	brne	.+14     	; 0xfac <vfprintf+0x4c>
     f9e:	93 fd       	sbrc	r25, 3
     fa0:	85 91       	lpm	r24, Z+
     fa2:	93 ff       	sbrs	r25, 3
     fa4:	81 91       	ld	r24, Z+
     fa6:	7f 01       	movw	r14, r30
     fa8:	85 32       	cpi	r24, 0x25	; 37
     faa:	29 f4       	brne	.+10     	; 0xfb6 <vfprintf+0x56>
     fac:	b6 01       	movw	r22, r12
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
     fb4:	e7 cf       	rjmp	.-50     	; 0xf84 <vfprintf+0x24>
     fb6:	91 2c       	mov	r9, r1
     fb8:	21 2c       	mov	r2, r1
     fba:	31 2c       	mov	r3, r1
     fbc:	ff e1       	ldi	r31, 0x1F	; 31
     fbe:	f3 15       	cp	r31, r3
     fc0:	d8 f0       	brcs	.+54     	; 0xff8 <vfprintf+0x98>
     fc2:	8b 32       	cpi	r24, 0x2B	; 43
     fc4:	79 f0       	breq	.+30     	; 0xfe4 <vfprintf+0x84>
     fc6:	38 f4       	brcc	.+14     	; 0xfd6 <vfprintf+0x76>
     fc8:	80 32       	cpi	r24, 0x20	; 32
     fca:	79 f0       	breq	.+30     	; 0xfea <vfprintf+0x8a>
     fcc:	83 32       	cpi	r24, 0x23	; 35
     fce:	a1 f4       	brne	.+40     	; 0xff8 <vfprintf+0x98>
     fd0:	23 2d       	mov	r18, r3
     fd2:	20 61       	ori	r18, 0x10	; 16
     fd4:	1d c0       	rjmp	.+58     	; 0x1010 <vfprintf+0xb0>
     fd6:	8d 32       	cpi	r24, 0x2D	; 45
     fd8:	61 f0       	breq	.+24     	; 0xff2 <vfprintf+0x92>
     fda:	80 33       	cpi	r24, 0x30	; 48
     fdc:	69 f4       	brne	.+26     	; 0xff8 <vfprintf+0x98>
     fde:	23 2d       	mov	r18, r3
     fe0:	21 60       	ori	r18, 0x01	; 1
     fe2:	16 c0       	rjmp	.+44     	; 0x1010 <vfprintf+0xb0>
     fe4:	83 2d       	mov	r24, r3
     fe6:	82 60       	ori	r24, 0x02	; 2
     fe8:	38 2e       	mov	r3, r24
     fea:	e3 2d       	mov	r30, r3
     fec:	e4 60       	ori	r30, 0x04	; 4
     fee:	3e 2e       	mov	r3, r30
     ff0:	2a c0       	rjmp	.+84     	; 0x1046 <vfprintf+0xe6>
     ff2:	f3 2d       	mov	r31, r3
     ff4:	f8 60       	ori	r31, 0x08	; 8
     ff6:	1d c0       	rjmp	.+58     	; 0x1032 <vfprintf+0xd2>
     ff8:	37 fc       	sbrc	r3, 7
     ffa:	2d c0       	rjmp	.+90     	; 0x1056 <vfprintf+0xf6>
     ffc:	20 ed       	ldi	r18, 0xD0	; 208
     ffe:	28 0f       	add	r18, r24
    1000:	2a 30       	cpi	r18, 0x0A	; 10
    1002:	40 f0       	brcs	.+16     	; 0x1014 <vfprintf+0xb4>
    1004:	8e 32       	cpi	r24, 0x2E	; 46
    1006:	b9 f4       	brne	.+46     	; 0x1036 <vfprintf+0xd6>
    1008:	36 fc       	sbrc	r3, 6
    100a:	81 c1       	rjmp	.+770    	; 0x130e <vfprintf+0x3ae>
    100c:	23 2d       	mov	r18, r3
    100e:	20 64       	ori	r18, 0x40	; 64
    1010:	32 2e       	mov	r3, r18
    1012:	19 c0       	rjmp	.+50     	; 0x1046 <vfprintf+0xe6>
    1014:	36 fe       	sbrs	r3, 6
    1016:	06 c0       	rjmp	.+12     	; 0x1024 <vfprintf+0xc4>
    1018:	8a e0       	ldi	r24, 0x0A	; 10
    101a:	98 9e       	mul	r9, r24
    101c:	20 0d       	add	r18, r0
    101e:	11 24       	eor	r1, r1
    1020:	92 2e       	mov	r9, r18
    1022:	11 c0       	rjmp	.+34     	; 0x1046 <vfprintf+0xe6>
    1024:	ea e0       	ldi	r30, 0x0A	; 10
    1026:	2e 9e       	mul	r2, r30
    1028:	20 0d       	add	r18, r0
    102a:	11 24       	eor	r1, r1
    102c:	22 2e       	mov	r2, r18
    102e:	f3 2d       	mov	r31, r3
    1030:	f0 62       	ori	r31, 0x20	; 32
    1032:	3f 2e       	mov	r3, r31
    1034:	08 c0       	rjmp	.+16     	; 0x1046 <vfprintf+0xe6>
    1036:	8c 36       	cpi	r24, 0x6C	; 108
    1038:	21 f4       	brne	.+8      	; 0x1042 <vfprintf+0xe2>
    103a:	83 2d       	mov	r24, r3
    103c:	80 68       	ori	r24, 0x80	; 128
    103e:	38 2e       	mov	r3, r24
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <vfprintf+0xe6>
    1042:	88 36       	cpi	r24, 0x68	; 104
    1044:	41 f4       	brne	.+16     	; 0x1056 <vfprintf+0xf6>
    1046:	f7 01       	movw	r30, r14
    1048:	93 fd       	sbrc	r25, 3
    104a:	85 91       	lpm	r24, Z+
    104c:	93 ff       	sbrs	r25, 3
    104e:	81 91       	ld	r24, Z+
    1050:	7f 01       	movw	r14, r30
    1052:	81 11       	cpse	r24, r1
    1054:	b3 cf       	rjmp	.-154    	; 0xfbc <vfprintf+0x5c>
    1056:	98 2f       	mov	r25, r24
    1058:	9f 7d       	andi	r25, 0xDF	; 223
    105a:	95 54       	subi	r25, 0x45	; 69
    105c:	93 30       	cpi	r25, 0x03	; 3
    105e:	28 f4       	brcc	.+10     	; 0x106a <vfprintf+0x10a>
    1060:	0c 5f       	subi	r16, 0xFC	; 252
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	9f e3       	ldi	r25, 0x3F	; 63
    1066:	99 83       	std	Y+1, r25	; 0x01
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <vfprintf+0x124>
    106a:	83 36       	cpi	r24, 0x63	; 99
    106c:	31 f0       	breq	.+12     	; 0x107a <vfprintf+0x11a>
    106e:	83 37       	cpi	r24, 0x73	; 115
    1070:	71 f0       	breq	.+28     	; 0x108e <vfprintf+0x12e>
    1072:	83 35       	cpi	r24, 0x53	; 83
    1074:	09 f0       	breq	.+2      	; 0x1078 <vfprintf+0x118>
    1076:	59 c0       	rjmp	.+178    	; 0x112a <vfprintf+0x1ca>
    1078:	21 c0       	rjmp	.+66     	; 0x10bc <vfprintf+0x15c>
    107a:	f8 01       	movw	r30, r16
    107c:	80 81       	ld	r24, Z
    107e:	89 83       	std	Y+1, r24	; 0x01
    1080:	0e 5f       	subi	r16, 0xFE	; 254
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	88 24       	eor	r8, r8
    1086:	83 94       	inc	r8
    1088:	91 2c       	mov	r9, r1
    108a:	53 01       	movw	r10, r6
    108c:	13 c0       	rjmp	.+38     	; 0x10b4 <vfprintf+0x154>
    108e:	28 01       	movw	r4, r16
    1090:	f2 e0       	ldi	r31, 0x02	; 2
    1092:	4f 0e       	add	r4, r31
    1094:	51 1c       	adc	r5, r1
    1096:	f8 01       	movw	r30, r16
    1098:	a0 80       	ld	r10, Z
    109a:	b1 80       	ldd	r11, Z+1	; 0x01
    109c:	36 fe       	sbrs	r3, 6
    109e:	03 c0       	rjmp	.+6      	; 0x10a6 <vfprintf+0x146>
    10a0:	69 2d       	mov	r22, r9
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <vfprintf+0x14a>
    10a6:	6f ef       	ldi	r22, 0xFF	; 255
    10a8:	7f ef       	ldi	r23, 0xFF	; 255
    10aa:	c5 01       	movw	r24, r10
    10ac:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <strnlen>
    10b0:	4c 01       	movw	r8, r24
    10b2:	82 01       	movw	r16, r4
    10b4:	f3 2d       	mov	r31, r3
    10b6:	ff 77       	andi	r31, 0x7F	; 127
    10b8:	3f 2e       	mov	r3, r31
    10ba:	16 c0       	rjmp	.+44     	; 0x10e8 <vfprintf+0x188>
    10bc:	28 01       	movw	r4, r16
    10be:	22 e0       	ldi	r18, 0x02	; 2
    10c0:	42 0e       	add	r4, r18
    10c2:	51 1c       	adc	r5, r1
    10c4:	f8 01       	movw	r30, r16
    10c6:	a0 80       	ld	r10, Z
    10c8:	b1 80       	ldd	r11, Z+1	; 0x01
    10ca:	36 fe       	sbrs	r3, 6
    10cc:	03 c0       	rjmp	.+6      	; 0x10d4 <vfprintf+0x174>
    10ce:	69 2d       	mov	r22, r9
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <vfprintf+0x178>
    10d4:	6f ef       	ldi	r22, 0xFF	; 255
    10d6:	7f ef       	ldi	r23, 0xFF	; 255
    10d8:	c5 01       	movw	r24, r10
    10da:	0e 94 ce 0a 	call	0x159c	; 0x159c <strnlen_P>
    10de:	4c 01       	movw	r8, r24
    10e0:	f3 2d       	mov	r31, r3
    10e2:	f0 68       	ori	r31, 0x80	; 128
    10e4:	3f 2e       	mov	r3, r31
    10e6:	82 01       	movw	r16, r4
    10e8:	33 fc       	sbrc	r3, 3
    10ea:	1b c0       	rjmp	.+54     	; 0x1122 <vfprintf+0x1c2>
    10ec:	82 2d       	mov	r24, r2
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	88 16       	cp	r8, r24
    10f2:	99 06       	cpc	r9, r25
    10f4:	b0 f4       	brcc	.+44     	; 0x1122 <vfprintf+0x1c2>
    10f6:	b6 01       	movw	r22, r12
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    1100:	2a 94       	dec	r2
    1102:	f4 cf       	rjmp	.-24     	; 0x10ec <vfprintf+0x18c>
    1104:	f5 01       	movw	r30, r10
    1106:	37 fc       	sbrc	r3, 7
    1108:	85 91       	lpm	r24, Z+
    110a:	37 fe       	sbrs	r3, 7
    110c:	81 91       	ld	r24, Z+
    110e:	5f 01       	movw	r10, r30
    1110:	b6 01       	movw	r22, r12
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    1118:	21 10       	cpse	r2, r1
    111a:	2a 94       	dec	r2
    111c:	21 e0       	ldi	r18, 0x01	; 1
    111e:	82 1a       	sub	r8, r18
    1120:	91 08       	sbc	r9, r1
    1122:	81 14       	cp	r8, r1
    1124:	91 04       	cpc	r9, r1
    1126:	71 f7       	brne	.-36     	; 0x1104 <vfprintf+0x1a4>
    1128:	e8 c0       	rjmp	.+464    	; 0x12fa <vfprintf+0x39a>
    112a:	84 36       	cpi	r24, 0x64	; 100
    112c:	11 f0       	breq	.+4      	; 0x1132 <vfprintf+0x1d2>
    112e:	89 36       	cpi	r24, 0x69	; 105
    1130:	41 f5       	brne	.+80     	; 0x1182 <vfprintf+0x222>
    1132:	f8 01       	movw	r30, r16
    1134:	37 fe       	sbrs	r3, 7
    1136:	07 c0       	rjmp	.+14     	; 0x1146 <vfprintf+0x1e6>
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	0c 5f       	subi	r16, 0xFC	; 252
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	08 c0       	rjmp	.+16     	; 0x1156 <vfprintf+0x1f6>
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	07 2e       	mov	r0, r23
    114c:	00 0c       	add	r0, r0
    114e:	88 0b       	sbc	r24, r24
    1150:	99 0b       	sbc	r25, r25
    1152:	0e 5f       	subi	r16, 0xFE	; 254
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	f3 2d       	mov	r31, r3
    1158:	ff 76       	andi	r31, 0x6F	; 111
    115a:	3f 2e       	mov	r3, r31
    115c:	97 ff       	sbrs	r25, 7
    115e:	09 c0       	rjmp	.+18     	; 0x1172 <vfprintf+0x212>
    1160:	90 95       	com	r25
    1162:	80 95       	com	r24
    1164:	70 95       	com	r23
    1166:	61 95       	neg	r22
    1168:	7f 4f       	sbci	r23, 0xFF	; 255
    116a:	8f 4f       	sbci	r24, 0xFF	; 255
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	f0 68       	ori	r31, 0x80	; 128
    1170:	3f 2e       	mov	r3, r31
    1172:	2a e0       	ldi	r18, 0x0A	; 10
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	a3 01       	movw	r20, r6
    1178:	0e 94 27 0b 	call	0x164e	; 0x164e <__ultoa_invert>
    117c:	88 2e       	mov	r8, r24
    117e:	86 18       	sub	r8, r6
    1180:	45 c0       	rjmp	.+138    	; 0x120c <vfprintf+0x2ac>
    1182:	85 37       	cpi	r24, 0x75	; 117
    1184:	31 f4       	brne	.+12     	; 0x1192 <vfprintf+0x232>
    1186:	23 2d       	mov	r18, r3
    1188:	2f 7e       	andi	r18, 0xEF	; 239
    118a:	b2 2e       	mov	r11, r18
    118c:	2a e0       	ldi	r18, 0x0A	; 10
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	25 c0       	rjmp	.+74     	; 0x11dc <vfprintf+0x27c>
    1192:	93 2d       	mov	r25, r3
    1194:	99 7f       	andi	r25, 0xF9	; 249
    1196:	b9 2e       	mov	r11, r25
    1198:	8f 36       	cpi	r24, 0x6F	; 111
    119a:	c1 f0       	breq	.+48     	; 0x11cc <vfprintf+0x26c>
    119c:	18 f4       	brcc	.+6      	; 0x11a4 <vfprintf+0x244>
    119e:	88 35       	cpi	r24, 0x58	; 88
    11a0:	79 f0       	breq	.+30     	; 0x11c0 <vfprintf+0x260>
    11a2:	b5 c0       	rjmp	.+362    	; 0x130e <vfprintf+0x3ae>
    11a4:	80 37       	cpi	r24, 0x70	; 112
    11a6:	19 f0       	breq	.+6      	; 0x11ae <vfprintf+0x24e>
    11a8:	88 37       	cpi	r24, 0x78	; 120
    11aa:	21 f0       	breq	.+8      	; 0x11b4 <vfprintf+0x254>
    11ac:	b0 c0       	rjmp	.+352    	; 0x130e <vfprintf+0x3ae>
    11ae:	e9 2f       	mov	r30, r25
    11b0:	e0 61       	ori	r30, 0x10	; 16
    11b2:	be 2e       	mov	r11, r30
    11b4:	b4 fe       	sbrs	r11, 4
    11b6:	0d c0       	rjmp	.+26     	; 0x11d2 <vfprintf+0x272>
    11b8:	fb 2d       	mov	r31, r11
    11ba:	f4 60       	ori	r31, 0x04	; 4
    11bc:	bf 2e       	mov	r11, r31
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x272>
    11c0:	34 fe       	sbrs	r3, 4
    11c2:	0a c0       	rjmp	.+20     	; 0x11d8 <vfprintf+0x278>
    11c4:	29 2f       	mov	r18, r25
    11c6:	26 60       	ori	r18, 0x06	; 6
    11c8:	b2 2e       	mov	r11, r18
    11ca:	06 c0       	rjmp	.+12     	; 0x11d8 <vfprintf+0x278>
    11cc:	28 e0       	ldi	r18, 0x08	; 8
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	05 c0       	rjmp	.+10     	; 0x11dc <vfprintf+0x27c>
    11d2:	20 e1       	ldi	r18, 0x10	; 16
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x27c>
    11d8:	20 e1       	ldi	r18, 0x10	; 16
    11da:	32 e0       	ldi	r19, 0x02	; 2
    11dc:	f8 01       	movw	r30, r16
    11de:	b7 fe       	sbrs	r11, 7
    11e0:	07 c0       	rjmp	.+14     	; 0x11f0 <vfprintf+0x290>
    11e2:	60 81       	ld	r22, Z
    11e4:	71 81       	ldd	r23, Z+1	; 0x01
    11e6:	82 81       	ldd	r24, Z+2	; 0x02
    11e8:	93 81       	ldd	r25, Z+3	; 0x03
    11ea:	0c 5f       	subi	r16, 0xFC	; 252
    11ec:	1f 4f       	sbci	r17, 0xFF	; 255
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <vfprintf+0x29c>
    11f0:	60 81       	ld	r22, Z
    11f2:	71 81       	ldd	r23, Z+1	; 0x01
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	0e 5f       	subi	r16, 0xFE	; 254
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	a3 01       	movw	r20, r6
    11fe:	0e 94 27 0b 	call	0x164e	; 0x164e <__ultoa_invert>
    1202:	88 2e       	mov	r8, r24
    1204:	86 18       	sub	r8, r6
    1206:	fb 2d       	mov	r31, r11
    1208:	ff 77       	andi	r31, 0x7F	; 127
    120a:	3f 2e       	mov	r3, r31
    120c:	36 fe       	sbrs	r3, 6
    120e:	0d c0       	rjmp	.+26     	; 0x122a <vfprintf+0x2ca>
    1210:	23 2d       	mov	r18, r3
    1212:	2e 7f       	andi	r18, 0xFE	; 254
    1214:	a2 2e       	mov	r10, r18
    1216:	89 14       	cp	r8, r9
    1218:	58 f4       	brcc	.+22     	; 0x1230 <vfprintf+0x2d0>
    121a:	34 fe       	sbrs	r3, 4
    121c:	0b c0       	rjmp	.+22     	; 0x1234 <vfprintf+0x2d4>
    121e:	32 fc       	sbrc	r3, 2
    1220:	09 c0       	rjmp	.+18     	; 0x1234 <vfprintf+0x2d4>
    1222:	83 2d       	mov	r24, r3
    1224:	8e 7e       	andi	r24, 0xEE	; 238
    1226:	a8 2e       	mov	r10, r24
    1228:	05 c0       	rjmp	.+10     	; 0x1234 <vfprintf+0x2d4>
    122a:	b8 2c       	mov	r11, r8
    122c:	a3 2c       	mov	r10, r3
    122e:	03 c0       	rjmp	.+6      	; 0x1236 <vfprintf+0x2d6>
    1230:	b8 2c       	mov	r11, r8
    1232:	01 c0       	rjmp	.+2      	; 0x1236 <vfprintf+0x2d6>
    1234:	b9 2c       	mov	r11, r9
    1236:	a4 fe       	sbrs	r10, 4
    1238:	0f c0       	rjmp	.+30     	; 0x1258 <vfprintf+0x2f8>
    123a:	fe 01       	movw	r30, r28
    123c:	e8 0d       	add	r30, r8
    123e:	f1 1d       	adc	r31, r1
    1240:	80 81       	ld	r24, Z
    1242:	80 33       	cpi	r24, 0x30	; 48
    1244:	21 f4       	brne	.+8      	; 0x124e <vfprintf+0x2ee>
    1246:	9a 2d       	mov	r25, r10
    1248:	99 7e       	andi	r25, 0xE9	; 233
    124a:	a9 2e       	mov	r10, r25
    124c:	09 c0       	rjmp	.+18     	; 0x1260 <vfprintf+0x300>
    124e:	a2 fe       	sbrs	r10, 2
    1250:	06 c0       	rjmp	.+12     	; 0x125e <vfprintf+0x2fe>
    1252:	b3 94       	inc	r11
    1254:	b3 94       	inc	r11
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <vfprintf+0x300>
    1258:	8a 2d       	mov	r24, r10
    125a:	86 78       	andi	r24, 0x86	; 134
    125c:	09 f0       	breq	.+2      	; 0x1260 <vfprintf+0x300>
    125e:	b3 94       	inc	r11
    1260:	a3 fc       	sbrc	r10, 3
    1262:	11 c0       	rjmp	.+34     	; 0x1286 <vfprintf+0x326>
    1264:	a0 fe       	sbrs	r10, 0
    1266:	06 c0       	rjmp	.+12     	; 0x1274 <vfprintf+0x314>
    1268:	b2 14       	cp	r11, r2
    126a:	88 f4       	brcc	.+34     	; 0x128e <vfprintf+0x32e>
    126c:	28 0c       	add	r2, r8
    126e:	92 2c       	mov	r9, r2
    1270:	9b 18       	sub	r9, r11
    1272:	0e c0       	rjmp	.+28     	; 0x1290 <vfprintf+0x330>
    1274:	b2 14       	cp	r11, r2
    1276:	60 f4       	brcc	.+24     	; 0x1290 <vfprintf+0x330>
    1278:	b6 01       	movw	r22, r12
    127a:	80 e2       	ldi	r24, 0x20	; 32
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    1282:	b3 94       	inc	r11
    1284:	f7 cf       	rjmp	.-18     	; 0x1274 <vfprintf+0x314>
    1286:	b2 14       	cp	r11, r2
    1288:	18 f4       	brcc	.+6      	; 0x1290 <vfprintf+0x330>
    128a:	2b 18       	sub	r2, r11
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <vfprintf+0x332>
    128e:	98 2c       	mov	r9, r8
    1290:	21 2c       	mov	r2, r1
    1292:	a4 fe       	sbrs	r10, 4
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <vfprintf+0x356>
    1296:	b6 01       	movw	r22, r12
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    12a0:	a2 fe       	sbrs	r10, 2
    12a2:	17 c0       	rjmp	.+46     	; 0x12d2 <vfprintf+0x372>
    12a4:	a1 fc       	sbrc	r10, 1
    12a6:	03 c0       	rjmp	.+6      	; 0x12ae <vfprintf+0x34e>
    12a8:	88 e7       	ldi	r24, 0x78	; 120
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <vfprintf+0x352>
    12ae:	88 e5       	ldi	r24, 0x58	; 88
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	b6 01       	movw	r22, r12
    12b4:	0c c0       	rjmp	.+24     	; 0x12ce <vfprintf+0x36e>
    12b6:	8a 2d       	mov	r24, r10
    12b8:	86 78       	andi	r24, 0x86	; 134
    12ba:	59 f0       	breq	.+22     	; 0x12d2 <vfprintf+0x372>
    12bc:	a1 fe       	sbrs	r10, 1
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <vfprintf+0x364>
    12c0:	8b e2       	ldi	r24, 0x2B	; 43
    12c2:	01 c0       	rjmp	.+2      	; 0x12c6 <vfprintf+0x366>
    12c4:	80 e2       	ldi	r24, 0x20	; 32
    12c6:	a7 fc       	sbrc	r10, 7
    12c8:	8d e2       	ldi	r24, 0x2D	; 45
    12ca:	b6 01       	movw	r22, r12
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    12d2:	89 14       	cp	r8, r9
    12d4:	38 f4       	brcc	.+14     	; 0x12e4 <vfprintf+0x384>
    12d6:	b6 01       	movw	r22, r12
    12d8:	80 e3       	ldi	r24, 0x30	; 48
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    12e0:	9a 94       	dec	r9
    12e2:	f7 cf       	rjmp	.-18     	; 0x12d2 <vfprintf+0x372>
    12e4:	8a 94       	dec	r8
    12e6:	f3 01       	movw	r30, r6
    12e8:	e8 0d       	add	r30, r8
    12ea:	f1 1d       	adc	r31, r1
    12ec:	80 81       	ld	r24, Z
    12ee:	b6 01       	movw	r22, r12
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    12f6:	81 10       	cpse	r8, r1
    12f8:	f5 cf       	rjmp	.-22     	; 0x12e4 <vfprintf+0x384>
    12fa:	22 20       	and	r2, r2
    12fc:	09 f4       	brne	.+2      	; 0x1300 <vfprintf+0x3a0>
    12fe:	42 ce       	rjmp	.-892    	; 0xf84 <vfprintf+0x24>
    1300:	b6 01       	movw	r22, r12
    1302:	80 e2       	ldi	r24, 0x20	; 32
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <fputc>
    130a:	2a 94       	dec	r2
    130c:	f6 cf       	rjmp	.-20     	; 0x12fa <vfprintf+0x39a>
    130e:	f6 01       	movw	r30, r12
    1310:	86 81       	ldd	r24, Z+6	; 0x06
    1312:	97 81       	ldd	r25, Z+7	; 0x07
    1314:	02 c0       	rjmp	.+4      	; 0x131a <vfprintf+0x3ba>
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	2b 96       	adiw	r28, 0x0b	; 11
    131c:	e2 e1       	ldi	r30, 0x12	; 18
    131e:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__epilogue_restores__>

00001322 <calloc>:
    1322:	0f 93       	push	r16
    1324:	1f 93       	push	r17
    1326:	cf 93       	push	r28
    1328:	df 93       	push	r29
    132a:	86 9f       	mul	r24, r22
    132c:	80 01       	movw	r16, r0
    132e:	87 9f       	mul	r24, r23
    1330:	10 0d       	add	r17, r0
    1332:	96 9f       	mul	r25, r22
    1334:	10 0d       	add	r17, r0
    1336:	11 24       	eor	r1, r1
    1338:	c8 01       	movw	r24, r16
    133a:	0e 94 ad 09 	call	0x135a	; 0x135a <malloc>
    133e:	ec 01       	movw	r28, r24
    1340:	00 97       	sbiw	r24, 0x00	; 0
    1342:	29 f0       	breq	.+10     	; 0x134e <calloc+0x2c>
    1344:	a8 01       	movw	r20, r16
    1346:	60 e0       	ldi	r22, 0x00	; 0
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <memset>
    134e:	ce 01       	movw	r24, r28
    1350:	df 91       	pop	r29
    1352:	cf 91       	pop	r28
    1354:	1f 91       	pop	r17
    1356:	0f 91       	pop	r16
    1358:	08 95       	ret

0000135a <malloc>:
    135a:	0f 93       	push	r16
    135c:	1f 93       	push	r17
    135e:	cf 93       	push	r28
    1360:	df 93       	push	r29
    1362:	82 30       	cpi	r24, 0x02	; 2
    1364:	91 05       	cpc	r25, r1
    1366:	10 f4       	brcc	.+4      	; 0x136c <malloc+0x12>
    1368:	82 e0       	ldi	r24, 0x02	; 2
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <__flp>
    1370:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <__flp+0x1>
    1374:	20 e0       	ldi	r18, 0x00	; 0
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	a0 e0       	ldi	r26, 0x00	; 0
    137a:	b0 e0       	ldi	r27, 0x00	; 0
    137c:	30 97       	sbiw	r30, 0x00	; 0
    137e:	19 f1       	breq	.+70     	; 0x13c6 <malloc+0x6c>
    1380:	40 81       	ld	r20, Z
    1382:	51 81       	ldd	r21, Z+1	; 0x01
    1384:	02 81       	ldd	r16, Z+2	; 0x02
    1386:	13 81       	ldd	r17, Z+3	; 0x03
    1388:	48 17       	cp	r20, r24
    138a:	59 07       	cpc	r21, r25
    138c:	c8 f0       	brcs	.+50     	; 0x13c0 <malloc+0x66>
    138e:	84 17       	cp	r24, r20
    1390:	95 07       	cpc	r25, r21
    1392:	69 f4       	brne	.+26     	; 0x13ae <malloc+0x54>
    1394:	10 97       	sbiw	r26, 0x00	; 0
    1396:	31 f0       	breq	.+12     	; 0x13a4 <malloc+0x4a>
    1398:	12 96       	adiw	r26, 0x02	; 2
    139a:	0c 93       	st	X, r16
    139c:	12 97       	sbiw	r26, 0x02	; 2
    139e:	13 96       	adiw	r26, 0x03	; 3
    13a0:	1c 93       	st	X, r17
    13a2:	27 c0       	rjmp	.+78     	; 0x13f2 <malloc+0x98>
    13a4:	00 93 a2 01 	sts	0x01A2, r16	; 0x8001a2 <__flp>
    13a8:	10 93 a3 01 	sts	0x01A3, r17	; 0x8001a3 <__flp+0x1>
    13ac:	22 c0       	rjmp	.+68     	; 0x13f2 <malloc+0x98>
    13ae:	21 15       	cp	r18, r1
    13b0:	31 05       	cpc	r19, r1
    13b2:	19 f0       	breq	.+6      	; 0x13ba <malloc+0x60>
    13b4:	42 17       	cp	r20, r18
    13b6:	53 07       	cpc	r21, r19
    13b8:	18 f4       	brcc	.+6      	; 0x13c0 <malloc+0x66>
    13ba:	9a 01       	movw	r18, r20
    13bc:	bd 01       	movw	r22, r26
    13be:	ef 01       	movw	r28, r30
    13c0:	df 01       	movw	r26, r30
    13c2:	f8 01       	movw	r30, r16
    13c4:	db cf       	rjmp	.-74     	; 0x137c <malloc+0x22>
    13c6:	21 15       	cp	r18, r1
    13c8:	31 05       	cpc	r19, r1
    13ca:	f9 f0       	breq	.+62     	; 0x140a <malloc+0xb0>
    13cc:	28 1b       	sub	r18, r24
    13ce:	39 0b       	sbc	r19, r25
    13d0:	24 30       	cpi	r18, 0x04	; 4
    13d2:	31 05       	cpc	r19, r1
    13d4:	80 f4       	brcc	.+32     	; 0x13f6 <malloc+0x9c>
    13d6:	8a 81       	ldd	r24, Y+2	; 0x02
    13d8:	9b 81       	ldd	r25, Y+3	; 0x03
    13da:	61 15       	cp	r22, r1
    13dc:	71 05       	cpc	r23, r1
    13de:	21 f0       	breq	.+8      	; 0x13e8 <malloc+0x8e>
    13e0:	fb 01       	movw	r30, r22
    13e2:	93 83       	std	Z+3, r25	; 0x03
    13e4:	82 83       	std	Z+2, r24	; 0x02
    13e6:	04 c0       	rjmp	.+8      	; 0x13f0 <malloc+0x96>
    13e8:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <__flp+0x1>
    13ec:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__flp>
    13f0:	fe 01       	movw	r30, r28
    13f2:	32 96       	adiw	r30, 0x02	; 2
    13f4:	44 c0       	rjmp	.+136    	; 0x147e <malloc+0x124>
    13f6:	fe 01       	movw	r30, r28
    13f8:	e2 0f       	add	r30, r18
    13fa:	f3 1f       	adc	r31, r19
    13fc:	81 93       	st	Z+, r24
    13fe:	91 93       	st	Z+, r25
    1400:	22 50       	subi	r18, 0x02	; 2
    1402:	31 09       	sbc	r19, r1
    1404:	39 83       	std	Y+1, r19	; 0x01
    1406:	28 83       	st	Y, r18
    1408:	3a c0       	rjmp	.+116    	; 0x147e <malloc+0x124>
    140a:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
    140e:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
    1412:	23 2b       	or	r18, r19
    1414:	41 f4       	brne	.+16     	; 0x1426 <malloc+0xcc>
    1416:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    141a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    141e:	30 93 a1 01 	sts	0x01A1, r19	; 0x8001a1 <__brkval+0x1>
    1422:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <__brkval>
    1426:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    142a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    142e:	21 15       	cp	r18, r1
    1430:	31 05       	cpc	r19, r1
    1432:	41 f4       	brne	.+16     	; 0x1444 <malloc+0xea>
    1434:	2d b7       	in	r18, 0x3d	; 61
    1436:	3e b7       	in	r19, 0x3e	; 62
    1438:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    143c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1440:	24 1b       	sub	r18, r20
    1442:	35 0b       	sbc	r19, r21
    1444:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <__brkval>
    1448:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <__brkval+0x1>
    144c:	e2 17       	cp	r30, r18
    144e:	f3 07       	cpc	r31, r19
    1450:	a0 f4       	brcc	.+40     	; 0x147a <malloc+0x120>
    1452:	2e 1b       	sub	r18, r30
    1454:	3f 0b       	sbc	r19, r31
    1456:	28 17       	cp	r18, r24
    1458:	39 07       	cpc	r19, r25
    145a:	78 f0       	brcs	.+30     	; 0x147a <malloc+0x120>
    145c:	ac 01       	movw	r20, r24
    145e:	4e 5f       	subi	r20, 0xFE	; 254
    1460:	5f 4f       	sbci	r21, 0xFF	; 255
    1462:	24 17       	cp	r18, r20
    1464:	35 07       	cpc	r19, r21
    1466:	48 f0       	brcs	.+18     	; 0x147a <malloc+0x120>
    1468:	4e 0f       	add	r20, r30
    146a:	5f 1f       	adc	r21, r31
    146c:	50 93 a1 01 	sts	0x01A1, r21	; 0x8001a1 <__brkval+0x1>
    1470:	40 93 a0 01 	sts	0x01A0, r20	; 0x8001a0 <__brkval>
    1474:	81 93       	st	Z+, r24
    1476:	91 93       	st	Z+, r25
    1478:	02 c0       	rjmp	.+4      	; 0x147e <malloc+0x124>
    147a:	e0 e0       	ldi	r30, 0x00	; 0
    147c:	f0 e0       	ldi	r31, 0x00	; 0
    147e:	cf 01       	movw	r24, r30
    1480:	df 91       	pop	r29
    1482:	cf 91       	pop	r28
    1484:	1f 91       	pop	r17
    1486:	0f 91       	pop	r16
    1488:	08 95       	ret

0000148a <free>:
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	09 f4       	brne	.+2      	; 0x1494 <free+0xa>
    1492:	81 c0       	rjmp	.+258    	; 0x1596 <free+0x10c>
    1494:	fc 01       	movw	r30, r24
    1496:	32 97       	sbiw	r30, 0x02	; 2
    1498:	13 82       	std	Z+3, r1	; 0x03
    149a:	12 82       	std	Z+2, r1	; 0x02
    149c:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <__flp>
    14a0:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <__flp+0x1>
    14a4:	10 97       	sbiw	r26, 0x00	; 0
    14a6:	81 f4       	brne	.+32     	; 0x14c8 <free+0x3e>
    14a8:	20 81       	ld	r18, Z
    14aa:	31 81       	ldd	r19, Z+1	; 0x01
    14ac:	82 0f       	add	r24, r18
    14ae:	93 1f       	adc	r25, r19
    14b0:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
    14b4:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
    14b8:	28 17       	cp	r18, r24
    14ba:	39 07       	cpc	r19, r25
    14bc:	51 f5       	brne	.+84     	; 0x1512 <free+0x88>
    14be:	f0 93 a1 01 	sts	0x01A1, r31	; 0x8001a1 <__brkval+0x1>
    14c2:	e0 93 a0 01 	sts	0x01A0, r30	; 0x8001a0 <__brkval>
    14c6:	67 c0       	rjmp	.+206    	; 0x1596 <free+0x10c>
    14c8:	ed 01       	movw	r28, r26
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	ce 17       	cp	r28, r30
    14d0:	df 07       	cpc	r29, r31
    14d2:	40 f4       	brcc	.+16     	; 0x14e4 <free+0x5a>
    14d4:	4a 81       	ldd	r20, Y+2	; 0x02
    14d6:	5b 81       	ldd	r21, Y+3	; 0x03
    14d8:	9e 01       	movw	r18, r28
    14da:	41 15       	cp	r20, r1
    14dc:	51 05       	cpc	r21, r1
    14de:	f1 f0       	breq	.+60     	; 0x151c <free+0x92>
    14e0:	ea 01       	movw	r28, r20
    14e2:	f5 cf       	rjmp	.-22     	; 0x14ce <free+0x44>
    14e4:	d3 83       	std	Z+3, r29	; 0x03
    14e6:	c2 83       	std	Z+2, r28	; 0x02
    14e8:	40 81       	ld	r20, Z
    14ea:	51 81       	ldd	r21, Z+1	; 0x01
    14ec:	84 0f       	add	r24, r20
    14ee:	95 1f       	adc	r25, r21
    14f0:	c8 17       	cp	r28, r24
    14f2:	d9 07       	cpc	r29, r25
    14f4:	59 f4       	brne	.+22     	; 0x150c <free+0x82>
    14f6:	88 81       	ld	r24, Y
    14f8:	99 81       	ldd	r25, Y+1	; 0x01
    14fa:	84 0f       	add	r24, r20
    14fc:	95 1f       	adc	r25, r21
    14fe:	02 96       	adiw	r24, 0x02	; 2
    1500:	91 83       	std	Z+1, r25	; 0x01
    1502:	80 83       	st	Z, r24
    1504:	8a 81       	ldd	r24, Y+2	; 0x02
    1506:	9b 81       	ldd	r25, Y+3	; 0x03
    1508:	93 83       	std	Z+3, r25	; 0x03
    150a:	82 83       	std	Z+2, r24	; 0x02
    150c:	21 15       	cp	r18, r1
    150e:	31 05       	cpc	r19, r1
    1510:	29 f4       	brne	.+10     	; 0x151c <free+0x92>
    1512:	f0 93 a3 01 	sts	0x01A3, r31	; 0x8001a3 <__flp+0x1>
    1516:	e0 93 a2 01 	sts	0x01A2, r30	; 0x8001a2 <__flp>
    151a:	3d c0       	rjmp	.+122    	; 0x1596 <free+0x10c>
    151c:	e9 01       	movw	r28, r18
    151e:	fb 83       	std	Y+3, r31	; 0x03
    1520:	ea 83       	std	Y+2, r30	; 0x02
    1522:	49 91       	ld	r20, Y+
    1524:	59 91       	ld	r21, Y+
    1526:	c4 0f       	add	r28, r20
    1528:	d5 1f       	adc	r29, r21
    152a:	ec 17       	cp	r30, r28
    152c:	fd 07       	cpc	r31, r29
    152e:	61 f4       	brne	.+24     	; 0x1548 <free+0xbe>
    1530:	80 81       	ld	r24, Z
    1532:	91 81       	ldd	r25, Z+1	; 0x01
    1534:	84 0f       	add	r24, r20
    1536:	95 1f       	adc	r25, r21
    1538:	02 96       	adiw	r24, 0x02	; 2
    153a:	e9 01       	movw	r28, r18
    153c:	99 83       	std	Y+1, r25	; 0x01
    153e:	88 83       	st	Y, r24
    1540:	82 81       	ldd	r24, Z+2	; 0x02
    1542:	93 81       	ldd	r25, Z+3	; 0x03
    1544:	9b 83       	std	Y+3, r25	; 0x03
    1546:	8a 83       	std	Y+2, r24	; 0x02
    1548:	e0 e0       	ldi	r30, 0x00	; 0
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	12 96       	adiw	r26, 0x02	; 2
    154e:	8d 91       	ld	r24, X+
    1550:	9c 91       	ld	r25, X
    1552:	13 97       	sbiw	r26, 0x03	; 3
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	19 f0       	breq	.+6      	; 0x155e <free+0xd4>
    1558:	fd 01       	movw	r30, r26
    155a:	dc 01       	movw	r26, r24
    155c:	f7 cf       	rjmp	.-18     	; 0x154c <free+0xc2>
    155e:	8d 91       	ld	r24, X+
    1560:	9c 91       	ld	r25, X
    1562:	11 97       	sbiw	r26, 0x01	; 1
    1564:	9d 01       	movw	r18, r26
    1566:	2e 5f       	subi	r18, 0xFE	; 254
    1568:	3f 4f       	sbci	r19, 0xFF	; 255
    156a:	82 0f       	add	r24, r18
    156c:	93 1f       	adc	r25, r19
    156e:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__brkval>
    1572:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <__brkval+0x1>
    1576:	28 17       	cp	r18, r24
    1578:	39 07       	cpc	r19, r25
    157a:	69 f4       	brne	.+26     	; 0x1596 <free+0x10c>
    157c:	30 97       	sbiw	r30, 0x00	; 0
    157e:	29 f4       	brne	.+10     	; 0x158a <free+0x100>
    1580:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <__flp+0x1>
    1584:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <__flp>
    1588:	02 c0       	rjmp	.+4      	; 0x158e <free+0x104>
    158a:	13 82       	std	Z+3, r1	; 0x03
    158c:	12 82       	std	Z+2, r1	; 0x02
    158e:	b0 93 a1 01 	sts	0x01A1, r27	; 0x8001a1 <__brkval+0x1>
    1592:	a0 93 a0 01 	sts	0x01A0, r26	; 0x8001a0 <__brkval>
    1596:	df 91       	pop	r29
    1598:	cf 91       	pop	r28
    159a:	08 95       	ret

0000159c <strnlen_P>:
    159c:	fc 01       	movw	r30, r24
    159e:	05 90       	lpm	r0, Z+
    15a0:	61 50       	subi	r22, 0x01	; 1
    15a2:	70 40       	sbci	r23, 0x00	; 0
    15a4:	01 10       	cpse	r0, r1
    15a6:	d8 f7       	brcc	.-10     	; 0x159e <strnlen_P+0x2>
    15a8:	80 95       	com	r24
    15aa:	90 95       	com	r25
    15ac:	8e 0f       	add	r24, r30
    15ae:	9f 1f       	adc	r25, r31
    15b0:	08 95       	ret

000015b2 <memset>:
    15b2:	dc 01       	movw	r26, r24
    15b4:	01 c0       	rjmp	.+2      	; 0x15b8 <memset+0x6>
    15b6:	6d 93       	st	X+, r22
    15b8:	41 50       	subi	r20, 0x01	; 1
    15ba:	50 40       	sbci	r21, 0x00	; 0
    15bc:	e0 f7       	brcc	.-8      	; 0x15b6 <memset+0x4>
    15be:	08 95       	ret

000015c0 <strnlen>:
    15c0:	fc 01       	movw	r30, r24
    15c2:	61 50       	subi	r22, 0x01	; 1
    15c4:	70 40       	sbci	r23, 0x00	; 0
    15c6:	01 90       	ld	r0, Z+
    15c8:	01 10       	cpse	r0, r1
    15ca:	d8 f7       	brcc	.-10     	; 0x15c2 <strnlen+0x2>
    15cc:	80 95       	com	r24
    15ce:	90 95       	com	r25
    15d0:	8e 0f       	add	r24, r30
    15d2:	9f 1f       	adc	r25, r31
    15d4:	08 95       	ret

000015d6 <fputc>:
    15d6:	0f 93       	push	r16
    15d8:	1f 93       	push	r17
    15da:	cf 93       	push	r28
    15dc:	df 93       	push	r29
    15de:	fb 01       	movw	r30, r22
    15e0:	23 81       	ldd	r18, Z+3	; 0x03
    15e2:	21 fd       	sbrc	r18, 1
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <fputc+0x16>
    15e6:	8f ef       	ldi	r24, 0xFF	; 255
    15e8:	9f ef       	ldi	r25, 0xFF	; 255
    15ea:	2c c0       	rjmp	.+88     	; 0x1644 <fputc+0x6e>
    15ec:	22 ff       	sbrs	r18, 2
    15ee:	16 c0       	rjmp	.+44     	; 0x161c <fputc+0x46>
    15f0:	46 81       	ldd	r20, Z+6	; 0x06
    15f2:	57 81       	ldd	r21, Z+7	; 0x07
    15f4:	24 81       	ldd	r18, Z+4	; 0x04
    15f6:	35 81       	ldd	r19, Z+5	; 0x05
    15f8:	42 17       	cp	r20, r18
    15fa:	53 07       	cpc	r21, r19
    15fc:	44 f4       	brge	.+16     	; 0x160e <fputc+0x38>
    15fe:	a0 81       	ld	r26, Z
    1600:	b1 81       	ldd	r27, Z+1	; 0x01
    1602:	9d 01       	movw	r18, r26
    1604:	2f 5f       	subi	r18, 0xFF	; 255
    1606:	3f 4f       	sbci	r19, 0xFF	; 255
    1608:	31 83       	std	Z+1, r19	; 0x01
    160a:	20 83       	st	Z, r18
    160c:	8c 93       	st	X, r24
    160e:	26 81       	ldd	r18, Z+6	; 0x06
    1610:	37 81       	ldd	r19, Z+7	; 0x07
    1612:	2f 5f       	subi	r18, 0xFF	; 255
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	37 83       	std	Z+7, r19	; 0x07
    1618:	26 83       	std	Z+6, r18	; 0x06
    161a:	14 c0       	rjmp	.+40     	; 0x1644 <fputc+0x6e>
    161c:	8b 01       	movw	r16, r22
    161e:	ec 01       	movw	r28, r24
    1620:	fb 01       	movw	r30, r22
    1622:	00 84       	ldd	r0, Z+8	; 0x08
    1624:	f1 85       	ldd	r31, Z+9	; 0x09
    1626:	e0 2d       	mov	r30, r0
    1628:	09 95       	icall
    162a:	89 2b       	or	r24, r25
    162c:	e1 f6       	brne	.-72     	; 0x15e6 <fputc+0x10>
    162e:	d8 01       	movw	r26, r16
    1630:	16 96       	adiw	r26, 0x06	; 6
    1632:	8d 91       	ld	r24, X+
    1634:	9c 91       	ld	r25, X
    1636:	17 97       	sbiw	r26, 0x07	; 7
    1638:	01 96       	adiw	r24, 0x01	; 1
    163a:	17 96       	adiw	r26, 0x07	; 7
    163c:	9c 93       	st	X, r25
    163e:	8e 93       	st	-X, r24
    1640:	16 97       	sbiw	r26, 0x06	; 6
    1642:	ce 01       	movw	r24, r28
    1644:	df 91       	pop	r29
    1646:	cf 91       	pop	r28
    1648:	1f 91       	pop	r17
    164a:	0f 91       	pop	r16
    164c:	08 95       	ret

0000164e <__ultoa_invert>:
    164e:	fa 01       	movw	r30, r20
    1650:	aa 27       	eor	r26, r26
    1652:	28 30       	cpi	r18, 0x08	; 8
    1654:	51 f1       	breq	.+84     	; 0x16aa <__ultoa_invert+0x5c>
    1656:	20 31       	cpi	r18, 0x10	; 16
    1658:	81 f1       	breq	.+96     	; 0x16ba <__ultoa_invert+0x6c>
    165a:	e8 94       	clt
    165c:	6f 93       	push	r22
    165e:	6e 7f       	andi	r22, 0xFE	; 254
    1660:	6e 5f       	subi	r22, 0xFE	; 254
    1662:	7f 4f       	sbci	r23, 0xFF	; 255
    1664:	8f 4f       	sbci	r24, 0xFF	; 255
    1666:	9f 4f       	sbci	r25, 0xFF	; 255
    1668:	af 4f       	sbci	r26, 0xFF	; 255
    166a:	b1 e0       	ldi	r27, 0x01	; 1
    166c:	3e d0       	rcall	.+124    	; 0x16ea <__ultoa_invert+0x9c>
    166e:	b4 e0       	ldi	r27, 0x04	; 4
    1670:	3c d0       	rcall	.+120    	; 0x16ea <__ultoa_invert+0x9c>
    1672:	67 0f       	add	r22, r23
    1674:	78 1f       	adc	r23, r24
    1676:	89 1f       	adc	r24, r25
    1678:	9a 1f       	adc	r25, r26
    167a:	a1 1d       	adc	r26, r1
    167c:	68 0f       	add	r22, r24
    167e:	79 1f       	adc	r23, r25
    1680:	8a 1f       	adc	r24, r26
    1682:	91 1d       	adc	r25, r1
    1684:	a1 1d       	adc	r26, r1
    1686:	6a 0f       	add	r22, r26
    1688:	71 1d       	adc	r23, r1
    168a:	81 1d       	adc	r24, r1
    168c:	91 1d       	adc	r25, r1
    168e:	a1 1d       	adc	r26, r1
    1690:	20 d0       	rcall	.+64     	; 0x16d2 <__ultoa_invert+0x84>
    1692:	09 f4       	brne	.+2      	; 0x1696 <__ultoa_invert+0x48>
    1694:	68 94       	set
    1696:	3f 91       	pop	r19
    1698:	2a e0       	ldi	r18, 0x0A	; 10
    169a:	26 9f       	mul	r18, r22
    169c:	11 24       	eor	r1, r1
    169e:	30 19       	sub	r19, r0
    16a0:	30 5d       	subi	r19, 0xD0	; 208
    16a2:	31 93       	st	Z+, r19
    16a4:	de f6       	brtc	.-74     	; 0x165c <__ultoa_invert+0xe>
    16a6:	cf 01       	movw	r24, r30
    16a8:	08 95       	ret
    16aa:	46 2f       	mov	r20, r22
    16ac:	47 70       	andi	r20, 0x07	; 7
    16ae:	40 5d       	subi	r20, 0xD0	; 208
    16b0:	41 93       	st	Z+, r20
    16b2:	b3 e0       	ldi	r27, 0x03	; 3
    16b4:	0f d0       	rcall	.+30     	; 0x16d4 <__ultoa_invert+0x86>
    16b6:	c9 f7       	brne	.-14     	; 0x16aa <__ultoa_invert+0x5c>
    16b8:	f6 cf       	rjmp	.-20     	; 0x16a6 <__ultoa_invert+0x58>
    16ba:	46 2f       	mov	r20, r22
    16bc:	4f 70       	andi	r20, 0x0F	; 15
    16be:	40 5d       	subi	r20, 0xD0	; 208
    16c0:	4a 33       	cpi	r20, 0x3A	; 58
    16c2:	18 f0       	brcs	.+6      	; 0x16ca <__ultoa_invert+0x7c>
    16c4:	49 5d       	subi	r20, 0xD9	; 217
    16c6:	31 fd       	sbrc	r19, 1
    16c8:	40 52       	subi	r20, 0x20	; 32
    16ca:	41 93       	st	Z+, r20
    16cc:	02 d0       	rcall	.+4      	; 0x16d2 <__ultoa_invert+0x84>
    16ce:	a9 f7       	brne	.-22     	; 0x16ba <__ultoa_invert+0x6c>
    16d0:	ea cf       	rjmp	.-44     	; 0x16a6 <__ultoa_invert+0x58>
    16d2:	b4 e0       	ldi	r27, 0x04	; 4
    16d4:	a6 95       	lsr	r26
    16d6:	97 95       	ror	r25
    16d8:	87 95       	ror	r24
    16da:	77 95       	ror	r23
    16dc:	67 95       	ror	r22
    16de:	ba 95       	dec	r27
    16e0:	c9 f7       	brne	.-14     	; 0x16d4 <__ultoa_invert+0x86>
    16e2:	00 97       	sbiw	r24, 0x00	; 0
    16e4:	61 05       	cpc	r22, r1
    16e6:	71 05       	cpc	r23, r1
    16e8:	08 95       	ret
    16ea:	9b 01       	movw	r18, r22
    16ec:	ac 01       	movw	r20, r24
    16ee:	0a 2e       	mov	r0, r26
    16f0:	06 94       	lsr	r0
    16f2:	57 95       	ror	r21
    16f4:	47 95       	ror	r20
    16f6:	37 95       	ror	r19
    16f8:	27 95       	ror	r18
    16fa:	ba 95       	dec	r27
    16fc:	c9 f7       	brne	.-14     	; 0x16f0 <__ultoa_invert+0xa2>
    16fe:	62 0f       	add	r22, r18
    1700:	73 1f       	adc	r23, r19
    1702:	84 1f       	adc	r24, r20
    1704:	95 1f       	adc	r25, r21
    1706:	a0 1d       	adc	r26, r0
    1708:	08 95       	ret

0000170a <__prologue_saves__>:
    170a:	2f 92       	push	r2
    170c:	3f 92       	push	r3
    170e:	4f 92       	push	r4
    1710:	5f 92       	push	r5
    1712:	6f 92       	push	r6
    1714:	7f 92       	push	r7
    1716:	8f 92       	push	r8
    1718:	9f 92       	push	r9
    171a:	af 92       	push	r10
    171c:	bf 92       	push	r11
    171e:	cf 92       	push	r12
    1720:	df 92       	push	r13
    1722:	ef 92       	push	r14
    1724:	ff 92       	push	r15
    1726:	0f 93       	push	r16
    1728:	1f 93       	push	r17
    172a:	cf 93       	push	r28
    172c:	df 93       	push	r29
    172e:	cd b7       	in	r28, 0x3d	; 61
    1730:	de b7       	in	r29, 0x3e	; 62
    1732:	ca 1b       	sub	r28, r26
    1734:	db 0b       	sbc	r29, r27
    1736:	0f b6       	in	r0, 0x3f	; 63
    1738:	f8 94       	cli
    173a:	de bf       	out	0x3e, r29	; 62
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	cd bf       	out	0x3d, r28	; 61
    1740:	09 94       	ijmp

00001742 <__epilogue_restores__>:
    1742:	2a 88       	ldd	r2, Y+18	; 0x12
    1744:	39 88       	ldd	r3, Y+17	; 0x11
    1746:	48 88       	ldd	r4, Y+16	; 0x10
    1748:	5f 84       	ldd	r5, Y+15	; 0x0f
    174a:	6e 84       	ldd	r6, Y+14	; 0x0e
    174c:	7d 84       	ldd	r7, Y+13	; 0x0d
    174e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1750:	9b 84       	ldd	r9, Y+11	; 0x0b
    1752:	aa 84       	ldd	r10, Y+10	; 0x0a
    1754:	b9 84       	ldd	r11, Y+9	; 0x09
    1756:	c8 84       	ldd	r12, Y+8	; 0x08
    1758:	df 80       	ldd	r13, Y+7	; 0x07
    175a:	ee 80       	ldd	r14, Y+6	; 0x06
    175c:	fd 80       	ldd	r15, Y+5	; 0x05
    175e:	0c 81       	ldd	r16, Y+4	; 0x04
    1760:	1b 81       	ldd	r17, Y+3	; 0x03
    1762:	aa 81       	ldd	r26, Y+2	; 0x02
    1764:	b9 81       	ldd	r27, Y+1	; 0x01
    1766:	ce 0f       	add	r28, r30
    1768:	d1 1d       	adc	r29, r1
    176a:	0f b6       	in	r0, 0x3f	; 63
    176c:	f8 94       	cli
    176e:	de bf       	out	0x3e, r29	; 62
    1770:	0f be       	out	0x3f, r0	; 63
    1772:	cd bf       	out	0x3d, r28	; 61
    1774:	ed 01       	movw	r28, r26
    1776:	08 95       	ret

00001778 <_exit>:
    1778:	f8 94       	cli

0000177a <__stop_program>:
    177a:	ff cf       	rjmp	.-2      	; 0x177a <__stop_program>
