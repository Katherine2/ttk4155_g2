
G3_ES_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000418  000004ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000418  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004b2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000095c  00000000  00000000  000005a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000776  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f8  00000000  00000000  0000167a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00001a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000435  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000026  00000000  00000000  00001f65  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00001f8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e1       	ldi	r30, 0x18	; 24
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  a6:	0c 94 0a 02 	jmp	0x414	; 0x414 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <OLED_init>:
#include "oled.h"
#include "fonts.h"

volatile char *oled_reg = (char *) OLED_BASE;

void OLED_init(){
  ae:	08 95       	ret

000000b0 <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{	int rec;
	USART_Init(MYUBRR);
  b0:	8f e1       	ldi	r24, 0x1F	; 31
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 6c 00 	call	0xd8	; 0xd8 <USART_Init>
	
	fdevopen(USART_Transmit, USART_Receive);
  b8:	67 e7       	ldi	r22, 0x77	; 119
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	83 e7       	ldi	r24, 0x73	; 115
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 7b 00 	call	0xf6	; 0xf6 <fdevopen>
	
	//set write pin of MCU to low to enter write mode of OLED
	DDRD |= (1 << PD6);
  c4:	8e 9a       	sbi	0x11, 6	; 17
	PORTD |= (0 << PD6);
  c6:	82 b3       	in	r24, 0x12	; 18
  c8:	82 bb       	out	0x12, r24	; 18
	//set A9 of MCU to high to set the OLED command pin
	DDRC |= (1 << PC1);
  ca:	a1 9a       	sbi	0x14, 1	; 20
	PORTC |= (1 << PC1);
  cc:	a9 9a       	sbi	0x15, 1	; 21
	OLED_init();
  ce:	0e 94 57 00 	call	0xae	; 0xae <OLED_init>
	while (1) {
		char c = USART_Receive();
		
		printf("Character received: %c\r\n", c);
	}*/
}
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	08 95       	ret

000000d8 <USART_Init>:
  d8:	9c bf       	out	0x3c, r25	; 60
  da:	80 b9       	out	0x00, r24	; 0
  dc:	88 e1       	ldi	r24, 0x18	; 24
  de:	81 b9       	out	0x01, r24	; 1
  e0:	8e e8       	ldi	r24, 0x8E	; 142
  e2:	8c bf       	out	0x3c, r24	; 60
  e4:	08 95       	ret

000000e6 <USART_Transmit>:
  e6:	15 9b       	sbis	0x02, 5	; 2
  e8:	fe cf       	rjmp	.-4      	; 0xe6 <USART_Transmit>
  ea:	83 b9       	out	0x03, r24	; 3
  ec:	08 95       	ret

000000ee <USART_Receive>:
  ee:	17 9b       	sbis	0x02, 7	; 2
  f0:	fe cf       	rjmp	.-4      	; 0xee <USART_Receive>
  f2:	83 b1       	in	r24, 0x03	; 3
  f4:	08 95       	ret

000000f6 <fdevopen>:
  f6:	0f 93       	push	r16
  f8:	1f 93       	push	r17
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	00 97       	sbiw	r24, 0x00	; 0
 100:	31 f4       	brne	.+12     	; 0x10e <fdevopen+0x18>
 102:	61 15       	cp	r22, r1
 104:	71 05       	cpc	r23, r1
 106:	19 f4       	brne	.+6      	; 0x10e <fdevopen+0x18>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	3a c0       	rjmp	.+116    	; 0x182 <fdevopen+0x8c>
 10e:	8b 01       	movw	r16, r22
 110:	ec 01       	movw	r28, r24
 112:	6e e0       	ldi	r22, 0x0E	; 14
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 c6 00 	call	0x18c	; 0x18c <calloc>
 11e:	fc 01       	movw	r30, r24
 120:	89 2b       	or	r24, r25
 122:	91 f3       	breq	.-28     	; 0x108 <fdevopen+0x12>
 124:	80 e8       	ldi	r24, 0x80	; 128
 126:	83 83       	std	Z+3, r24	; 0x03
 128:	01 15       	cp	r16, r1
 12a:	11 05       	cpc	r17, r1
 12c:	71 f0       	breq	.+28     	; 0x14a <fdevopen+0x54>
 12e:	13 87       	std	Z+11, r17	; 0x0b
 130:	02 87       	std	Z+10, r16	; 0x0a
 132:	81 e8       	ldi	r24, 0x81	; 129
 134:	83 83       	std	Z+3, r24	; 0x03
 136:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 13a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 13e:	89 2b       	or	r24, r25
 140:	21 f4       	brne	.+8      	; 0x14a <fdevopen+0x54>
 142:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 146:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 14a:	20 97       	sbiw	r28, 0x00	; 0
 14c:	c9 f0       	breq	.+50     	; 0x180 <fdevopen+0x8a>
 14e:	d1 87       	std	Z+9, r29	; 0x09
 150:	c0 87       	std	Z+8, r28	; 0x08
 152:	83 81       	ldd	r24, Z+3	; 0x03
 154:	82 60       	ori	r24, 0x02	; 2
 156:	83 83       	std	Z+3, r24	; 0x03
 158:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
 15c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
 160:	89 2b       	or	r24, r25
 162:	71 f4       	brne	.+28     	; 0x180 <fdevopen+0x8a>
 164:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x3>
 168:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end+0x2>
 16c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end+0x4>
 170:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x5>
 174:	89 2b       	or	r24, r25
 176:	21 f4       	brne	.+8      	; 0x180 <fdevopen+0x8a>
 178:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x5>
 17c:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end+0x4>
 180:	cf 01       	movw	r24, r30
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
 186:	1f 91       	pop	r17
 188:	0f 91       	pop	r16
 18a:	08 95       	ret

0000018c <calloc>:
 18c:	0f 93       	push	r16
 18e:	1f 93       	push	r17
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	86 9f       	mul	r24, r22
 196:	80 01       	movw	r16, r0
 198:	87 9f       	mul	r24, r23
 19a:	10 0d       	add	r17, r0
 19c:	96 9f       	mul	r25, r22
 19e:	10 0d       	add	r17, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	c8 01       	movw	r24, r16
 1a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <malloc>
 1a8:	ec 01       	movw	r28, r24
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	29 f0       	breq	.+10     	; 0x1b8 <calloc+0x2c>
 1ae:	a8 01       	movw	r20, r16
 1b0:	60 e0       	ldi	r22, 0x00	; 0
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	0e 94 03 02 	call	0x406	; 0x406 <memset>
 1b8:	ce 01       	movw	r24, r28
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	1f 91       	pop	r17
 1c0:	0f 91       	pop	r16
 1c2:	08 95       	ret

000001c4 <malloc>:
 1c4:	0f 93       	push	r16
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	82 30       	cpi	r24, 0x02	; 2
 1ce:	91 05       	cpc	r25, r1
 1d0:	10 f4       	brcc	.+4      	; 0x1d6 <malloc+0x12>
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__flp>
 1da:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__flp+0x1>
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	a0 e0       	ldi	r26, 0x00	; 0
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	30 97       	sbiw	r30, 0x00	; 0
 1e8:	19 f1       	breq	.+70     	; 0x230 <malloc+0x6c>
 1ea:	40 81       	ld	r20, Z
 1ec:	51 81       	ldd	r21, Z+1	; 0x01
 1ee:	02 81       	ldd	r16, Z+2	; 0x02
 1f0:	13 81       	ldd	r17, Z+3	; 0x03
 1f2:	48 17       	cp	r20, r24
 1f4:	59 07       	cpc	r21, r25
 1f6:	c8 f0       	brcs	.+50     	; 0x22a <malloc+0x66>
 1f8:	84 17       	cp	r24, r20
 1fa:	95 07       	cpc	r25, r21
 1fc:	69 f4       	brne	.+26     	; 0x218 <malloc+0x54>
 1fe:	10 97       	sbiw	r26, 0x00	; 0
 200:	31 f0       	breq	.+12     	; 0x20e <malloc+0x4a>
 202:	12 96       	adiw	r26, 0x02	; 2
 204:	0c 93       	st	X, r16
 206:	12 97       	sbiw	r26, 0x02	; 2
 208:	13 96       	adiw	r26, 0x03	; 3
 20a:	1c 93       	st	X, r17
 20c:	27 c0       	rjmp	.+78     	; 0x25c <malloc+0x98>
 20e:	00 93 0e 01 	sts	0x010E, r16	; 0x80010e <__flp>
 212:	10 93 0f 01 	sts	0x010F, r17	; 0x80010f <__flp+0x1>
 216:	22 c0       	rjmp	.+68     	; 0x25c <malloc+0x98>
 218:	21 15       	cp	r18, r1
 21a:	31 05       	cpc	r19, r1
 21c:	19 f0       	breq	.+6      	; 0x224 <malloc+0x60>
 21e:	42 17       	cp	r20, r18
 220:	53 07       	cpc	r21, r19
 222:	18 f4       	brcc	.+6      	; 0x22a <malloc+0x66>
 224:	9a 01       	movw	r18, r20
 226:	bd 01       	movw	r22, r26
 228:	ef 01       	movw	r28, r30
 22a:	df 01       	movw	r26, r30
 22c:	f8 01       	movw	r30, r16
 22e:	db cf       	rjmp	.-74     	; 0x1e6 <malloc+0x22>
 230:	21 15       	cp	r18, r1
 232:	31 05       	cpc	r19, r1
 234:	f9 f0       	breq	.+62     	; 0x274 <malloc+0xb0>
 236:	28 1b       	sub	r18, r24
 238:	39 0b       	sbc	r19, r25
 23a:	24 30       	cpi	r18, 0x04	; 4
 23c:	31 05       	cpc	r19, r1
 23e:	80 f4       	brcc	.+32     	; 0x260 <malloc+0x9c>
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	9b 81       	ldd	r25, Y+3	; 0x03
 244:	61 15       	cp	r22, r1
 246:	71 05       	cpc	r23, r1
 248:	21 f0       	breq	.+8      	; 0x252 <malloc+0x8e>
 24a:	fb 01       	movw	r30, r22
 24c:	93 83       	std	Z+3, r25	; 0x03
 24e:	82 83       	std	Z+2, r24	; 0x02
 250:	04 c0       	rjmp	.+8      	; 0x25a <malloc+0x96>
 252:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__flp+0x1>
 256:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__flp>
 25a:	fe 01       	movw	r30, r28
 25c:	32 96       	adiw	r30, 0x02	; 2
 25e:	44 c0       	rjmp	.+136    	; 0x2e8 <malloc+0x124>
 260:	fe 01       	movw	r30, r28
 262:	e2 0f       	add	r30, r18
 264:	f3 1f       	adc	r31, r19
 266:	81 93       	st	Z+, r24
 268:	91 93       	st	Z+, r25
 26a:	22 50       	subi	r18, 0x02	; 2
 26c:	31 09       	sbc	r19, r1
 26e:	39 83       	std	Y+1, r19	; 0x01
 270:	28 83       	st	Y, r18
 272:	3a c0       	rjmp	.+116    	; 0x2e8 <malloc+0x124>
 274:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 278:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 27c:	23 2b       	or	r18, r19
 27e:	41 f4       	brne	.+16     	; 0x290 <malloc+0xcc>
 280:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 284:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 288:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <__brkval+0x1>
 28c:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <__brkval>
 290:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 294:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 298:	21 15       	cp	r18, r1
 29a:	31 05       	cpc	r19, r1
 29c:	41 f4       	brne	.+16     	; 0x2ae <malloc+0xea>
 29e:	2d b7       	in	r18, 0x3d	; 61
 2a0:	3e b7       	in	r19, 0x3e	; 62
 2a2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 2a6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 2aa:	24 1b       	sub	r18, r20
 2ac:	35 0b       	sbc	r19, r21
 2ae:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__brkval>
 2b2:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__brkval+0x1>
 2b6:	e2 17       	cp	r30, r18
 2b8:	f3 07       	cpc	r31, r19
 2ba:	a0 f4       	brcc	.+40     	; 0x2e4 <malloc+0x120>
 2bc:	2e 1b       	sub	r18, r30
 2be:	3f 0b       	sbc	r19, r31
 2c0:	28 17       	cp	r18, r24
 2c2:	39 07       	cpc	r19, r25
 2c4:	78 f0       	brcs	.+30     	; 0x2e4 <malloc+0x120>
 2c6:	ac 01       	movw	r20, r24
 2c8:	4e 5f       	subi	r20, 0xFE	; 254
 2ca:	5f 4f       	sbci	r21, 0xFF	; 255
 2cc:	24 17       	cp	r18, r20
 2ce:	35 07       	cpc	r19, r21
 2d0:	48 f0       	brcs	.+18     	; 0x2e4 <malloc+0x120>
 2d2:	4e 0f       	add	r20, r30
 2d4:	5f 1f       	adc	r21, r31
 2d6:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <__brkval+0x1>
 2da:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <__brkval>
 2de:	81 93       	st	Z+, r24
 2e0:	91 93       	st	Z+, r25
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <malloc+0x124>
 2e4:	e0 e0       	ldi	r30, 0x00	; 0
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	cf 01       	movw	r24, r30
 2ea:	df 91       	pop	r29
 2ec:	cf 91       	pop	r28
 2ee:	1f 91       	pop	r17
 2f0:	0f 91       	pop	r16
 2f2:	08 95       	ret

000002f4 <free>:
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	00 97       	sbiw	r24, 0x00	; 0
 2fa:	09 f4       	brne	.+2      	; 0x2fe <free+0xa>
 2fc:	81 c0       	rjmp	.+258    	; 0x400 <__LOCK_REGION_LENGTH__>
 2fe:	fc 01       	movw	r30, r24
 300:	32 97       	sbiw	r30, 0x02	; 2
 302:	13 82       	std	Z+3, r1	; 0x03
 304:	12 82       	std	Z+2, r1	; 0x02
 306:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <__flp>
 30a:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <__flp+0x1>
 30e:	10 97       	sbiw	r26, 0x00	; 0
 310:	81 f4       	brne	.+32     	; 0x332 <free+0x3e>
 312:	20 81       	ld	r18, Z
 314:	31 81       	ldd	r19, Z+1	; 0x01
 316:	82 0f       	add	r24, r18
 318:	93 1f       	adc	r25, r19
 31a:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 31e:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 322:	28 17       	cp	r18, r24
 324:	39 07       	cpc	r19, r25
 326:	51 f5       	brne	.+84     	; 0x37c <free+0x88>
 328:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__brkval+0x1>
 32c:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__brkval>
 330:	67 c0       	rjmp	.+206    	; 0x400 <__LOCK_REGION_LENGTH__>
 332:	ed 01       	movw	r28, r26
 334:	20 e0       	ldi	r18, 0x00	; 0
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	ce 17       	cp	r28, r30
 33a:	df 07       	cpc	r29, r31
 33c:	40 f4       	brcc	.+16     	; 0x34e <free+0x5a>
 33e:	4a 81       	ldd	r20, Y+2	; 0x02
 340:	5b 81       	ldd	r21, Y+3	; 0x03
 342:	9e 01       	movw	r18, r28
 344:	41 15       	cp	r20, r1
 346:	51 05       	cpc	r21, r1
 348:	f1 f0       	breq	.+60     	; 0x386 <free+0x92>
 34a:	ea 01       	movw	r28, r20
 34c:	f5 cf       	rjmp	.-22     	; 0x338 <free+0x44>
 34e:	d3 83       	std	Z+3, r29	; 0x03
 350:	c2 83       	std	Z+2, r28	; 0x02
 352:	40 81       	ld	r20, Z
 354:	51 81       	ldd	r21, Z+1	; 0x01
 356:	84 0f       	add	r24, r20
 358:	95 1f       	adc	r25, r21
 35a:	c8 17       	cp	r28, r24
 35c:	d9 07       	cpc	r29, r25
 35e:	59 f4       	brne	.+22     	; 0x376 <free+0x82>
 360:	88 81       	ld	r24, Y
 362:	99 81       	ldd	r25, Y+1	; 0x01
 364:	84 0f       	add	r24, r20
 366:	95 1f       	adc	r25, r21
 368:	02 96       	adiw	r24, 0x02	; 2
 36a:	91 83       	std	Z+1, r25	; 0x01
 36c:	80 83       	st	Z, r24
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	9b 81       	ldd	r25, Y+3	; 0x03
 372:	93 83       	std	Z+3, r25	; 0x03
 374:	82 83       	std	Z+2, r24	; 0x02
 376:	21 15       	cp	r18, r1
 378:	31 05       	cpc	r19, r1
 37a:	29 f4       	brne	.+10     	; 0x386 <free+0x92>
 37c:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__flp+0x1>
 380:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__flp>
 384:	3d c0       	rjmp	.+122    	; 0x400 <__LOCK_REGION_LENGTH__>
 386:	e9 01       	movw	r28, r18
 388:	fb 83       	std	Y+3, r31	; 0x03
 38a:	ea 83       	std	Y+2, r30	; 0x02
 38c:	49 91       	ld	r20, Y+
 38e:	59 91       	ld	r21, Y+
 390:	c4 0f       	add	r28, r20
 392:	d5 1f       	adc	r29, r21
 394:	ec 17       	cp	r30, r28
 396:	fd 07       	cpc	r31, r29
 398:	61 f4       	brne	.+24     	; 0x3b2 <free+0xbe>
 39a:	80 81       	ld	r24, Z
 39c:	91 81       	ldd	r25, Z+1	; 0x01
 39e:	84 0f       	add	r24, r20
 3a0:	95 1f       	adc	r25, r21
 3a2:	02 96       	adiw	r24, 0x02	; 2
 3a4:	e9 01       	movw	r28, r18
 3a6:	99 83       	std	Y+1, r25	; 0x01
 3a8:	88 83       	st	Y, r24
 3aa:	82 81       	ldd	r24, Z+2	; 0x02
 3ac:	93 81       	ldd	r25, Z+3	; 0x03
 3ae:	9b 83       	std	Y+3, r25	; 0x03
 3b0:	8a 83       	std	Y+2, r24	; 0x02
 3b2:	e0 e0       	ldi	r30, 0x00	; 0
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	12 96       	adiw	r26, 0x02	; 2
 3b8:	8d 91       	ld	r24, X+
 3ba:	9c 91       	ld	r25, X
 3bc:	13 97       	sbiw	r26, 0x03	; 3
 3be:	00 97       	sbiw	r24, 0x00	; 0
 3c0:	19 f0       	breq	.+6      	; 0x3c8 <free+0xd4>
 3c2:	fd 01       	movw	r30, r26
 3c4:	dc 01       	movw	r26, r24
 3c6:	f7 cf       	rjmp	.-18     	; 0x3b6 <free+0xc2>
 3c8:	8d 91       	ld	r24, X+
 3ca:	9c 91       	ld	r25, X
 3cc:	11 97       	sbiw	r26, 0x01	; 1
 3ce:	9d 01       	movw	r18, r26
 3d0:	2e 5f       	subi	r18, 0xFE	; 254
 3d2:	3f 4f       	sbci	r19, 0xFF	; 255
 3d4:	82 0f       	add	r24, r18
 3d6:	93 1f       	adc	r25, r19
 3d8:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 3dc:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 3e0:	28 17       	cp	r18, r24
 3e2:	39 07       	cpc	r19, r25
 3e4:	69 f4       	brne	.+26     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e6:	30 97       	sbiw	r30, 0x00	; 0
 3e8:	29 f4       	brne	.+10     	; 0x3f4 <free+0x100>
 3ea:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp+0x1>
 3ee:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__flp>
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <free+0x104>
 3f4:	13 82       	std	Z+3, r1	; 0x03
 3f6:	12 82       	std	Z+2, r1	; 0x02
 3f8:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__brkval+0x1>
 3fc:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__brkval>
 400:	df 91       	pop	r29
 402:	cf 91       	pop	r28
 404:	08 95       	ret

00000406 <memset>:
 406:	dc 01       	movw	r26, r24
 408:	01 c0       	rjmp	.+2      	; 0x40c <memset+0x6>
 40a:	6d 93       	st	X+, r22
 40c:	41 50       	subi	r20, 0x01	; 1
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	e0 f7       	brcc	.-8      	; 0x40a <memset+0x4>
 412:	08 95       	ret

00000414 <_exit>:
 414:	f8 94       	cli

00000416 <__stop_program>:
 416:	ff cf       	rjmp	.-2      	; 0x416 <__stop_program>
